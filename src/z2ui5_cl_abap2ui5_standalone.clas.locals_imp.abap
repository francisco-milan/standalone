
INTERFACE z2ui5_if_types DEFERRED.
INTERFACE z2ui5_if_client DEFERRED.
INTERFACE z2ui5_if_app DEFERRED.
INTERFACE z2ui5_if_core_types DEFERRED.
INTERFACE z2ui5_if_ajson_types DEFERRED.
INTERFACE z2ui5_if_ajson_mapping DEFERRED.
INTERFACE z2ui5_if_ajson_filter DEFERRED.
INTERFACE z2ui5_if_ajson DEFERRED.


INTERFACE z2ui5_if_types LOAD.


CLASS z2ui5_cl_xml_view_cc DEFINITION DEFERRED.
CLASS z2ui5_cl_xml_view DEFINITION DEFERRED.
CLASS z2ui5_cl_http_handler DEFINITION DEFERRED.
CLASS z2ui5_cl_app_startup DEFINITION DEFERRED.
CLASS z2ui5_cl_app_hello_world DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_to_select DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_to_inform DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_to_confirm DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_textedit DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_table DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_pdf DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_messages DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_js_loader DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_itab_json_dl DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_input_val DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_html DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_get_range_m DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_get_range DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_file_ul DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_file_dl DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_error DEFINITION DEFERRED.
CLASS z2ui5_cl_pop_bal DEFINITION DEFERRED.
CLASS z2ui5_cl_app_view1_xml DEFINITION DEFERRED.
CLASS z2ui5_cl_app_view1_js DEFINITION DEFERRED.
CLASS z2ui5_cl_app_style_css DEFINITION DEFERRED.
CLASS z2ui5_cl_app_server_js DEFINITION DEFERRED.
CLASS z2ui5_cl_app_models_js DEFINITION DEFERRED.
CLASS z2ui5_cl_app_manifest_json DEFINITION DEFERRED.
CLASS z2ui5_cl_app_index_html DEFINITION DEFERRED.
CLASS z2ui5_cl_app_debugtool_xml DEFINITION DEFERRED.
CLASS z2ui5_cl_app_debugtool_js DEFINITION DEFERRED.
CLASS z2ui5_cl_app_component_js DEFINITION DEFERRED.
CLASS z2ui5_cl_app_app_xml DEFINITION DEFERRED.
CLASS z2ui5_cl_app_app_js DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_util DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_json DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_event DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_diss DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_bind DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_attri DEFINITION DEFERRED.
CLASS z2ui5_cl_core_handler DEFINITION DEFERRED.
CLASS z2ui5_cl_core_client DEFINITION DEFERRED.
CLASS z2ui5_cl_core_app DEFINITION DEFERRED.
CLASS z2ui5_cl_core_action DEFINITION DEFERRED.
CLASS z2ui5_cl_core_srv_draft DEFINITION DEFERRED.
CLASS z2ui5_cx_util_error DEFINITION DEFERRED.
CLASS z2ui5_cl_util_abap_http DEFINITION DEFERRED.
CLASS z2ui5_cl_util_abap DEFINITION DEFERRED.
CLASS z2ui5_cl_util DEFINITION DEFERRED.
CLASS z2ui5_cx_srt DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_typedescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_tabledescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_structdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_refdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_objectdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_intfdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_elemdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_datadescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_complexdescr DEFINITION DEFERRED.
CLASS z2ui5_cl_srt_classdescr DEFINITION DEFERRED.
CLASS z2ui5_cx_ajson_error DEFINITION DEFERRED.
CLASS z2ui5_cl_ajson_utilities DEFINITION DEFERRED.
CLASS z2ui5_cl_ajson_mapping DEFINITION DEFERRED.
CLASS z2ui5_cl_ajson_filter_lib DEFINITION DEFERRED.
CLASS z2ui5_cl_ajson DEFINITION DEFERRED.



CLASS z2ui5_cx_ajson_error DEFINITION
  INHERITING FROM cx_static_check
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_t100_message .

    TYPES:
      ty_rc TYPE c LENGTH 4 .

    CONSTANTS:
      BEGIN OF zcx_ajson_error,
        msgid TYPE symsgid VALUE '00',
        msgno TYPE symsgno VALUE '001',
        attr1 TYPE scx_attrname VALUE 'A1',
        attr2 TYPE scx_attrname VALUE 'A2',
        attr3 TYPE scx_attrname VALUE 'A3',
        attr4 TYPE scx_attrname VALUE 'A4',
      END OF zcx_ajson_error .
    DATA rc TYPE ty_rc READ-ONLY .
    DATA message TYPE string READ-ONLY .
    DATA location TYPE string READ-ONLY .
    DATA a1 TYPE symsgv READ-ONLY .
    DATA a2 TYPE symsgv READ-ONLY .
    DATA a3 TYPE symsgv READ-ONLY .
    DATA a4 TYPE symsgv READ-ONLY .

    METHODS constructor
      IMPORTING
        !textid   LIKE if_t100_message=>t100key OPTIONAL
        !previous LIKE previous OPTIONAL
        !rc       TYPE ty_rc OPTIONAL
        !message  TYPE string OPTIONAL
        !location TYPE string OPTIONAL
        !a1       TYPE symsgv OPTIONAL
        !a2       TYPE symsgv OPTIONAL
        !a3       TYPE symsgv OPTIONAL
        !a4       TYPE symsgv OPTIONAL .
    CLASS-METHODS raise
      IMPORTING
        !iv_msg      TYPE string
        !iv_location TYPE string OPTIONAL
        !is_node     TYPE any OPTIONAL
      RAISING
        z2ui5_cx_ajson_error .
    METHODS set_location
      IMPORTING
        !iv_location TYPE string OPTIONAL
        !is_node     TYPE any OPTIONAL
          PREFERRED PARAMETER iv_location .
  PROTECTED SECTION.
  PRIVATE SECTION.
    TYPES:
      BEGIN OF ty_message_parts,
        a1 LIKE a1,
        a2 LIKE a1,
        a3 LIKE a1,
        a4 LIKE a1,
      END OF ty_message_parts.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI any type</p>



INTERFACE z2ui5_if_ajson_types.

  TYPES:
    ty_node_type TYPE string.

  CONSTANTS:
    BEGIN OF node_type,
      boolean TYPE ty_node_type VALUE 'bool',
      string  TYPE ty_node_type VALUE 'str',
      number  TYPE ty_node_type VALUE 'num',
      null    TYPE ty_node_type VALUE 'null',
      array   TYPE ty_node_type VALUE 'array',
      object  TYPE ty_node_type VALUE 'object',
    END OF node_type.

  TYPES:
    BEGIN OF ty_node,
      path     TYPE string,
      name     TYPE string,
      type     TYPE ty_node_type,
      value    TYPE string,
      index    TYPE i,
      order    TYPE i,
      children TYPE i,
    END OF ty_node.
  TYPES:
    ty_nodes_tt TYPE STANDARD TABLE OF ty_node WITH KEY path name.
  TYPES:
    ty_nodes_ts TYPE SORTED TABLE OF ty_node
      WITH UNIQUE KEY path name
      WITH NON-UNIQUE SORTED KEY array_index COMPONENTS path index
      WITH NON-UNIQUE SORTED KEY item_order COMPONENTS path order.

  TYPES:
    BEGIN OF ty_path_name,
      path TYPE string,
      name TYPE string,
    END OF ty_path_name.

ENDINTERFACE.


INTERFACE z2ui5_if_ajson.

  CONSTANTS version TYPE string VALUE 'v1.1.10'.            "#EC NOTEXT
  CONSTANTS origin TYPE string VALUE 'https://github.com/sbcgua/ajson'. "#EC NOTEXT
  CONSTANTS license TYPE string VALUE 'MIT'.                "#EC NOTEXT

  TYPES:
    BEGIN OF ty_opts,
      read_only                  TYPE abap_bool,
      keep_item_order            TYPE abap_bool,
      format_datetime            TYPE abap_bool,
      to_abap_corresponding_only TYPE abap_bool,
    END OF ty_opts.

  " DATA

  DATA mt_json_tree TYPE z2ui5_if_ajson_types=>ty_nodes_ts READ-ONLY.

  " CLONING

  METHODS clone
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.
  METHODS filter
    IMPORTING
      ii_filter      TYPE REF TO z2ui5_if_ajson_filter
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.
  METHODS map
    IMPORTING
      ii_mapper      TYPE REF TO z2ui5_if_ajson_mapping
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  " METHODS

  METHODS freeze.
  METHODS keep_item_order
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson.
  METHODS format_datetime
    IMPORTING
      iv_use_iso     TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson.
  METHODS to_abap_corresponding_only
    IMPORTING
      iv_enable      TYPE abap_bool DEFAULT abap_true
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson.
  METHODS opts
    RETURNING
      VALUE(rs_opts) TYPE ty_opts.

  " METHODS ex.reader

  METHODS is_empty
    RETURNING
      VALUE(rv_yes) TYPE abap_bool.

  METHODS exists
    IMPORTING
      iv_path          TYPE string
    RETURNING
      VALUE(rv_exists) TYPE abap_bool.

  METHODS members
    IMPORTING
      iv_path           TYPE string
    RETURNING
      VALUE(rt_members) TYPE string_table.

  METHODS get
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE string.

  METHODS get_node_type
    IMPORTING
      iv_path             TYPE string
    RETURNING
      VALUE(rv_node_type) TYPE z2ui5_if_ajson_types=>ty_node_type.

  METHODS get_boolean
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE abap_bool.

  METHODS get_integer
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE i.

  METHODS get_number
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE f.

  METHODS get_date
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE d.

  METHODS get_timestamp
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE timestamp.

  METHODS get_string
    IMPORTING
      iv_path         TYPE string
    RETURNING
      VALUE(rv_value) TYPE string.

  METHODS slice
    IMPORTING
      iv_path        TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson.

  METHODS to_abap
    IMPORTING
      iv_corresponding TYPE abap_bool DEFAULT abap_false
    EXPORTING
      ev_container     TYPE any
    RAISING
      z2ui5_cx_ajson_error.

  METHODS array_to_string_table
    IMPORTING
      iv_path                TYPE string
    RETURNING
      VALUE(rt_string_table) TYPE string_table
    RAISING
      z2ui5_cx_ajson_error.

  " METHODS ex.writer

  METHODS clear
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set
    IMPORTING
      iv_path         TYPE string
      iv_val          TYPE any
      iv_ignore_empty TYPE abap_bool DEFAULT abap_true
      iv_node_type    TYPE z2ui5_if_ajson_types=>ty_node_type OPTIONAL
    RETURNING
      VALUE(ri_json)  TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS setx
    IMPORTING
      iv_param       TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_boolean
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE any
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_string
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE clike
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_integer
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE i
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_date
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE d
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_timestamp
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE timestamp
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS set_null
    IMPORTING
      iv_path        TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS delete
    IMPORTING
      iv_path        TYPE string
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS touch_array
    IMPORTING
      iv_path        TYPE string
      iv_clear       TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS push
    IMPORTING
      iv_path        TYPE string
      iv_val         TYPE any
    RETURNING
      VALUE(ri_json) TYPE REF TO z2ui5_if_ajson
    RAISING
      z2ui5_cx_ajson_error.

  METHODS stringify
    IMPORTING
      iv_indent      TYPE i DEFAULT 0
    RETURNING
      VALUE(rv_json) TYPE string
    RAISING
      z2ui5_cx_ajson_error.

ENDINTERFACE.

INTERFACE z2ui5_if_ajson_filter.

  TYPES ty_filter_tab TYPE STANDARD TABLE OF REF TO z2ui5_if_ajson_filter WITH KEY table_line.
  TYPES ty_visit_type TYPE i.

  CONSTANTS:
    BEGIN OF visit_type,
      value TYPE ty_visit_type VALUE 0,
      open  TYPE ty_visit_type VALUE 1,
      close TYPE ty_visit_type VALUE 2,
    END OF visit_type.

  METHODS keep_node
    IMPORTING
      is_node        TYPE z2ui5_if_ajson_types=>ty_node
      iv_visit       TYPE ty_visit_type DEFAULT visit_type-value
    RETURNING
      VALUE(rv_keep) TYPE abap_bool
    RAISING
      z2ui5_cx_ajson_error.

ENDINTERFACE.

INTERFACE z2ui5_if_ajson_mapping.

  TYPES:
    BEGIN OF ty_mapping_field, " deprecated, will be removed
      abap TYPE string,
      json TYPE string,
    END OF ty_mapping_field,
    ty_mapping_fields TYPE STANDARD TABLE OF ty_mapping_field
      WITH UNIQUE SORTED KEY abap COMPONENTS abap
      WITH UNIQUE SORTED KEY json COMPONENTS json.

  TYPES:
    BEGIN OF ty_rename,
      from TYPE string,
      to   TYPE string,
    END OF ty_rename,
    tty_rename_map TYPE STANDARD TABLE OF ty_rename
      WITH UNIQUE SORTED KEY by_name COMPONENTS from.

  TYPES:
    ty_table_of TYPE STANDARD TABLE OF REF TO z2ui5_if_ajson_mapping.

  METHODS to_abap " deprecated, will be removed
    IMPORTING
      !iv_path         TYPE string
      !iv_name         TYPE string
    RETURNING
      VALUE(rv_result) TYPE string.

  METHODS to_json " deprecated, will be removed
    IMPORTING
      !iv_path         TYPE string
      !iv_name         TYPE string
    RETURNING
      VALUE(rv_result) TYPE string.

  METHODS rename_node
    IMPORTING
      !is_node TYPE z2ui5_if_ajson_types=>ty_node
    CHANGING
      !cv_name TYPE z2ui5_if_ajson_types=>ty_node-name.

ENDINTERFACE.

INTERFACE z2ui5_if_app.
  INTERFACES if_serializable_object.

  CONSTANTS version TYPE string VALUE '1.138.0'.
  CONSTANTS origin  TYPE string VALUE 'https://github.com/abap2UI5/abap2UI5'.
  CONSTANTS author  TYPE string VALUE 'https://github.com/oblomov-dev'.
  CONSTANTS license TYPE string VALUE 'MIT'.

  DATA id_draft          TYPE string.
  DATA id_app            TYPE string.
  DATA check_initialized TYPE abap_bool.
  DATA check_sticky      TYPE abap_bool.

  METHODS main
    IMPORTING
      !client TYPE REF TO z2ui5_if_client.

ENDINTERFACE.



INTERFACE z2ui5_if_types.

  TYPES:
    BEGIN OF ty_s_name_value,
      n TYPE string,
      v TYPE string,
    END OF ty_s_name_value.
  TYPES ty_t_name_value TYPE STANDARD TABLE OF ty_s_name_value WITH DEFAULT KEY.

  TYPES:
    BEGIN OF ty_s_http_config,
      src                     TYPE string,
      theme                   TYPE string,
      content_security_policy TYPE string,
      styles_css              TYPE string,
      title                   TYPE string,
      t_add_config            TYPE ty_t_name_value,
      custom_js               TYPE string,
    END OF ty_s_http_config.

  TYPES:
    BEGIN OF ty_s_draft,
      id                TYPE string,
      id_prev           TYPE string,
      id_prev_app       TYPE string,
      id_prev_app_stack TYPE string,
    END OF ty_s_draft.

  TYPES:
    BEGIN OF ty_s_config,
      origin           TYPE string,
      pathname         TYPE string,
      search           TYPE string,
      hash             TYPE string,
      t_startup_params TYPE ty_t_name_value,
    END OF ty_s_config.

  TYPES:
    BEGIN OF ty_s_get,
      event                  TYPE string,
      t_event_arg            TYPE string_table,
      check_launchpad_active TYPE abap_bool,
      check_on_navigated     TYPE abap_bool,
      viewname               TYPE string,
      s_draft                TYPE ty_s_draft,
      s_config               TYPE ty_s_config,
      t_comp_params          TYPE ty_t_name_value,
      r_event_data           TYPE REF TO data,
    END OF ty_s_get.

  TYPES:
    BEGIN OF ty_s_event_control,
      check_allow_multi_req TYPE abap_bool,
    END OF ty_s_event_control.

ENDINTERFACE.





INTERFACE z2ui5_if_core_types.

  CONSTANTS:
    BEGIN OF cs_ui5,
      event_backend_function  TYPE string VALUE `.eB`,
      event_frontend_function TYPE string VALUE `.eF`,
      two_way_model           TYPE string VALUE `XX`,
    END OF cs_ui5.

  CONSTANTS:
    BEGIN OF cs_bind_type,
      one_way  TYPE string VALUE `ONE_WAY`,
      two_way  TYPE string VALUE `TWO_WAY`,
      one_time TYPE string VALUE `ONE_TIME`,
    END OF cs_bind_type.

  TYPES:
    BEGIN OF ty_s_http_req,
      method TYPE string,
      body   TYPE string,
    END OF ty_s_http_req.

  TYPES:
    BEGIN OF ty_s_http_res,
      body          TYPE string,
      status_code   TYPE i,
      status_reason TYPE string,
      t_header      TYPE z2ui5_if_types=>ty_t_name_value,
      BEGIN OF s_stateful,
        active   TYPE i,
        switched TYPE abap_bool,
      END OF s_stateful,
    END OF ty_s_http_res.

  TYPES:
    BEGIN OF ty_s_bind_config,
      path_only            TYPE abap_bool,
      view                 TYPE string,
      custom_mapper        TYPE REF TO z2ui5_if_ajson_mapping,
      custom_mapper_back   TYPE REF TO z2ui5_if_ajson_mapping,
      custom_filter        TYPE REF TO z2ui5_if_ajson_filter,
      custom_filter_back   TYPE REF TO z2ui5_if_ajson_filter,
      tab                  TYPE REF TO data,
      tab_index            TYPE i,
      switch_default_model TYPE abap_bool,
    END OF ty_s_bind_config.

  TYPES:
    BEGIN OF ty_s_attri,
      name               TYPE string,
      name_client        TYPE string,
      bind_type          TYPE string,
      srtti_data         TYPE string,
      check_dissolved    TYPE abap_bool,
      view               TYPE string,
      json_bind_local    TYPE REF TO z2ui5_if_ajson,
      custom_filter      TYPE REF TO z2ui5_if_ajson_filter,
      custom_filter_back TYPE REF TO z2ui5_if_ajson_filter,
      custom_mapper      TYPE REF TO z2ui5_if_ajson_mapping,
      custom_mapper_back TYPE REF TO z2ui5_if_ajson_mapping,
      r_ref              TYPE REF TO data,
      o_typedescr        TYPE REF TO cl_abap_typedescr,
    END OF ty_s_attri.
  TYPES ty_t_attri TYPE SORTED TABLE OF ty_s_attri WITH UNIQUE KEY name.

  TYPES:
    BEGIN OF ty_s_next_frontend,
      BEGIN OF s_view,
        xml                       TYPE string,
        switchDefaultModelAnnoURI TYPE string,
        switch_default_model_path TYPE string,
        check_destroy             TYPE abap_bool,
        check_update_model        TYPE abap_bool,
      END OF s_view,
      BEGIN OF s_view_nest,
        xml                TYPE string,
        id                 TYPE string,
        method_insert      TYPE string,
        method_destroy     TYPE string,
        check_destroy      TYPE abap_bool,
        check_update_model TYPE abap_bool,
      END OF s_view_nest,
      BEGIN OF s_view_nest2,
        xml                TYPE string,
        id                 TYPE string,
        method_insert      TYPE string,
        method_destroy     TYPE string,
        check_destroy      TYPE abap_bool,
        check_update_model TYPE abap_bool,
      END OF s_view_nest2,
      BEGIN OF s_popup,
        xml                TYPE string,
        id                 TYPE string,
        check_destroy      TYPE abap_bool,
        check_update_model TYPE abap_bool,
      END OF s_popup,
      BEGIN OF s_popover,
        xml                TYPE string,
        id                 TYPE string,
        open_by_id         TYPE string,
        check_destroy      TYPE abap_bool,
        check_update_model TYPE abap_bool,
      END OF s_popover,
      BEGIN OF s_msg_box,
        type              TYPE string,
        text              TYPE string,
        title             TYPE string,
        styleclass        TYPE string,
        onclose           TYPE string,
        actions           TYPE string_table,
        emphasizedaction  TYPE string,
        initialfocus      TYPE string,
        textdirection     TYPE string,
        icon              TYPE string,
        details           TYPE string,
        closeonnavigation TYPE string,
      END OF s_msg_box,
      BEGIN OF s_msg_toast,
        class                    TYPE string,
        text                     TYPE string,
        duration                 TYPE string,
        width                    TYPE string,
        my                       TYPE string,
        at                       TYPE string,
        of                       TYPE string,
        offset                   TYPE string,
        collision                TYPE string,
        onclose                  TYPE string,
        autoclose                TYPE string,
        animationtimingfunction  TYPE string,
        animationduration        TYPE string,
        closeonbrowsernavigation TYPE string,
      END OF s_msg_toast,
      BEGIN OF s_follow_up_action,
        custom_js TYPE string_table,
      END OF s_follow_up_action,
*      handler_attrs TYPE ty_s_http_handler_attributes,
      set_app_state_active TYPE abap_bool,
      set_push_state       TYPE string,
      set_nav_back         TYPE abap_bool,
      s_stateful           TYPE ty_s_http_res-s_stateful,
    END OF ty_s_next_frontend.

  TYPES:
    BEGIN OF ty_s_next,
      o_app_call  TYPE REF TO z2ui5_if_app,
      o_app_leave TYPE REF TO z2ui5_if_app,
      s_set       TYPE ty_s_next_frontend,
      r_data      TYPE REF TO data,
    END OF ty_s_next.

  TYPES:
    BEGIN OF ty_s_response,
      BEGIN OF s_front,
        params    TYPE ty_s_next_frontend,
        id        TYPE string,
        app_start TYPE string,
        app       TYPE string,
      END OF s_front,
      model TYPE string,
    END OF ty_s_response.

  TYPES:
    BEGIN OF ty_s_request,
      o_model TYPE REF TO z2ui5_if_ajson,
      BEGIN OF s_front,
        id          TYPE string,
        view        TYPE string,
        t_event_arg TYPE string_table,
        event       TYPE string,
        o_comp_data TYPE REF TO z2ui5_if_ajson,
        origin      TYPE string,
        pathname    TYPE string,
        search      TYPE string,
        hash        TYPE string,
      END OF s_front,
      BEGIN OF s_control,
        check_launchpad TYPE abap_bool,
        app_start       TYPE string,
        app_start_draft TYPE string,
      END OF s_control,
    END OF ty_s_request.

  TYPES:
    BEGIN OF ty_s_draft,
      id                TYPE string,
      id_prev           TYPE string,
      id_prev_app       TYPE string,
      id_prev_app_stack TYPE string,
      app               TYPE REF TO z2ui5_if_app,
    END OF ty_s_draft.

  TYPES:
    BEGIN OF ty_s_config,
      origin           TYPE string,
      pathname         TYPE string,
      search           TYPE string,
      t_startup_params TYPE z2ui5_if_types=>ty_t_name_value,
    END OF ty_s_config.

  TYPES:
    BEGIN OF ty_s_actual,
      event              TYPE string,
      t_event_arg        TYPE string_table,
      check_on_navigated TYPE abap_bool,
      view               TYPE string,
      s_draft            TYPE ty_s_draft,
      s_config           TYPE ty_s_config,
      r_data             TYPE REF TO data,
    END OF ty_s_actual.

  TYPES ty_s_db TYPE z2ui5_t_99.

ENDINTERFACE.




INTERFACE z2ui5_if_client.

  CONSTANTS:
    BEGIN OF cs_event,
      popup_close               TYPE string VALUE `POPUP_CLOSE`,
      open_new_tab              TYPE string VALUE `OPEN_NEW_TAB`,
      popover_close             TYPE string VALUE `POPOVER_CLOSE`,
      location_reload           TYPE string VALUE `LOCATION_RELOAD`,
      nav_container_to          TYPE string VALUE `NAV_CONTAINER_TO`,
      nest_nav_container_to     TYPE string VALUE `NEST_NAV_CONTAINER_TO`,
      nest2_nav_container_to    TYPE string VALUE `NEST2_NAV_CONTAINER_TO`,
      cross_app_nav_to_ext      TYPE string VALUE `CROSS_APP_NAV_TO_EXT`,
      cross_app_nav_to_prev_app TYPE string VALUE `CROSS_APP_NAV_TO_PREV_APP`,
      popup_nav_container_to    TYPE string VALUE `POPUP_NAV_CONTAINER_TO`,
      popover_nav_container_to  TYPE string VALUE `POPOVER_NAV_CONTAINER_TO`,
      download_b64_file         TYPE string VALUE `DOWNLOAD_B64_FILE`,
      set_size_limit            TYPE string VALUE `SET_SIZE_LIMIT`,
      set_odata_model           TYPE string VALUE `SET_ODATA_MODEL`,
      urlhelper                 TYPE string VALUE `URLHELPER`,
      history_back              TYPE string VALUE `HISTORY_BACK`,
      clipboard_app_state       TYPE string VALUE `CLIPBOARD_APP_STATE`,
    END OF cs_event.

  CONSTANTS:
    BEGIN OF cs_view,
      main    TYPE string VALUE `MAIN`,
      nested  TYPE string VALUE `NEST`,
      nested2 TYPE string VALUE `NEST2`,
      popup   TYPE string VALUE `POPUP`,
      popover TYPE string VALUE `POPOVER`,
    END OF cs_view.

  METHODS view_destroy.

  METHODS view_display
    IMPORTING
      val                           TYPE clike
      switch_default_model_anno_uri TYPE string OPTIONAL
      switch_default_model_path     TYPE string OPTIONAL.

  METHODS view_model_update.

  METHODS set_session_stateful
    IMPORTING
      val TYPE abap_bool DEFAULT abap_true.

  METHODS set_app_state_active
    IMPORTING
      val TYPE abap_bool DEFAULT abap_true.

  METHODS set_push_state
    IMPORTING
      val TYPE string OPTIONAL.

  METHODS set_nav_back
    IMPORTING
      val TYPE abap_bool DEFAULT abap_true.

  METHODS nest_view_display
    IMPORTING
      val            TYPE clike
      !id            TYPE clike
      method_insert  TYPE clike
      method_destroy TYPE clike OPTIONAL.

  METHODS nest_view_destroy.
  METHODS nest_view_model_update.

  METHODS nest2_view_display
    IMPORTING
      val            TYPE clike
      !id            TYPE clike
      method_insert  TYPE clike
      method_destroy TYPE clike OPTIONAL.

  METHODS nest2_view_destroy.
  METHODS nest2_view_model_update.

  METHODS popup_display
    IMPORTING
      val TYPE clike.

  METHODS popup_model_update.

  METHODS popup_destroy.

  METHODS popover_model_update.

  METHODS popover_display
    IMPORTING
      !xml  TYPE clike
      by_id TYPE clike.

  METHODS popover_destroy.

  METHODS get
    RETURNING
      VALUE(result) TYPE z2ui5_if_types=>ty_s_get.

  METHODS get_event_arg
    IMPORTING
      v             TYPE i DEFAULT 1
    RETURNING
      VALUE(result) TYPE string.

  METHODS get_app
    IMPORTING
      !id           TYPE clike OPTIONAL
    RETURNING
      VALUE(result) TYPE REF TO z2ui5_if_app.

  METHODS nav_app_leave
    IMPORTING
      VALUE(app)    TYPE REF TO z2ui5_if_app OPTIONAL
    RETURNING
      VALUE(result) TYPE string.

  METHODS nav_app_call
    IMPORTING
      app           TYPE REF TO z2ui5_if_app
    RETURNING
      VALUE(result) TYPE string.

  METHODS message_box_display
    IMPORTING
      !text             TYPE any
      !type             TYPE clike        DEFAULT `information`
      !title            TYPE clike        OPTIONAL
      styleclass        TYPE clike        OPTIONAL
      onclose           TYPE clike        OPTIONAL
      actions           TYPE string_table OPTIONAL
      emphasizedaction  TYPE clike        OPTIONAL
      initialfocus      TYPE clike        OPTIONAL
      textdirection     TYPE clike        OPTIONAL
      !icon             TYPE clike        OPTIONAL
      details           TYPE clike        OPTIONAL
      closeonnavigation TYPE abap_bool    DEFAULT abap_true.

  METHODS message_toast_display
    IMPORTING
      !text                    TYPE clike
      !duration                TYPE clike     OPTIONAL
      !width                   TYPE clike     OPTIONAL
      my                       TYPE clike     OPTIONAL
      !at                      TYPE clike     OPTIONAL
      !of                      TYPE clike     OPTIONAL
      !offset                  TYPE clike     OPTIONAL
      collision                TYPE clike     OPTIONAL
      onclose                  TYPE clike     DEFAULT ``
      autoclose                TYPE abap_bool DEFAULT abap_true
      animationtimingfunction  TYPE clike     OPTIONAL
      animationduration        TYPE clike     OPTIONAL
      closeonbrowsernavigation TYPE abap_bool DEFAULT abap_true
      !class                   TYPE clike     OPTIONAL.

  METHODS _event
    IMPORTING
      val           TYPE clike                              OPTIONAL
      t_arg         TYPE string_table                       OPTIONAL
      s_ctrl        TYPE z2ui5_if_types=>ty_s_event_control OPTIONAL
      r_data        TYPE data                               OPTIONAL
        PREFERRED PARAMETER val
    RETURNING
      VALUE(result) TYPE string.

  METHODS _event_client
    IMPORTING
      val           TYPE clike
      t_arg         TYPE string_table OPTIONAL
    RETURNING
      VALUE(result) TYPE string.

  METHODS _bind
    IMPORTING
      val                  TYPE data
      !path                TYPE abap_bool                     DEFAULT abap_false
      custom_mapper        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
      custom_filter        TYPE REF TO z2ui5_if_ajson_filter  OPTIONAL
      !tab                 TYPE data                          OPTIONAL
      tab_index            TYPE i                             OPTIONAL
      switch_Default_Model TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(result)        TYPE string.

  METHODS _bind_edit
    IMPORTING
      val                  TYPE data
      !path                TYPE abap_bool                     DEFAULT abap_false
      view                 TYPE string                        DEFAULT z2ui5_if_client=>cs_view-main
      custom_mapper        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
      custom_mapper_back   TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
      custom_filter        TYPE REF TO z2ui5_if_ajson_filter  OPTIONAL
      custom_filter_back   TYPE REF TO z2ui5_if_ajson_filter  OPTIONAL
      !tab                 TYPE data                          OPTIONAL
      tab_index            TYPE i                             OPTIONAL
      switch_default_model TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(result)        TYPE string.

  METHODS _bind_local
    IMPORTING
      val                  TYPE data
      !path                TYPE abap_bool                     DEFAULT abap_false
      custom_mapper        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
      custom_filter        TYPE REF TO z2ui5_if_ajson_filter  OPTIONAL
      switch_default_Model TYPE abap_bool DEFAULT abap_false
    RETURNING
      VALUE(result)        TYPE string.

  METHODS follow_up_action
    IMPORTING
      val TYPE string.

  METHODS check_on_init
    RETURNING
      VALUE(result) TYPE abap_bool.

  METHODS check_app_prev_stack
    RETURNING
      VALUE(result) TYPE abap_bool.

  METHODS check_on_navigated
    RETURNING
      VALUE(result) TYPE abap_bool.

  METHODS get_app_prev
    RETURNING
      VALUE(result) TYPE REF TO z2ui5_if_app.

ENDINTERFACE.


CLASS z2ui5_cl_ajson DEFINITION
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES z2ui5_if_ajson .

    ALIASES:
      is_empty FOR z2ui5_if_ajson~is_empty,
      exists FOR z2ui5_if_ajson~exists,
      members FOR z2ui5_if_ajson~members,
      get FOR z2ui5_if_ajson~get,
      get_boolean FOR z2ui5_if_ajson~get_boolean,
      get_integer FOR z2ui5_if_ajson~get_integer,
      get_number FOR z2ui5_if_ajson~get_number,
      get_date FOR z2ui5_if_ajson~get_date,
      get_timestamp FOR z2ui5_if_ajson~get_timestamp,
      get_string FOR z2ui5_if_ajson~get_string,
      slice FOR z2ui5_if_ajson~slice,
      to_abap FOR z2ui5_if_ajson~to_abap,
      array_to_string_table FOR z2ui5_if_ajson~array_to_string_table.

    ALIASES:
      clear FOR z2ui5_if_ajson~clear,
      set FOR z2ui5_if_ajson~set,
      setx FOR z2ui5_if_ajson~setx,
      set_boolean FOR z2ui5_if_ajson~set_boolean,
      set_string FOR z2ui5_if_ajson~set_string,
      set_integer FOR z2ui5_if_ajson~set_integer,
      set_date FOR z2ui5_if_ajson~set_date,
      set_timestamp FOR z2ui5_if_ajson~set_timestamp,
      set_null FOR z2ui5_if_ajson~set_null,
      delete FOR z2ui5_if_ajson~delete,
      touch_array FOR z2ui5_if_ajson~touch_array,
      push FOR z2ui5_if_ajson~push,
      stringify FOR z2ui5_if_ajson~stringify.

    ALIASES:
      clone FOR z2ui5_if_ajson~clone,
      filter FOR z2ui5_if_ajson~filter,
      map FOR z2ui5_if_ajson~map.

    ALIASES:
      mt_json_tree FOR z2ui5_if_ajson~mt_json_tree,
      keep_item_order FOR z2ui5_if_ajson~keep_item_order,
      format_datetime FOR z2ui5_if_ajson~format_datetime,
      to_abap_corresponding_only FOR z2ui5_if_ajson~to_abap_corresponding_only,
      freeze FOR z2ui5_if_ajson~freeze.

    CLASS-METHODS parse
      IMPORTING
        !iv_json            TYPE any
        !iv_freeze          TYPE abap_bool DEFAULT abap_false
        !ii_custom_mapping  TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        !iv_keep_item_order TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance)  TYPE REF TO z2ui5_cl_ajson
      RAISING
        z2ui5_cx_ajson_error .

    CLASS-METHODS create_empty " Might be deprecated, prefer using new( ) or create object
      IMPORTING
        !ii_custom_mapping            TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        iv_keep_item_order            TYPE abap_bool DEFAULT abap_false
        iv_format_datetime            TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance)            TYPE REF TO z2ui5_cl_ajson.

    " Experimental ! May change
    CLASS-METHODS create_from " TODO, rename to 'from' ?
      IMPORTING
        !ii_source_json    TYPE REF TO z2ui5_if_ajson
        !ii_filter         TYPE REF TO z2ui5_if_ajson_filter OPTIONAL " Might be deprecated, use filter() instead
        !ii_mapper         TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL " Might be deprecated, use map() instead
      RETURNING
        VALUE(ro_instance) TYPE REF TO z2ui5_cl_ajson
      RAISING
        z2ui5_cx_ajson_error .

    METHODS constructor
      IMPORTING
        iv_keep_item_order            TYPE abap_bool DEFAULT abap_false
        iv_format_datetime            TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false.
    CLASS-METHODS new
      IMPORTING
        iv_keep_item_order            TYPE abap_bool DEFAULT abap_false
        iv_format_datetime            TYPE abap_bool DEFAULT abap_true
        iv_to_abap_corresponding_only TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_instance)            TYPE REF TO z2ui5_cl_ajson.

  PROTECTED SECTION.

  PRIVATE SECTION.

    CLASS-DATA go_float_regex TYPE REF TO cl_abap_regex.

    DATA ms_opts TYPE z2ui5_if_ajson=>ty_opts.
    DATA mi_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping. " DEPRECATED, will be removed

    METHODS get_item
      IMPORTING
        iv_path        TYPE string
      RETURNING
        VALUE(rv_item) TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    METHODS prove_path_exists
      IMPORTING
        iv_path            TYPE string
      RETURNING
        VALUE(rr_end_node) TYPE REF TO z2ui5_if_ajson_types=>ty_node
      RAISING
        z2ui5_cx_ajson_error.
    METHODS delete_subtree
      IMPORTING
        iv_path            TYPE string
        iv_name            TYPE string
        ir_parent          TYPE REF TO z2ui5_if_ajson_types=>ty_node OPTIONAL
      RETURNING
        VALUE(rs_top_node) TYPE z2ui5_if_ajson_types=>ty_node.
    METHODS read_only_watchdog
      RAISING
        z2ui5_cx_ajson_error.
ENDCLASS.
CLASS z2ui5_cl_ajson_filter_lib DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS create_empty_filter
      RETURNING
        VALUE(ri_filter) TYPE REF TO z2ui5_if_ajson_filter
      RAISING
        z2ui5_cx_ajson_error .
    CLASS-METHODS create_path_filter
      IMPORTING
        !it_skip_paths     TYPE string_table OPTIONAL
        !iv_skip_paths     TYPE string OPTIONAL
        !iv_pattern_search TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_filter)   TYPE REF TO z2ui5_if_ajson_filter
      RAISING
        z2ui5_cx_ajson_error .
    CLASS-METHODS create_and_filter
      IMPORTING
        !it_filters      TYPE z2ui5_if_ajson_filter=>ty_filter_tab
      RETURNING
        VALUE(ri_filter) TYPE REF TO z2ui5_if_ajson_filter
      RAISING
        z2ui5_cx_ajson_error .

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS kHGwlQWxBzogSXFKnfTxWRsLzEdjUi DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxrCLylKulMM DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxoAlevhaDMg DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxYWDnXPYsQA DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxIaLFAtEmIg DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxayhtkOTSGN DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxcwrelrEIET DEFINITION DEFERRED.
CLASS kHGwlQWxBzogSXFKnfTxTFhfUGDgXz DEFINITION DEFERRED.
* renamed: z2ui5_cl_ajson_mapping :: lcl_mapping_fields
CLASS kHGwlQWxBzogSXFKnfTxTFhfUGDgXz DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_mapping_fields TYPE z2ui5_if_ajson_mapping~ty_mapping_fields.

ENDCLASS.

* renamed: z2ui5_cl_ajson_mapping :: lcl_rename
CLASS kHGwlQWxBzogSXFKnfTxcwrelrEIET DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_rename_map TYPE z2ui5_if_ajson_mapping~tty_rename_map
        iv_rename_by  TYPE i.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_rename_map TYPE z2ui5_if_ajson_mapping~tty_rename_map.
    DATA mv_rename_by TYPE i.

ENDCLASS.

* renamed: z2ui5_cl_ajson_mapping :: lcl_mapping_to_upper
CLASS kHGwlQWxBzogSXFKnfTxayhtkOTSGN DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mi_mapping_fields TYPE REF TO z2ui5_if_ajson_mapping.

ENDCLASS.
* renamed: z2ui5_cl_ajson_mapping :: lcl_mapping_to_lower
CLASS kHGwlQWxBzogSXFKnfTxIaLFAtEmIg DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping~ty_mapping_fields OPTIONAL.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mi_mapping_fields TYPE REF TO z2ui5_if_ajson_mapping.

ENDCLASS.
* renamed: z2ui5_cl_ajson_mapping :: lcl_mapping_camel
CLASS kHGwlQWxBzogSXFKnfTxYWDnXPYsQA DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_mapping_fields   TYPE z2ui5_if_ajson_mapping~ty_mapping_fields OPTIONAL
        iv_first_json_upper TYPE abap_bool DEFAULT abap_true.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mv_first_json_upper TYPE abap_bool.
    DATA mi_mapping_fields TYPE REF TO z2ui5_if_ajson_mapping.

ENDCLASS.

* renamed: z2ui5_cl_ajson_mapping :: lcl_compound_mapper
CLASS kHGwlQWxBzogSXFKnfTxoAlevhaDMg DEFINITION.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.

    METHODS constructor
      IMPORTING
        it_queue TYPE z2ui5_if_ajson_mapping=>ty_table_of.

  PROTECTED SECTION.

  PRIVATE SECTION.
    DATA mt_queue TYPE z2ui5_if_ajson_mapping=>ty_table_of.

ENDCLASS.

* renamed: z2ui5_cl_ajson_mapping :: lcl_to_snake
CLASS kHGwlQWxBzogSXFKnfTxrCLylKulMM DEFINITION.
  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.
ENDCLASS.

* renamed: z2ui5_cl_ajson_mapping :: lcl_to_camel
CLASS kHGwlQWxBzogSXFKnfTxWRsLzEdjUi DEFINITION.
  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_mapping.
    METHODS constructor
      IMPORTING
        iv_first_json_upper TYPE abap_bool.
  PRIVATE SECTION.
    DATA mv_first_json_upper TYPE abap_bool.
ENDCLASS.

CLASS z2ui5_cl_ajson_mapping DEFINITION
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    CONSTANTS:
      BEGIN OF rename_by,
        attr_name TYPE i VALUE 0,
        full_path TYPE i VALUE 1,
        pattern   TYPE i VALUE 2,
        " regex type i value 3, " TODO add if needed in future
      END OF rename_by.

    CLASS-METHODS create_camel_case " DEPRECATED
      IMPORTING
        it_mapping_fields   TYPE z2ui5_if_ajson_mapping=>ty_mapping_fields OPTIONAL
        iv_first_json_upper TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(ri_mapping)   TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_upper_case
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping=>ty_mapping_fields OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_lower_case
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping=>ty_mapping_fields OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_field_mapping " DEPRECATED
      IMPORTING
        it_mapping_fields TYPE z2ui5_if_ajson_mapping=>ty_mapping_fields
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_rename
      IMPORTING
        it_rename_map     TYPE z2ui5_if_ajson_mapping=>tty_rename_map
        iv_rename_by      TYPE i DEFAULT rename_by-attr_name
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_compound_mapper
      IMPORTING
        ii_mapper1        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        ii_mapper2        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        ii_mapper3        TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        it_more           TYPE z2ui5_if_ajson_mapping=>ty_table_of OPTIONAL
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_to_snake_case
      RETURNING
        VALUE(ri_mapping) TYPE REF TO z2ui5_if_ajson_mapping.

    CLASS-METHODS create_to_camel_case
      IMPORTING
        iv_first_json_upper TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ri_mapping)   TYPE REF TO z2ui5_if_ajson_mapping.

  PROTECTED SECTION.

  PRIVATE SECTION.

ENDCLASS.
CLASS z2ui5_cl_ajson_utilities DEFINITION
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS new
      RETURNING
        VALUE(ro_instance) TYPE REF TO z2ui5_cl_ajson_utilities.
    METHODS diff
      IMPORTING
        !iv_json_a            TYPE string OPTIONAL
        !iv_json_b            TYPE string OPTIONAL
        !io_json_a            TYPE REF TO z2ui5_if_ajson OPTIONAL
        !io_json_b            TYPE REF TO z2ui5_if_ajson OPTIONAL
        !iv_keep_empty_arrays TYPE abap_bool DEFAULT abap_false
      EXPORTING
        !eo_insert            TYPE REF TO z2ui5_if_ajson
        !eo_delete            TYPE REF TO z2ui5_if_ajson
        !eo_change            TYPE REF TO z2ui5_if_ajson
      RAISING
        z2ui5_cx_ajson_error .
    METHODS merge
      IMPORTING
        !iv_json_a            TYPE string OPTIONAL
        !iv_json_b            TYPE string OPTIONAL
        !io_json_a            TYPE REF TO z2ui5_if_ajson OPTIONAL
        !io_json_b            TYPE REF TO z2ui5_if_ajson OPTIONAL
        !iv_keep_empty_arrays TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(ro_json)        TYPE REF TO z2ui5_if_ajson
      RAISING
        z2ui5_cx_ajson_error .
    METHODS sort
      IMPORTING
        !iv_json         TYPE string OPTIONAL
        !io_json         TYPE REF TO z2ui5_if_ajson OPTIONAL
      RETURNING
        VALUE(rv_sorted) TYPE string
      RAISING
        z2ui5_cx_ajson_error .
    METHODS is_equal
      IMPORTING
        !iv_json_a    TYPE string OPTIONAL
        !iv_json_b    TYPE string OPTIONAL
        !ii_json_a    TYPE REF TO z2ui5_if_ajson OPTIONAL
        !ii_json_b    TYPE REF TO z2ui5_if_ajson OPTIONAL
      RETURNING
        VALUE(rv_yes) TYPE abap_bool
      RAISING
        z2ui5_cx_ajson_error .

  PROTECTED SECTION.

  PRIVATE SECTION.

    DATA mo_json_a TYPE REF TO z2ui5_if_ajson .
    DATA mo_json_b TYPE REF TO z2ui5_if_ajson .
    DATA mo_insert TYPE REF TO z2ui5_if_ajson .
    DATA mo_delete TYPE REF TO z2ui5_if_ajson .
    DATA mo_change TYPE REF TO z2ui5_if_ajson .

    METHODS normalize_input
      IMPORTING
        !iv_json       TYPE string OPTIONAL
        !io_json       TYPE REF TO z2ui5_if_ajson OPTIONAL
      RETURNING
        VALUE(ro_json) TYPE REF TO z2ui5_if_ajson
      RAISING
        z2ui5_cx_ajson_error .
    METHODS diff_a_b
      IMPORTING
        !iv_path TYPE string
      RAISING
        z2ui5_cx_ajson_error .
    METHODS diff_b_a
      IMPORTING
        !iv_path  TYPE string
        !iv_array TYPE abap_bool DEFAULT abap_false
      RAISING
        z2ui5_cx_ajson_error .
    METHODS delete_empty_nodes
      IMPORTING
        !io_json              TYPE REF TO z2ui5_if_ajson
        !iv_keep_empty_arrays TYPE abap_bool
      RAISING
        z2ui5_cx_ajson_error .
ENDCLASS.

CLASS z2ui5_cl_srt_typedescr DEFINITION
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES if_serializable_object.

    DATA absolute_name    LIKE cl_abap_typedescr=>absolute_name READ-ONLY.
    DATA type_kind        LIKE cl_abap_typedescr=>type_kind     READ-ONLY.
    DATA length           LIKE cl_abap_typedescr=>length        READ-ONLY.
    DATA decimals         LIKE cl_abap_typedescr=>decimals      READ-ONLY.
    DATA kind             LIKE cl_abap_typedescr=>kind          READ-ONLY.
    "! True if it's an object type which doesn't implement the interface IF_SERIALIZABLE_OBJECT
    DATA not_serializable TYPE abap_bool                        READ-ONLY.
    DATA is_ddic_type     TYPE abap_bool                        READ-ONLY.
    "! True if the absolute name is %_T...
    DATA technical_type   TYPE abap_bool                        READ-ONLY.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_typedescr.
    METHODS get_rtti
      RETURNING
        VALUE(rtti) TYPE REF TO cl_abap_typedescr.
    CLASS-METHODS create_by_rtti
      IMPORTING
        !rtti        TYPE REF TO cl_abap_typedescr
      RETURNING
        VALUE(srtti) TYPE REF TO z2ui5_cl_srt_typedescr.
    CLASS-METHODS create_by_data_object
      IMPORTING
        !data_object TYPE any
      RETURNING
        VALUE(srtti) TYPE REF TO z2ui5_cl_srt_typedescr.
  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI data object</p>
CLASS z2ui5_cl_srt_datadescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_typedescr
  CREATE PUBLIC .

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI complex type</p>
CLASS z2ui5_cl_srt_complexdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_datadescr
  CREATE PUBLIC .

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI elementary type</p>
CLASS z2ui5_cl_srt_elemdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_datadescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA edit_mask     LIKE cl_abap_elemdescr=>edit_mask.
    DATA help_id       LIKE cl_abap_elemdescr=>help_id.
    DATA output_length LIKE cl_abap_elemdescr=>output_length.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_elemdescr.

    METHODS get_rtti
        REDEFINITION.
  PROTECTED SECTION.
    METHODS get_rtti_by_type_kind
      IMPORTING
        i_type_kind LIKE cl_abap_typedescr=>type_kind
      RETURNING
        VALUE(rtti) TYPE REF TO cl_abap_typedescr.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI object type</p>
CLASS z2ui5_cl_srt_objectdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_typedescr
  CREATE PUBLIC .

  PUBLIC SECTION.

    DATA interfaces LIKE cl_abap_objectdescr=>interfaces .
    DATA types LIKE cl_abap_objectdescr=>types .
    DATA attributes LIKE cl_abap_objectdescr=>attributes .
    DATA methods LIKE cl_abap_objectdescr=>methods .
    DATA events LIKE cl_abap_objectdescr=>events .

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_objectdescr .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI class</p>
CLASS z2ui5_cl_srt_classdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_objectdescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA class_kind        LIKE cl_abap_classdescr=>class_kind.
    DATA create_visibility LIKE cl_abap_classdescr=>create_visibility.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_classdescr.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI interface</p>
CLASS z2ui5_cl_srt_intfdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_objectdescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA intf_kind LIKE cl_abap_intfdescr=>intf_kind.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_intfdescr.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI reference</p>
CLASS z2ui5_cl_srt_refdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_datadescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA referenced_type TYPE REF TO z2ui5_cl_srt_typedescr.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_refdescr.

    METHODS get_rtti
        REDEFINITION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI structure</p>
CLASS z2ui5_cl_srt_structdescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_complexdescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    TYPES:
      BEGIN OF sabap_componentdescr,
        name       TYPE string,
        type       TYPE REF TO z2ui5_cl_srt_datadescr,
        as_include TYPE abap_bool,
        suffix     TYPE string,
      END OF sabap_componentdescr.
    TYPES sabap_component_tab TYPE STANDARD TABLE OF sabap_componentdescr WITH DEFAULT KEY.

    DATA struct_kind LIKE cl_abap_structdescr=>struct_kind READ-ONLY.
    DATA components  TYPE sabap_component_tab              READ-ONLY.
    DATA has_include LIKE cl_abap_structdescr=>has_include READ-ONLY.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_structdescr.

    METHODS get_rtti
        REDEFINITION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
"! <p class="shorttext synchronized" lang="en">Serializable RTTI table</p>
CLASS z2ui5_cl_srt_tabledescr DEFINITION
  INHERITING FROM z2ui5_cl_srt_complexdescr
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA key            LIKE cl_abap_tabledescr=>key.
    DATA initial_size   LIKE cl_abap_tabledescr=>initial_size.
    DATA key_defkind    LIKE cl_abap_tabledescr=>key_defkind.
    DATA has_unique_key LIKE cl_abap_tabledescr=>has_unique_key.
    DATA table_kind     LIKE cl_abap_tabledescr=>table_kind.
    DATA line_type      TYPE REF TO z2ui5_cl_srt_datadescr.

    METHODS constructor
      IMPORTING
        !rtti TYPE REF TO cl_abap_tabledescr.

    METHODS get_rtti
        REDEFINITION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cx_srt DEFINITION
  INHERITING FROM cx_no_check
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_t100_message .

    METHODS constructor
      IMPORTING
        !textid   LIKE if_t100_message=>t100key OPTIONAL
        !previous LIKE previous OPTIONAL .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_util_abap DEFINITION
  CREATE PUBLIC.

  PUBLIC SECTION.

    " abap-api - Serving a Release & Version Independent ABAP Layer
    " version: '0.0.1'.
    " origin: https://github.com/oblomov-dev/abap-api
    " author: https://github.com/oblomov-dev
    " license: MIT.

    TYPES:
      BEGIN OF ty_s_fix_val,
        low   TYPE string,
        high  TYPE string,
        descr TYPE string,
      END OF ty_s_fix_val.
    TYPES ty_t_fix_val TYPE STANDARD TABLE OF ty_s_fix_val WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_dfies,
        tabname     TYPE c LENGTH 30,
        fieldname   TYPE c LENGTH 30,
        langu       TYPE string,
        position    TYPE n LENGTH 4,
        offset      TYPE n LENGTH 6,
        domname     TYPE c LENGTH 30,
        rollname    TYPE c LENGTH 30,
        checktable  TYPE c LENGTH 30,
        leng        TYPE n LENGTH 6,
        intlen      TYPE n LENGTH 6,
        outputlen   TYPE n LENGTH 6,
        decimals    TYPE n LENGTH 6,
        datatype    TYPE c LENGTH 4,
        inttype     TYPE c LENGTH 1,
        reftable    TYPE c LENGTH 30,
        reffield    TYPE c LENGTH 30,
        precfield   TYPE c LENGTH 30,
        authorid    TYPE c LENGTH 3,
        memoryid    TYPE c LENGTH 20,
        logflag     TYPE c LENGTH 1,
        mask        TYPE c LENGTH 20,
        masklen     TYPE n LENGTH 4,
        convexit    TYPE c LENGTH 5,
        headlen     TYPE n LENGTH 2,
        scrlen1     TYPE n LENGTH 2,
        scrlen2     TYPE n LENGTH 2,
        scrlen3     TYPE n LENGTH 2,
        fieldtext   TYPE c LENGTH 60,
        reptext     TYPE c LENGTH 55,
        scrtext_s   TYPE c LENGTH 10,
        scrtext_m   TYPE c LENGTH 20,
        scrtext_l   TYPE c LENGTH 40,
        keyflag     TYPE c LENGTH 1,
        lowercase   TYPE c LENGTH 1,
        mac         TYPE c LENGTH 1,
        genkey      TYPE c LENGTH 1,
        noforkey    TYPE c LENGTH 1,
        valexi      TYPE c LENGTH 1,
        noauthch    TYPE c LENGTH 1,
        sign        TYPE c LENGTH 1,
        dynpfld     TYPE c LENGTH 1,
        f4availabl  TYPE c LENGTH 1,
        comptype    TYPE c LENGTH 1,
        lfieldname  TYPE c LENGTH 132,
        ltrflddis   TYPE c LENGTH 1,
        bidictrlc   TYPE c LENGTH 1,
        outputstyle TYPE n LENGTH 2,
        nohistory   TYPE c LENGTH 1,
        ampmformat  TYPE c LENGTH 1,
      END OF ty_s_dfies,
      ty_t_dfies TYPE STANDARD TABLE OF ty_s_dfies WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_data_element_text,
        header TYPE string,
        short  TYPE string,
        medium TYPE string,
        long   TYPE string,
      END OF ty_s_data_element_text.

    TYPES:
      BEGIN OF ty_s_class_descr,
        classname   TYPE string,
        description TYPE string,
      END OF ty_s_class_descr.
    TYPES ty_t_classes TYPE STANDARD TABLE OF ty_s_class_descr WITH NON-UNIQUE DEFAULT KEY.

    CLASS-METHODS context_check_abap_cloud
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS source_get_method
      IMPORTING
        iv_classname  TYPE clike
        iv_methodname TYPE clike
      RETURNING
        VALUE(result) TYPE string_table.

    CLASS-METHODS uuid_get_c32
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS uuid_get_c22
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_get_data_element_texts
      IMPORTING
        i_data_element_name TYPE string
      RETURNING
        VALUE(result)       TYPE ty_s_data_element_text.

    CLASS-METHODS conv_decode_x_base64
      IMPORTING
        val           TYPE string
      RETURNING
        VALUE(result) TYPE xstring.

    CLASS-METHODS conv_encode_x_base64
      IMPORTING
        val           TYPE xstring
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS conv_get_string_by_xstring
      IMPORTING
        val           TYPE xstring
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS conv_get_xstring_by_string
      IMPORTING
        val           TYPE string
      RETURNING
        VALUE(result) TYPE xstring.

    CLASS-METHODS rtti_get_classes_impl_intf
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE ty_t_classes.

    CLASS-METHODS rtti_get_t_dfies_by_table_name
      IMPORTING
        table_name    TYPE string
      RETURNING
        VALUE(result) TYPE ty_t_dfies.

    CLASS-METHODS rtti_get_t_fixvalues
      IMPORTING
        elemdescr     TYPE REF TO cl_abap_elemdescr
        langu         TYPE clike
      RETURNING
        VALUE(result) TYPE ty_t_fix_val.

  PROTECTED SECTION.

    CLASS-METHODS rtti_get_class_descr_on_cloud
      IMPORTING
        i_classname   TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_get_t_attri_on_prem
      IMPORTING
        tabname       TYPE string
      RETURNING
        VALUE(result) TYPE ty_t_dfies.

    CLASS-METHODS rtti_get_t_attri_on_cloud
      IMPORTING
        tabname       TYPE string
      RETURNING
        VALUE(result) TYPE ty_t_dfies ##NEEDED.

  PRIVATE SECTION.

ENDCLASS.
CLASS z2ui5_cl_util DEFINITION
  INHERITING FROM z2ui5_cl_util_abap
  CREATE PUBLIC.

  PUBLIC SECTION.

    " abap-toolkit - Utility Functions for ABAP Cloud & Standard ABAP
    " version: '0.0.1'.
    " origin: https://github.com/oblomov-dev/abap-toolkit
    " author: https://github.com/oblomov-dev
    " license: MIT.

    TYPES:
      BEGIN OF ty_s_name_value,
        n TYPE string,
        v TYPE string,
      END OF ty_s_name_value.
    TYPES ty_t_name_value TYPE STANDARD TABLE OF ty_s_name_value WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_token,
        key      TYPE string,
        text     TYPE string,
        visible  TYPE abap_bool,
        selkz    TYPE abap_bool,
        editable TYPE abap_bool,
      END OF ty_s_token.
    TYPES ty_t_token TYPE STANDARD TABLE OF ty_s_token WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_range,
        sign   TYPE c LENGTH 1,
        option TYPE c LENGTH 2,
        low    TYPE string,
        high   TYPE string,
      END OF ty_s_range.
    TYPES ty_t_range TYPE STANDARD TABLE OF ty_s_range WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_filter_multi,
        name            TYPE string,
        t_range         TYPE ty_t_range,
        t_token         TYPE ty_t_token,
        t_token_added   TYPE ty_t_token,
        t_token_removed TYPE ty_t_token,
      END OF ty_s_filter_multi.
    TYPES ty_t_filter_multi TYPE STANDARD TABLE OF ty_s_filter_multi WITH DEFAULT KEY.

    TYPES:
      BEGIN OF ty_s_sql,
        tabname        TYPE string,
        check_autoload TYPE abap_bool,
        layout_name    TYPE string,
        layout_id      TYPE string,
        count          TYPE i,
        t_ref          TYPE REF TO data,
        where          TYPE string,
        t_filter       TYPE ty_t_filter_multi,
      END OF ty_s_sql.

    TYPES:
      BEGIN OF ty_s_msg,
        text       TYPE string,
        id         TYPE string,
        no         TYPE string,
        type       TYPE string,
        v1         TYPE string,
        v2         TYPE string,
        v3         TYPE string,
        v4         TYPE string,
        timestampl TYPE timestampl,
      END OF ty_s_msg,
      ty_t_msg TYPE STANDARD TABLE OF ty_s_msg WITH DEFAULT KEY.

    CLASS-METHODS ui5_get_msg_type
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS msg_get
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE ty_t_msg.

    CLASS-METHODS rtti_get_t_attri_by_include
      IMPORTING
        !type         TYPE REF TO cl_abap_datadescr
      RETURNING
        VALUE(result) TYPE abap_component_tab.

    CLASS-METHODS rtti_get_t_ddic_fixed_values
      IMPORTING
        rollname      TYPE clike
        langu         TYPE clike DEFAULT sy-langu
      RETURNING
        VALUE(result) TYPE z2ui5_cl_util_abap=>ty_t_fix_val ##NEEDED.

    CLASS-METHODS source_get_method2
      IMPORTING
        iv_classname  TYPE clike
        iv_methodname TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS check_bound_a_not_inital
      IMPORTING
        val           TYPE REF TO data
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS check_unassign_inital
      IMPORTING
        val           TYPE REF TO data
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS unassign_object
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE REF TO object.

    CLASS-METHODS unassign_data
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE REF TO data.

    CLASS-METHODS conv_get_as_data_ref
      IMPORTING
        val           TYPE data
      RETURNING
        VALUE(result) TYPE REF TO data.

    CLASS-METHODS source_method_to_file
      IMPORTING
        it_source     TYPE string_table
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS itab_get_itab_by_csv
      IMPORTING
        val           TYPE string
      RETURNING
        VALUE(result) TYPE REF TO data.

    CLASS-METHODS itab_get_csv_by_itab
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS filter_itab
      IMPORTING
        !filter TYPE ty_t_filter_multi
      CHANGING
        val     TYPE STANDARD TABLE.

    CLASS-METHODS filter_get_multi_by_data
      IMPORTING
        val           TYPE data
      RETURNING
        VALUE(result) TYPE ty_t_filter_multi.

    CLASS-METHODS filter_get_data_by_multi
      IMPORTING
        val           TYPE ty_t_filter_multi
      RETURNING
        VALUE(result) TYPE ty_t_filter_multi.

    CLASS-METHODS filter_get_sql_where
      IMPORTING
        val           TYPE  z2ui5_cl_util=>ty_t_filter_multi
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS filter_get_sql_by_sql_string
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE ty_s_sql.

    CLASS-METHODS url_param_get
      IMPORTING
        val           TYPE string
        url           TYPE string
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS url_param_create_url
      IMPORTING
        t_params      TYPE ty_t_name_value
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS url_param_set
      IMPORTING
        url           TYPE string
        !name         TYPE string
        !value        TYPE string
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_get_classname_by_ref
      IMPORTING
        !in           TYPE REF TO object
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_get_intfname_by_ref
      IMPORTING
        !in           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS x_get_last_t100
      IMPORTING
        val           TYPE REF TO cx_root
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS x_check_raise
      IMPORTING
        v     TYPE clike DEFAULT `CX_SY_SUBRC`
        !when TYPE xfeld.

    CLASS-METHODS x_raise
      IMPORTING
        v TYPE clike DEFAULT `CX_SY_SUBRC`
          PREFERRED PARAMETER v.

    CLASS-METHODS context_get_user_tech
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS json_stringify
      IMPORTING
        !any          TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS xml_parse
      IMPORTING
        !xml TYPE clike
      EXPORTING
        !any TYPE any.

    CLASS-METHODS xml_stringify
      IMPORTING
        !any          TYPE any
      RETURNING
        VALUE(result) TYPE string
      RAISING
        cx_xslt_serialization_error.

    CLASS-METHODS boolean_check_by_data
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS boolean_abap_2_json
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS json_parse
      IMPORTING
        val   TYPE any
      CHANGING
        !data TYPE any.

    CLASS-METHODS c_trim_upper
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS xml_srtti_stringify
      IMPORTING
        !data         TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS xml_srtti_parse
      IMPORTING
        rtti_data     TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO data.

    CLASS-METHODS time_get_timestampl
      RETURNING
        VALUE(result) TYPE timestampl.

    CLASS-METHODS time_substract_seconds
      IMPORTING
        !time         TYPE timestampl
        !seconds      TYPE i
      RETURNING
        VALUE(result) TYPE timestampl.

    CLASS-METHODS c_trim
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS c_trim_lower
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS url_param_get_tab
      IMPORTING
        i_val            TYPE clike
      RETURNING
        VALUE(rt_params) TYPE ty_t_name_value.

    CLASS-METHODS rtti_get_t_attri_by_oref
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE abap_attrdescr_tab.

    CLASS-METHODS rtti_get_t_attri_by_any
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE cl_abap_structdescr=>component_table.

    CLASS-METHODS rtti_get_t_attri_by_table_name
      IMPORTING
        table_name    TYPE any
      RETURNING
        VALUE(result) TYPE cl_abap_structdescr=>component_table.

    CLASS-METHODS rtti_get_type_name
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_check_class_exists
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS rtti_check_type_kind_dref
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS rtti_get_type_kind
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_check_ref_data
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS boolean_check_by_name
      IMPORTING
        val           TYPE string
      RETURNING
        VALUE(result) TYPE abap_bool.

    CLASS-METHODS filter_update_tokens
      IMPORTING
        val           TYPE ty_t_filter_multi
        !name         TYPE string
      RETURNING
        VALUE(result) TYPE ty_t_filter_multi.

    CLASS-METHODS filter_get_range_t_by_token_t
      IMPORTING
        val           TYPE ty_t_token
      RETURNING
        VALUE(result) TYPE ty_t_range.

    CLASS-METHODS filter_get_range_by_token
      IMPORTING
        VALUE(value)  TYPE string
      RETURNING
        VALUE(result) TYPE ty_s_range.

    CLASS-METHODS filter_get_token_t_by_range_t
      IMPORTING
        val           TYPE ANY TABLE
      RETURNING
        VALUE(result) TYPE ty_t_token ##NEEDED.

    CLASS-METHODS filter_get_token_range_mapping
      RETURNING
        VALUE(result) TYPE ty_t_name_value.

    CLASS-METHODS itab_corresponding
      IMPORTING
        val  TYPE STANDARD TABLE
      CHANGING
        !tab TYPE STANDARD TABLE.

    CLASS-METHODS itab_filter_by_val
      IMPORTING
        val  TYPE clike
      CHANGING
        !tab TYPE STANDARD TABLE.

    CLASS-METHODS itab_filter_by_t_range
      IMPORTING
        val  TYPE ty_t_filter_multi
      CHANGING
        !tab TYPE STANDARD TABLE.

    CLASS-METHODS time_get_time_by_stampl
      IMPORTING
        val           TYPE timestampl
      RETURNING
        VALUE(result) TYPE t.

    CLASS-METHODS time_get_date_by_stampl
      IMPORTING
        val           TYPE timestampl
      RETURNING
        VALUE(result) TYPE d.

    CLASS-METHODS conv_copy_ref_data
      IMPORTING
        !from         TYPE any
      RETURNING
        VALUE(result) TYPE REF TO data.

    CLASS-METHODS source_get_file_types
      RETURNING
        VALUE(result) TYPE string_table.

    CLASS-METHODS rtti_tab_get_relative_name
      IMPORTING
        !table        TYPE any
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS rtti_check_clike
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE abap_bool.

  PROTECTED SECTION.

  PRIVATE SECTION.

ENDCLASS.
CLASS z2ui5_cl_util_abap_http DEFINITION.

  PUBLIC SECTION.

    CLASS-METHODS factory
      IMPORTING
        server        TYPE REF TO object
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_util_abap_http.

    CLASS-METHODS factory_cloud
      IMPORTING
        req           TYPE REF TO object
        res           TYPE REF TO object
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_util_abap_http.

    METHODS get_header_field
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    METHODS get_cdata
      RETURNING
        VALUE(result) TYPE string.

    METHODS get_method
      RETURNING
        VALUE(result) TYPE string.

    METHODS set_cdata
      IMPORTING
        val TYPE clike.

    METHODS set_status
      IMPORTING
        !code  TYPE i
        reason TYPE clike.

    METHODS set_session_stateful
      IMPORTING
        val TYPE i.

    METHODS get_response_cookie
      IMPORTING
        val           TYPE clike
      RETURNING
        VALUE(result) TYPE string.

    METHODS delete_response_cookie
      IMPORTING
        val TYPE clike.

    METHODS set_header_field
      IMPORTING
        !n TYPE clike
        v  TYPE clike.

    DATA mo_server_onprem  TYPE REF TO object.
    DATA mo_request_cloud  TYPE REF TO object.
    DATA mo_response_cloud TYPE REF TO object.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cx_util_error DEFINITION
  INHERITING FROM cx_no_check FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA:
      BEGIN OF ms_error,
        x_root TYPE REF TO cx_root,
        uuid   TYPE string,
        text   TYPE string,
      END OF ms_error.

    METHODS constructor
      IMPORTING
        val       TYPE any            OPTIONAL
        !previous TYPE REF TO cx_root OPTIONAL
          PREFERRED PARAMETER val.

    METHODS if_message~get_text REDEFINITION.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_draft DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS count_entries
      RETURNING
        VALUE(result) TYPE i.

    METHODS create
      IMPORTING
        draft     TYPE z2ui5_if_types=>ty_s_draft
        model_xml TYPE clike.

    METHODS read_draft
      IMPORTING
        !id           TYPE clike
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_db.

    METHODS read_info
      IMPORTING
        !id           TYPE clike
      RETURNING
        VALUE(result) TYPE z2ui5_if_types=>ty_s_draft.

    METHODS cleanup.

  PROTECTED SECTION.

    METHODS read
      IMPORTING
        !id            TYPE clike
        check_load_app TYPE abap_bool DEFAULT abap_true
      RETURNING
        VALUE(result)  TYPE z2ui5_if_core_types=>ty_s_db.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_action DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    DATA mo_http_post TYPE REF TO z2ui5_cl_core_handler.
    DATA mo_app       TYPE REF TO z2ui5_cl_core_app.

    DATA ms_actual    TYPE z2ui5_if_core_types=>ty_s_actual.
    DATA ms_next      TYPE z2ui5_if_core_types=>ty_s_next.

    METHODS factory_system_startup
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

    METHODS factory_first_start
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

    METHODS factory_by_frontend
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

    METHODS factory_stack_leave
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

    METHODS factory_stack_call
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

    METHODS constructor
      IMPORTING
        val TYPE REF TO z2ui5_cl_core_handler.

  PROTECTED SECTION.
    METHODS prepare_app_stack
      IMPORTING
        val           TYPE z2ui5_if_core_types=>ty_s_next-o_app_leave
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_action.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_app DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES if_serializable_object.

    DATA mt_attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri.
    DATA mo_app   TYPE REF TO object.
    DATA ms_draft TYPE z2ui5_if_types=>ty_s_get-s_draft.

    METHODS model_json_stringify
      RETURNING
        VALUE(result) TYPE string.

    METHODS model_json_parse
      IMPORTING
        iv_view  TYPE clike
        io_model TYPE REF TO z2ui5_if_ajson.

    METHODS all_xml_stringify
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS all_xml_parse
      IMPORTING
        !xml          TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_app.

    CLASS-METHODS db_load
      IMPORTING
        !id           TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_app.

    CLASS-METHODS db_load_by_app
      IMPORTING
        app           TYPE REF TO z2ui5_if_app
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_core_app.

    METHODS constructor.
    METHODS db_save.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_client DEFINITION
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_client.

    DATA mo_action TYPE REF TO z2ui5_cl_core_action.

    METHODS constructor
      IMPORTING
        action TYPE REF TO z2ui5_cl_core_action.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_handler DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA mo_action       TYPE REF TO z2ui5_cl_core_action.
    DATA mv_request_json TYPE string.
    DATA ms_request      TYPE z2ui5_if_core_types=>ty_s_request.
    DATA ms_response     TYPE z2ui5_if_core_types=>ty_s_response.
    DATA mv_response     TYPE string.

    METHODS constructor
      IMPORTING
        val TYPE string.

    METHODS main
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_http_res.

  PROTECTED SECTION.

    METHODS main_begin.

    METHODS main_process
      RETURNING
        VALUE(check_go_client) TYPE abap_bool.

    METHODS main_end.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_attri DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri
        app   TYPE REF TO object.

    METHODS attri_refs_update.
    METHODS attri_before_save.
    METHODS attri_after_load.

    METHODS attri_get_val_ref
      IMPORTING
        iv_path       TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO data.

    METHODS attri_search_a_dissolve
      IMPORTING
        val           TYPE REF TO data
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_if_core_types=>ty_s_attri.

  PROTECTED SECTION.

    DATA mt_attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri.
    DATA mo_app   TYPE REF TO object.

    METHODS attri_search
      IMPORTING
        val           TYPE REF TO data
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_if_core_types=>ty_s_attri.

  PRIVATE SECTION.
ENDCLASS.

CLASS z2ui5_cl_core_srv_bind DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    DATA mo_app    TYPE REF TO z2ui5_cl_core_app.
    DATA mr_attri  TYPE REF TO z2ui5_if_core_types=>ty_s_attri.
    DATA ms_config TYPE z2ui5_if_core_types=>ty_s_bind_config.
    DATA mv_type   TYPE string.

    METHODS constructor
      IMPORTING
        app TYPE REF TO z2ui5_cl_core_app.

    METHODS main_local
      IMPORTING
        val           TYPE data
        config        TYPE z2ui5_if_core_types=>ty_s_bind_config OPTIONAL
      RETURNING
        VALUE(result) TYPE string.

    METHODS main
      IMPORTING
        val           TYPE REF TO data
        !type         TYPE string
        config        TYPE z2ui5_if_core_types=>ty_s_bind_config OPTIONAL
      RETURNING
        VALUE(result) TYPE string.

    METHODS main_cell
      IMPORTING
        val           TYPE data
        !type         TYPE string
        config        TYPE z2ui5_if_core_types=>ty_s_bind_config OPTIONAL
      RETURNING
        VALUE(result) TYPE string.

    METHODS clear
      IMPORTING
        val TYPE string.

    METHODS bind_tab_cell
      IMPORTING
        iv_name       TYPE string
        i_val         TYPE data
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.

    METHODS get_client_name
      RETURNING
        VALUE(result) TYPE string.

    METHODS update_model_attri.
    METHODS check_raise_existing.
    METHODS check_raise_new.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_diss DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri
        app   TYPE REF TO object.

    METHODS main.

  PROTECTED SECTION.

    DATA mt_attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri.
    DATA mo_app   TYPE REF TO object.

    METHODS main_run.
    METHODS main_init.

    METHODS diss_struc
      IMPORTING
        ir_attri      TYPE REF TO z2ui5_if_core_types=>ty_s_attri
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_t_attri.

    METHODS diss_dref
      IMPORTING
        ir_attri      TYPE REF TO z2ui5_if_core_types=>ty_s_attri
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_t_attri.

    METHODS diss_oref
      IMPORTING
        ir_attri      TYPE REF TO z2ui5_if_core_types=>ty_s_attri
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_t_attri.

    METHODS create_new_entry
      IMPORTING
        !name         TYPE string
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_attri.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_event DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    METHODS get_event
      IMPORTING
        val           TYPE clike                              OPTIONAL
        t_arg         TYPE string_table                       OPTIONAL
        s_cnt         TYPE z2ui5_if_types=>ty_s_event_control OPTIONAL
          PREFERRED PARAMETER val
      RETURNING
        VALUE(result) TYPE string.

    METHODS get_event_client
      IMPORTING
        val           TYPE clike
        t_arg         TYPE string_table OPTIONAL
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.

    METHODS get_t_arg
      IMPORTING
        val           TYPE string_table
      RETURNING
        VALUE(result) TYPE string.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_json DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_ajson_filter.

    METHODS request_json_to_abap
      IMPORTING
        val           TYPE string
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_request.

    METHODS response_abap_to_json
      IMPORTING
        val           TYPE z2ui5_if_core_types=>ty_s_response
      RETURNING
        VALUE(result) TYPE string.

    METHODS model_front_to_back
      IMPORTING
        view    TYPE string
        t_attri TYPE REF TO z2ui5_if_core_types=>ty_t_attri
        model   TYPE REF TO z2ui5_if_ajson.

    METHODS model_back_to_front
      IMPORTING
        t_attri       TYPE REF TO z2ui5_if_core_types=>ty_t_attri
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_core_srv_util DEFINITION
  INHERITING FROM z2ui5_cl_util
  CREATE PUBLIC.

  PUBLIC SECTION.

    CLASS-METHODS app_get_url_source_code
      IMPORTING
        !client       TYPE REF TO z2ui5_if_client
      RETURNING
        VALUE(result) TYPE string.

    CLASS-METHODS app_get_url
      IMPORTING
        !client          TYPE REF TO z2ui5_if_client
        VALUE(classname) TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE string.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_app_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_app_xml DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_component_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_debugtool_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_debugtool_xml DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_index_html DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_manifest_json DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_models_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_server_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_style_css DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_view1_js DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_view1_xml DEFINITION
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    CLASS-METHODS get
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_bal DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    TYPES:
      BEGIN OF ty_s_msg,
        type       TYPE string,
        id         TYPE string,
        title      TYPE string,
        subtitle   TYPE string,
        number     TYPE string,
        time       TYPE string,
        date       TYPE string,
        message    TYPE string,
        message_v1 TYPE string,
        message_v2 TYPE string,
        message_v3 TYPE string,
        message_v4 TYPE string,
        group      TYPE string,
      END OF ty_s_msg.
    TYPES ty_t_msg TYPE STANDARD TABLE OF ty_s_msg WITH DEFAULT KEY.

    DATA mt_msg TYPE ty_t_msg.

    CLASS-METHODS factory
      IMPORTING
        i_messages      TYPE any
        i_title         TYPE string DEFAULT `abap2UI5 - Business Application Log`
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_bal.

  PROTECTED SECTION.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA title             TYPE string.
    DATA check_initialized TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_error DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        x_root          TYPE REF TO cx_root
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_error.

  PROTECTED SECTION.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA error             TYPE REF TO cx_root.
    DATA check_initialized TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_file_dl DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_text                TYPE string DEFAULT `Choose the file to upload:`
        i_title               TYPE string DEFAULT `File Download`
        i_button_text_confirm TYPE string DEFAULT `OK`
        i_button_text_cancel  TYPE string DEFAULT `Cancel`
        i_file                TYPE string
        i_type                TYPE string DEFAULT `data:text/csv;base64,`
      RETURNING
        VALUE(r_result)       TYPE REF TO z2ui5_cl_pop_file_dl.

    DATA mv_name           TYPE string.
    DATA mv_type           TYPE string.
    DATA mv_size           TYPE string.
    DATA mv_value          TYPE string.
    DATA mv_check_download TYPE abap_bool.

    METHODS result
      RETURNING
        VALUE(result) TYPE abap_bool.

  PROTECTED SECTION.
    DATA check_confirmed     TYPE abap_bool.
    DATA client              TYPE REF TO z2ui5_if_client.
    DATA title               TYPE string.
    DATA icon                TYPE string.
    DATA question_text       TYPE string.
    DATA button_text_confirm TYPE string.
    DATA button_text_cancel  TYPE string.
    DATA check_initialized   TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_file_ul DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_text                TYPE string DEFAULT `Choose the file to upload:`
        i_title               TYPE string DEFAULT `File Upload`
        i_button_text_confirm TYPE string DEFAULT `OK`
        i_button_text_cancel  TYPE string DEFAULT `Cancel`
        i_path                TYPE string OPTIONAL
      RETURNING
        VALUE(r_result)       TYPE REF TO z2ui5_cl_pop_file_ul.

    TYPES:
      BEGIN OF ty_s_result,
        value           TYPE string,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result             TYPE ty_s_result.
    DATA mv_path               TYPE string.
    DATA mv_value              TYPE string.
    DATA check_confirm_enabled TYPE abap_bool.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.
    DATA client              TYPE REF TO z2ui5_if_client.
    DATA title               TYPE string.
    DATA icon                TYPE string.
    DATA question_text       TYPE string.
    DATA button_text_confirm TYPE string.
    DATA button_text_cancel  TYPE string.
    DATA check_initialized   TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_get_range DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    TYPES:
      BEGIN OF ty_s_filter_pop,
        option TYPE string,
        low    TYPE string,
        high   TYPE string,
        key    TYPE string,
      END OF ty_s_filter_pop.

    TYPES temp1_d289ca26e4 TYPE STANDARD TABLE OF ty_s_filter_pop WITH DEFAULT KEY.
DATA mt_filter TYPE temp1_d289ca26e4.

    CLASS-METHODS factory
      IMPORTING
        t_range         TYPE ANY TABLE OPTIONAL
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_get_range.

    TYPES:
      BEGIN OF ty_s_result,
        t_range         TYPE z2ui5_cl_util=>ty_t_range,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

    DATA mt_mapping TYPE z2ui5_if_types=>ty_t_name_value.

  PROTECTED SECTION.

    DATA client            TYPE REF TO z2ui5_if_client.
    DATA check_initialized TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_get_range_m DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        val             TYPE z2ui5_cl_util=>ty_t_filter_multi
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_get_range_m.

    TYPES:
      BEGIN OF ty_s_result,
        t_filter        TYPE z2ui5_cl_util=>ty_t_filter_multi,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA check_initialized TYPE abap_bool.
    DATA mv_popup_name     TYPE LINE OF string_table.

    METHODS popup_display.

    METHODS init.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_html DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_html          TYPE string
        i_title         TYPE string DEFAULT `Title`
        i_icon          TYPE string DEFAULT 'sap-icon://question-mark'
        i_button_text   TYPE string DEFAULT `OK`
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_html.

  PROTECTED SECTION.
    DATA client              TYPE REF TO z2ui5_if_client.
    DATA title               TYPE string.
    DATA icon                TYPE string.
    DATA html                TYPE string.
    DATA button_text_confirm TYPE string.
    DATA check_initialized   TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_input_val DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        !text               TYPE string DEFAULT `Enter New Value`
        val                 TYPE string OPTIONAL
        !title              TYPE string DEFAULT `Popup Input Value`
        button_text_confirm TYPE string DEFAULT `OK`
        button_text_cancel  TYPE string DEFAULT `Cancel`
          PREFERRED PARAMETER val
      RETURNING
        VALUE(r_result)     TYPE REF TO z2ui5_cl_pop_input_val.

    TYPES:
      BEGIN OF ty_s_result,
        value           TYPE string,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.
    DATA client                 TYPE REF TO z2ui5_if_client.
    DATA title                  TYPE string.
    DATA icon                   TYPE string.
    DATA question_text          TYPE string.
    DATA button_text_confirm    TYPE string.
    DATA button_text_cancel     TYPE string.
    DATA check_initialized      TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_itab_json_dl DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        itab                  TYPE data
        i_title               TYPE string DEFAULT `Popup To Confirm`
        i_icon                TYPE string DEFAULT 'sap-icon://question-mark'
        i_button_text_confirm TYPE string DEFAULT `OK`
        i_button_text_cancel  TYPE string DEFAULT `Cancel`
      RETURNING
        VALUE(r_result)       TYPE REF TO z2ui5_cl_pop_itab_json_dl.

    METHODS result
      RETURNING
        VALUE(result) TYPE abap_bool.

    DATA mr_itab TYPE REF TO data.

  PROTECTED SECTION.
    DATA client                 TYPE REF TO z2ui5_if_client.

    DATA title                  TYPE string.
    DATA icon                   TYPE string.

    DATA button_text_confirm    TYPE string.
    DATA button_text_cancel     TYPE string.

    DATA check_result_confirmed TYPE abap_bool.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_js_loader DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_js            TYPE string
        i_result        TYPE string DEFAULT `LOADED`
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_js_loader.

    CLASS-METHODS factory_check_open_ui5
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_js_loader.

    METHODS result
      RETURNING
        VALUE(result3) TYPE string.

    DATA mv_is_open_ui5 TYPE abap_bool.
    DATA ui5_gav        TYPE string.

  PROTECTED SECTION.
    DATA check_initialized TYPE abap_bool.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA js                TYPE string.
    DATA user_command      TYPE string.
    DATA check_open_ui5    TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_messages DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    TYPES:
      BEGIN OF ty_s_msg,
        type       TYPE string,
        id         TYPE string,
        title      TYPE string,
        subtitle   TYPE string,
        number     TYPE string,
        message    TYPE string,
        message_v1 TYPE string,
        message_v2 TYPE string,
        message_v3 TYPE string,
        message_v4 TYPE string,
        group      TYPE string,
      END OF ty_s_msg.
    TYPES ty_t_msg TYPE STANDARD TABLE OF ty_s_msg WITH DEFAULT KEY.

    DATA mt_msg TYPE ty_t_msg.

    CLASS-METHODS factory
      IMPORTING
        i_messages      TYPE any
        i_title         TYPE string DEFAULT `abap2UI5 - Message Popup`
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_messages.

  PROTECTED SECTION.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA title             TYPE string.
    DATA check_initialized TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_pdf DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_title               TYPE string DEFAULT `PDF Viewer`
        i_button_text_confirm TYPE string DEFAULT `OK`
        i_button_text_cancel  TYPE string DEFAULT `Cancel`
        i_pdf                 TYPE string
      RETURNING
        VALUE(r_result)       TYPE REF TO z2ui5_cl_pop_pdf.

    TYPES:
      BEGIN OF ty_s_result,
        text            TYPE string,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    DATA mv_pdf    TYPE string.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.
    DATA client                 TYPE REF TO z2ui5_if_client.
    DATA title                  TYPE string.
    DATA icon                   TYPE string.
    DATA question_text          TYPE string.
    DATA button_text_confirm    TYPE string.
    DATA button_text_cancel     TYPE string.
    DATA check_initialized      TYPE abap_bool.
    DATA check_result_confirmed TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_table DEFINITION FINAL
  CREATE PROTECTED.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_tab           TYPE STANDARD TABLE
        i_title         TYPE clike OPTIONAL
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_table.

    TYPES:
      BEGIN OF ty_s_result,
        row             TYPE REF TO data,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

    DATA mr_tab TYPE REF TO data.

  PROTECTED SECTION.
    DATA check_initialized TYPE abap_bool.
    DATA title             TYPE string VALUE 'Table View'.
    DATA client            TYPE REF TO z2ui5_if_client.

    METHODS on_event.
    METHODS display.
    METHODS on_event_confirm.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_textedit DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_stretch_active TYPE abap_bool DEFAULT abap_true
        i_textarea       TYPE string    OPTIONAL
        i_title          TYPE string    DEFAULT `Editor`
        i_check_editable TYPE abap_bool DEFAULT abap_false
          PREFERRED PARAMETER i_textarea
      RETURNING
        VALUE(r_result)  TYPE REF TO z2ui5_cl_pop_textedit.

    DATA client            TYPE REF TO z2ui5_if_client.
    DATA mv_stretch_active TYPE abap_bool.
    DATA mv_title          TYPE string.
    DATA mv_check_editable TYPE abap_bool.
    DATA check_initialized TYPE abap_bool.

    TYPES:
      BEGIN OF ty_s_result,
        text            TYPE string,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result TYPE ty_s_result.

    METHODS display.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_to_confirm DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CONSTANTS:
      BEGIN OF CS_event,
        confirmed TYPE string VALUE 'z2ui5_cl_pop_to_confirm_confirmed',
        canceled  TYPE string VALUE 'z2ui5_cl_pop_to_confirm_canceled',
      END OF cs_event.

    CLASS-METHODS factory
      IMPORTING
        i_question_text       TYPE string
        i_title               TYPE string DEFAULT `Popup To Confirm`
        i_icon                TYPE string DEFAULT 'sap-icon://question-mark'
        i_button_text_confirm TYPE string DEFAULT `OK`
        i_button_text_cancel  TYPE string DEFAULT `Cancel`
        i_event_confirm       TYPE string DEFAULT  CS_event-confirmed
        i_event_cancel        TYPE string DEFAULT  CS_event-canceled
      RETURNING
        VALUE(r_result)       TYPE REF TO z2ui5_cl_pop_to_confirm.

    METHODS result
      RETURNING
        VALUE(result) TYPE abap_bool.

  PROTECTED SECTION.
    DATA client                 TYPE REF TO z2ui5_if_client.

    DATA title                  TYPE string.
    DATA icon                   TYPE string.
    DATA question_text          TYPE string.
    DATA button_text_confirm    TYPE string.
    DATA button_text_cancel     TYPE string.
    DATA check_initialized      TYPE abap_bool.
    DATA check_result_confirmed TYPE abap_bool.
    DATA event_confirm          TYPE string.
    DATA event_canceled         TYPE string.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_to_inform DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.

    INTERFACES z2ui5_if_app.

    CLASS-METHODS factory
      IMPORTING
        i_text          TYPE string
        i_title         TYPE string DEFAULT `Title`
        i_icon          TYPE string DEFAULT 'sap-icon://question-mark'
        i_button_text   TYPE string DEFAULT `OK`
      RETURNING
        VALUE(r_result) TYPE REF TO z2ui5_cl_pop_to_inform.

  PROTECTED SECTION.
    DATA client              TYPE REF TO z2ui5_if_client.
    DATA title               TYPE string.
    DATA icon                TYPE string.
    DATA question_text       TYPE string.
    DATA button_text_confirm TYPE string.
    DATA check_initialized   TYPE abap_bool.

    METHODS view_display.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_pop_to_select DEFINITION FINAL
  CREATE PROTECTED.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    TYPES:
      BEGIN OF ty_s_result,
        row             TYPE REF TO data,
        table           TYPE REF TO data,
        check_confirmed TYPE abap_bool,
      END OF ty_s_result.

    DATA ms_result           TYPE ty_s_result.
    DATA mr_tab              TYPE REF TO data.
    DATA mr_tab_popup        TYPE REF TO data ##NEEDED.
    DATA mr_tab_popup_backup TYPE REF TO data ##NEEDED.

    CLASS-METHODS factory
      IMPORTING
        i_tab              TYPE STANDARD TABLE
        i_title            TYPE clike     OPTIONAL
        i_sort_field       TYPE clike     OPTIONAL
        i_descending       TYPE abap_bool OPTIONAL
        i_contentwidth     TYPE clike     OPTIONAL
        i_contentheight    TYPE clike     OPTIONAL
        i_growingthreshold TYPE clike     OPTIONAL
        i_multiselect      TYPE abap_bool OPTIONAL
        i_event_canceled   TYPE string    OPTIONAL
        i_event_confirmed  TYPE string    OPTIONAL
      RETURNING
        VALUE(r_result)    TYPE REF TO z2ui5_cl_pop_to_select.

    METHODS result
      RETURNING
        VALUE(result) TYPE ty_s_result.

  PROTECTED SECTION.
    DATA check_initialized TYPE abap_bool.
    DATA check_table_line  TYPE abap_bool.
    DATA client            TYPE REF TO z2ui5_if_client.
    DATA title             TYPE string.
    DATA sort_field        TYPE string.
    DATA content_width     TYPE string.
    DATA content_height    TYPE string.
    DATA growing_threshold TYPE string.
    DATA descending        TYPE abap_bool.
    DATA multiselect       TYPE abap_bool.
    DATA event_confirmed   TYPE string.
    DATA event_canceled    TYPE string.

    METHODS on_event.
    METHODS display.
    METHODS set_output_table.
    METHODS on_event_confirm.
    METHODS on_event_search.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_hello_world DEFINITION
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    DATA name              TYPE string.
    DATA check_initialized TYPE abap_bool.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_app_startup DEFINITION FINAL
  CREATE PROTECTED.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    DATA:
      BEGIN OF ms_home,
        url                    TYPE string,
        btn_text               TYPE string,
        btn_event_id           TYPE string,
        btn_icon               TYPE string,
        classname              TYPE string,
        class_value_state      TYPE string,
        class_value_state_text TYPE string,
        class_editable         TYPE abap_bool VALUE abap_true,
      END OF ms_home.

    DATA mv_ui5_version       TYPE string.

    DATA client               TYPE REF TO z2ui5_if_client.
    DATA mv_check_initialized TYPE abap_bool.

    CLASS-METHODS factory
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_app_startup.

    METHODS z2ui5_on_init.
    METHODS z2ui5_on_event.
    METHODS view_display_start.
    METHODS on_event_check.
    METHODS view_display_popup.

  PROTECTED SECTION.
    DATA mt_classes TYPE z2ui5_cl_util=>ty_t_classes.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_http_handler DEFINITION
  CREATE PROTECTED.

  PUBLIC SECTION.
    CLASS-METHODS run
      IMPORTING
        server TYPE REF TO object                    OPTIONAL
        req    TYPE REF TO object                    OPTIONAL
        res    TYPE REF TO object                    OPTIONAL
        config TYPE z2ui5_if_types=>ty_s_http_config OPTIONAL
          PREFERRED PARAMETER server.

    CLASS-METHODS factory_cloud
      IMPORTING
        req           TYPE REF TO object
        res           TYPE REF TO object
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_http_handler.

    CLASS-METHODS factory
      IMPORTING
        server        TYPE REF TO object OPTIONAL
        req           TYPE REF TO object OPTIONAL
        res           TYPE REF TO object OPTIONAL
          PREFERRED PARAMETER server
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_http_handler.

    CLASS-METHODS _http_post
      IMPORTING
        is_req        TYPE z2ui5_if_core_types=>ty_s_http_req
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_http_res.

    CLASS-METHODS _http_get
      IMPORTING
        VALUE(is_config) TYPE  z2ui5_if_types=>ty_s_http_config
      RETURNING
        VALUE(result)    TYPE string.

    METHODS main
      IMPORTING
        s_config TYPE z2ui5_if_types=>ty_s_http_config OPTIONAL.

    CLASS-METHODS _main
      IMPORTING
        is_config     TYPE  z2ui5_if_types=>ty_s_http_config
        is_req        TYPE z2ui5_if_core_types=>ty_s_http_req
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_http_res.

    CLASS-METHODS get_request
      IMPORTING
        server        TYPE REF TO object OPTIONAL
        req           TYPE REF TO object OPTIONAL
        res           TYPE REF TO object OPTIONAL
          PREFERRED PARAMETER server
      RETURNING
        VALUE(result) TYPE z2ui5_if_core_types=>ty_s_http_req.

    CLASS-METHODS get_response
      IMPORTING
        server TYPE REF TO object OPTIONAL
        req    TYPE REF TO object OPTIONAL
        res    TYPE REF TO object OPTIONAL
        is_res TYPE z2ui5_if_core_types=>ty_s_http_res.

  PROTECTED SECTION.
    CLASS-DATA so_sticky_handler TYPE REF TO z2ui5_cl_core_handler.

    DATA mo_server TYPE REF TO z2ui5_cl_util_abap_http.

    DATA ms_req    TYPE z2ui5_if_core_types=>ty_s_http_req.
    DATA ms_res    TYPE z2ui5_if_core_types=>ty_s_http_res.
    DATA ms_config TYPE z2ui5_if_types=>ty_s_http_config.

    METHODS set_request.
    METHODS set_response.

  PRIVATE SECTION.

ENDCLASS.
CLASS z2ui5_cl_xml_view DEFINITION FINAL
  CREATE PROTECTED.

  PUBLIC SECTION.
    CLASS-METHODS factory
      IMPORTING
        t_ns          TYPE z2ui5_if_types=>ty_t_name_value OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    CLASS-METHODS factory_plain
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    CLASS-METHODS factory_popup
      IMPORTING
        t_ns          TYPE z2ui5_if_types=>ty_t_name_value OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS constructor.

    METHODS horizontal_layout
      IMPORTING
        class         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        allowwrapping TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS icon
      IMPORTING
        src                   TYPE clike OPTIONAL
        press                 TYPE clike OPTIONAL
        size                  TYPE clike OPTIONAL
        color                 TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        useicontooltip        TYPE clike OPTIONAL
        notabstop             TYPE clike OPTIONAL
        hovercolor            TYPE clike OPTIONAL
        hoverbackgroundcolor  TYPE clike OPTIONAL
        height                TYPE clike OPTIONAL
        decorative            TYPE clike OPTIONAL
        backgroundcolor       TYPE clike OPTIONAL
        alt                   TYPE clike OPTIONAL
        activecolor           TYPE clike OPTIONAL
        activebackgroundcolor TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS dynamic_page
      IMPORTING
        headerexpanded           TYPE clike OPTIONAL
        showfooter               TYPE clike OPTIONAL
        headerpinned             TYPE clike OPTIONAL
        toggleheaderontitleclick TYPE clike OPTIONAL
        class                    TYPE clike OPTIONAL
      RETURNING
        VALUE(result)            TYPE REF TO z2ui5_cl_xml_view.

    METHODS dynamic_page_title
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS dynamic_page_header
      IMPORTING
        pinnable      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS html
      IMPORTING
        content         TYPE clike OPTIONAL
        afterrendering  TYPE clike OPTIONAL
        preferdom       TYPE clike OPTIONAL
        sanitizecontent TYPE clike OPTIONAL
        visible         TYPE clike OPTIONAL
        id              TYPE clike OPTIONAL
          PREFERRED PARAMETER content
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS illustrated_message
      IMPORTING
        enableverticalresponsiveness TYPE clike OPTIONAL
        enableformattedtext          TYPE clike OPTIONAL
        illustrationtype             TYPE clike OPTIONAL
        title                        TYPE clike OPTIONAL
        description                  TYPE clike OPTIONAL
        illustrationsize             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                TYPE REF TO z2ui5_cl_xml_view.

    METHODS p_cell_selector
      IMPORTING
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS p_copy_provider
      IMPORTING
        id            TYPE clike OPTIONAL
        extract_data  TYPE clike OPTIONAL
        copy          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS additional_content
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS flex_box
      IMPORTING
        class            TYPE clike OPTIONAL
        rendertype       TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        fitcontainer     TYPE clike OPTIONAL
        height           TYPE clike OPTIONAL
        alignitems       TYPE clike OPTIONAL
        justifycontent   TYPE clike OPTIONAL
        wrap             TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        direction        TYPE clike OPTIONAL
        displayinline    TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        aligncontent     TYPE clike OPTIONAL
        items            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS popover
      IMPORTING
        !id                 TYPE clike OPTIONAL
        title               TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        placement           TYPE clike OPTIONAL
        initialfocus        TYPE clike OPTIONAL
        contentwidth        TYPE clike OPTIONAL
        contentheight       TYPE clike OPTIONAL
        showheader          TYPE clike OPTIONAL
        showarrow           TYPE clike OPTIONAL
        resizable           TYPE clike OPTIONAL
        modal               TYPE clike OPTIONAL
        horizontalscrolling TYPE clike OPTIONAL
        verticalscrolling   TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        offsetx             TYPE clike OPTIONAL
        offsety             TYPE clike OPTIONAL
        contentminwidth     TYPE clike OPTIONAL
        titlealignment      TYPE clike OPTIONAL
        beforeopen          TYPE clike OPTIONAL
        beforeclose         TYPE clike OPTIONAL
        afteropen           TYPE clike OPTIONAL
        afterclose          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS list_item
      IMPORTING
        text           TYPE clike OPTIONAL
        additionaltext TYPE clike OPTIONAL
        key            TYPE clike OPTIONAL
        icon           TYPE clike OPTIONAL
        enabled        TYPE clike OPTIONAL
        textdirection  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS table
      IMPORTING
        id                  TYPE clike OPTIONAL
        items               TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        growing             TYPE clike OPTIONAL
        growingthreshold    TYPE clike OPTIONAL
        growingscrolltoload TYPE clike OPTIONAL
        headertext          TYPE clike OPTIONAL
        sticky              TYPE clike OPTIONAL
        mode                TYPE clike OPTIONAL
        width               TYPE clike OPTIONAL
        selectionchange     TYPE clike OPTIONAL
        alternaterowcolors  TYPE clike OPTIONAL
        autopopinmode       TYPE clike OPTIONAL
        inset               TYPE clike OPTIONAL
        showseparators      TYPE clike OPTIONAL
        showoverlay         TYPE clike OPTIONAL
        hiddeninpopin       TYPE clike OPTIONAL
        popinlayout         TYPE clike OPTIONAL
        fixedlayout         TYPE clike OPTIONAL
        backgrounddesign    TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS analytical_table
      IMPORTING
        ns            TYPE clike OPTIONAL
        selectionmode TYPE clike OPTIONAL
        rowmode       TYPE clike OPTIONAL
        toolbar       TYPE clike OPTIONAL
        columns       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS rowmode
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS breadcrumbs
      IMPORTING
        ns                  TYPE clike OPTIONAL
        link                TYPE clike OPTIONAL
        id                  TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        currentlocationtext TYPE clike OPTIONAL
        separatorstyle      TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS current_location
      IMPORTING
        ns            TYPE clike OPTIONAL
        link          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS color_palette
      IMPORTING
        ns            TYPE clike OPTIONAL
        colorselect   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS auto
      IMPORTING
        ns               TYPE clike OPTIONAL
        rowcontentheight TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_strip
      IMPORTING
        text                TYPE clike OPTIONAL
        type                TYPE clike OPTIONAL
        showicon            TYPE clike OPTIONAL
        customicon          TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        showclosebutton     TYPE clike OPTIONAL
        enableformattedtext TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS footer
      IMPORTING
        ns            TYPE string OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_page
      IMPORTING
        show_header         TYPE clike OPTIONAL
        text                TYPE clike OPTIONAL
        enableformattedtext TYPE clike OPTIONAL
        description         TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_layout
      IMPORTING
        showtitleinheadercontent       TYPE clike OPTIONAL
        showeditheaderbutton           TYPE clike OPTIONAL
        editheaderbuttonpress          TYPE clike OPTIONAL
        uppercaseanchorbar             TYPE clike OPTIONAL
        showfooter                     TYPE clike OPTIONAL
        alwaysshowcontentheader        TYPE clike OPTIONAL
        enablelazyloading              TYPE clike OPTIONAL
        flexenabled                    TYPE clike OPTIONAL
        headercontentpinnable          TYPE clike OPTIONAL
        headercontentpinned            TYPE clike OPTIONAL
        ischildpage                    TYPE clike OPTIONAL
        preserveheaderstateonscroll    TYPE clike OPTIONAL
        showanchorbar                  TYPE clike OPTIONAL
        showanchorbarpopover           TYPE clike OPTIONAL
        showheadercontent              TYPE clike OPTIONAL
        showonlyhighimportance         TYPE clike OPTIONAL
        subsectionlayout               TYPE clike OPTIONAL
        toggleheaderontitleclick       TYPE clike OPTIONAL
        useicontabbar                  TYPE clike OPTIONAL
        usetwocolumnsforlargescreen    TYPE clike OPTIONAL
        visible                        TYPE clike OPTIONAL
        backgrounddesignanchorbar      TYPE clike OPTIONAL
        height                         TYPE clike OPTIONAL
        sectiontitlelevel              TYPE clike OPTIONAL
        beforenavigate                 TYPE clike OPTIONAL
        headercontentpinnedstatechange TYPE clike OPTIONAL
        navigate                       TYPE clike OPTIONAL
        sectionchange                  TYPE clike OPTIONAL
        subsectionvisibilitychange     TYPE clike OPTIONAL
        toggleanchorbar                TYPE clike OPTIONAL
        class                          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                  TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_header
      IMPORTING
        isactionareaalwaysvisible     TYPE clike OPTIONAL
        isobjecticonalwaysvisible     TYPE clike OPTIONAL
        isobjectsubtitlealwaysvisible TYPE clike OPTIONAL
        isobjecttitlealwaysvisible    TYPE clike OPTIONAL
        markchanges                   TYPE clike OPTIONAL
        markfavorite                  TYPE clike OPTIONAL
        markflagged                   TYPE clike OPTIONAL
        marklocked                    TYPE clike OPTIONAL
        objectimagealt                TYPE clike OPTIONAL
        objectimagebackgroundcolor    TYPE clike OPTIONAL
        objectimagedensityaware       TYPE clike OPTIONAL
        objectimageshape              TYPE clike OPTIONAL
        objectimageuri                TYPE clike OPTIONAL
        objectsubtitle                TYPE clike OPTIONAL
        objecttitle                   TYPE clike OPTIONAL
        showmarkers                   TYPE clike OPTIONAL
        showplaceholder               TYPE clike OPTIONAL
        showtitleselector             TYPE clike OPTIONAL
        visible                       TYPE clike OPTIONAL
        markchangespress              TYPE clike OPTIONAL
        marklockedpress               TYPE clike OPTIONAL
        titleselectorpress            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_header_action_btn
      IMPORTING
        activeicon       TYPE clike OPTIONAL
        ariahaspopup     TYPE clike OPTIONAL
        enabled          TYPE clike OPTIONAL
        hideicon         TYPE clike OPTIONAL
        hidetext         TYPE clike OPTIONAL
        icon             TYPE clike OPTIONAL
        icondensityaware TYPE clike OPTIONAL
        iconfirst        TYPE clike OPTIONAL
        importance       TYPE clike OPTIONAL
        text             TYPE clike OPTIONAL
        textdirection    TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        type             TYPE clike OPTIONAL
        press            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_dyn_header_title
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS generic_tile
      IMPORTING
        class                  TYPE clike OPTIONAL
        id                     TYPE clike OPTIONAL
        header                 TYPE clike OPTIONAL
        mode                   TYPE clike OPTIONAL
        additionaltooltip      TYPE clike OPTIONAL
        appshortcut            TYPE clike OPTIONAL
        backgroundcolor        TYPE clike OPTIONAL
        backgroundimage        TYPE clike OPTIONAL
        dropareaoffset         TYPE clike OPTIONAL
        press                  TYPE clike OPTIONAL
        frametype              TYPE clike OPTIONAL
        failedtext             TYPE clike OPTIONAL
        headerimage            TYPE clike OPTIONAL
        scope                  TYPE clike OPTIONAL
        sizebehavior           TYPE clike OPTIONAL
        state                  TYPE clike OPTIONAL
        systeminfo             TYPE clike OPTIONAL
        tilebadge              TYPE clike OPTIONAL
        tileicon               TYPE clike OPTIONAL
        url                    TYPE clike OPTIONAL
        valuecolor             TYPE clike OPTIONAL
        width                  TYPE clike OPTIONAL
        wrappingtype           TYPE clike OPTIONAL
        imagedescription       TYPE clike OPTIONAL
        navigationbuttontext   TYPE clike OPTIONAL
        visible                TYPE clike OPTIONAL
        renderonthemechange    TYPE clike OPTIONAL
        enablenavigationbutton TYPE clike OPTIONAL
        pressenabled           TYPE clike OPTIONAL
        iconloaded             TYPE clike OPTIONAL
        subheader              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS numeric_content
      IMPORTING
        value             TYPE clike OPTIONAL
        icon              TYPE clike OPTIONAL
        withmargin        TYPE clike OPTIONAL
        adaptivefontsize  TYPE clike OPTIONAL
        animatetextchange TYPE clike OPTIONAL
        formattervalue    TYPE clike OPTIONAL
        icondescription   TYPE clike OPTIONAL
        indicator         TYPE clike OPTIONAL
        nullifyvalue      TYPE clike OPTIONAL
        scale             TYPE clike OPTIONAL
        state             TYPE clike OPTIONAL
        truncatevalueto   TYPE clike OPTIONAL
        valuecolor        TYPE clike OPTIONAL
        visible           TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS link_tile_content
      IMPORTING
        linkhref      TYPE clike OPTIONAL
        linktext      TYPE clike OPTIONAL
        iconsrc       TYPE clike OPTIONAL
        linkpress     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS image_content
      IMPORTING
        src           TYPE clike OPTIONAL
        description   TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tile_content
      IMPORTING
        unit          TYPE clike OPTIONAL
        footercolor   TYPE clike OPTIONAL
        blocked       TYPE clike OPTIONAL
        frametype     TYPE clike OPTIONAL
        priority      TYPE clike OPTIONAL
        prioritytext  TYPE clike OPTIONAL
        state         TYPE clike OPTIONAL
        disabled      TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        footer        TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS expanded_heading
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS snapped_heading
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS expanded_content
      IMPORTING
        ns            TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS snapped_content
      IMPORTING
        ns            TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS heading
      IMPORTING
        ns            TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS actions
      IMPORTING
        ns            TYPE clike
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS snapped_title_on_mobile
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS header
      IMPORTING
        ns            TYPE clike DEFAULT `f`
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS navigation_actions
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS avatar
      IMPORTING
        ns                TYPE clike OPTIONAL
        src               TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        displaysize       TYPE clike OPTIONAL
        ariahaspopup      TYPE clike OPTIONAL
        backgroundcolor   TYPE clike OPTIONAL
        badgeicon         TYPE clike OPTIONAL
        badgetooltip      TYPE clike OPTIONAL
        badgevaluestate   TYPE clike OPTIONAL
        customdisplaysize TYPE clike OPTIONAL
        customfontsize    TYPE clike OPTIONAL
        displayshape      TYPE clike OPTIONAL
        fallbackicon      TYPE clike OPTIONAL
        imagefittype      TYPE clike OPTIONAL
        initials          TYPE clike OPTIONAL
        showborder        TYPE clike OPTIONAL
        decorative        TYPE clike OPTIONAL
        enabled           TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS avatar_group
      IMPORTING !id                     TYPE clike     OPTIONAL
                avatarCustomDisplaySize TYPE clike     OPTIONAL
                avatarCustomFontSize    TYPE clike     OPTIONAL
                avatarDisplaySize       TYPE clike     OPTIONAL
                !blocked                TYPE abap_bool OPTIONAL
                busy                    TYPE abap_bool OPTIONAL
                busyIndicatorDelay      TYPE clike     OPTIONAL
                busyIndicatorSize       TYPE clike     OPTIONAL
                fieldGroupIds           TYPE clike     OPTIONAL
                groupType               TYPE clike     OPTIONAL
                !visible                TYPE abap_bool DEFAULT abap_true
                tooltip                 TYPE clike     OPTIONAL
                items                   TYPE clike     OPTIONAL
                press                   TYPE clike     OPTIONAL
      RETURNING VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS avatar_group_item
      IMPORTING !id                TYPE clike OPTIONAL
                busy               TYPE clike DEFAULT `false`
                busyIndicatorDelay TYPE clike OPTIONAL
                busyIndicatorSize  TYPE clike OPTIONAL
                fallbackIcon       TYPE clike OPTIONAL
                fieldGroupIds      TYPE clike OPTIONAL
                initials           TYPE clike OPTIONAL
                src                TYPE clike OPTIONAL
                !visible           TYPE clike DEFAULT `true`
                tooltip            TYPE clike OPTIONAL
      RETURNING VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS header_title
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS sections
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_section
      IMPORTING
        titleuppercase       TYPE clike OPTIONAL
        title                TYPE clike OPTIONAL
        importance           TYPE clike OPTIONAL
        id                   TYPE clike OPTIONAL
        titlelevel           TYPE clike OPTIONAL
        showtitle            TYPE clike OPTIONAL
        visible              TYPE clike OPTIONAL
        wraptitle            TYPE clike OPTIONAL
        anchorbarbuttoncolor TYPE clike OPTIONAL
        titlevisible         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)        TYPE REF TO z2ui5_cl_xml_view.

    METHODS sub_sections
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_page_sub_section
      IMPORTING
        id             TYPE clike OPTIONAL
        title          TYPE clike OPTIONAL
        mode           TYPE clike OPTIONAL
        importance     TYPE clike OPTIONAL
        titlelevel     TYPE clike OPTIONAL
        showtitle      TYPE clike OPTIONAL
        titleuppercase TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
        titlevisible   TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS shell
      IMPORTING
        ns              TYPE clike OPTIONAL
        appwidthlimited TYPE clike OPTIONAL
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS shell_bar
      IMPORTING
        homeicon               TYPE clike     OPTIONAL
        homeicontooltip        TYPE clike     OPTIONAL
        notificationsnumber    TYPE clike     OPTIONAL
        secondtitle            TYPE clike     OPTIONAL
        showcopilot            TYPE abap_bool OPTIONAL
        showmenubutton         TYPE abap_bool OPTIONAL
        shownavbutton          TYPE abap_bool OPTIONAL
        shownotifications      TYPE abap_bool OPTIONAL
        showproductswitcher    TYPE abap_bool OPTIONAL
        showsearch             TYPE abap_bool OPTIONAL
        title                  TYPE clike     OPTIONAL
        avatarpressed          TYPE clike     OPTIONAL
        copilotpressed         TYPE clike     OPTIONAL
        homeiconpressed        TYPE clike     OPTIONAL
        menubuttonpressed      TYPE clike     OPTIONAL
        navbuttonpressed       TYPE clike     OPTIONAL
        notificationspressed   TYPE clike     OPTIONAL
        productswitcherpressed TYPE clike     OPTIONAL
        searchbuttonpressed    TYPE clike     OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS blocks
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS more_blocks
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS layout_data
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS flex_item_data
      IMPORTING
        growfactor       TYPE clike OPTIONAL
        basesize         TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        styleclass       TYPE clike OPTIONAL
        order            TYPE clike OPTIONAL
        shrinkfactor     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS code_editor
      IMPORTING
        value         TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        editable      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS suggestion_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS suggestion_item
      IMPORTING
        description   TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS suggestion_columns
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS suggestion_rows
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS vertical_layout
      IMPORTING
        class         TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS multi_input
      IMPORTING
        showclearicon    TYPE clike OPTIONAL
        showvaluehelp    TYPE clike OPTIONAL
        name             TYPE clike OPTIONAL
        suggestionitems  TYPE clike OPTIONAL
        tokenupdate      TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        value            TYPE clike OPTIONAL
        tokens           TYPE clike OPTIONAL
        submit           TYPE clike OPTIONAL
        valuehelprequest TYPE clike OPTIONAL
        enabled          TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        change           TYPE clike OPTIONAL
        required         TYPE clike OPTIONAL
        valuestate       TYPE clike OPTIONAL
        valuestatetext   TYPE clike OPTIONAL
        placeholder      TYPE clike OPTIONAL
        showsuggestion   TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS tokens
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS token
      IMPORTING
        key           TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        editable      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS input
      IMPORTING
        id                            TYPE clike OPTIONAL
        value                         TYPE clike OPTIONAL
        placeholder                   TYPE clike OPTIONAL
        type                          TYPE clike OPTIONAL
        showclearicon                 TYPE clike OPTIONAL
        valuestate                    TYPE clike OPTIONAL
        valuestatetext                TYPE clike OPTIONAL
        showtablesuggestionvaluehelp  TYPE clike OPTIONAL
        description                   TYPE clike OPTIONAL
        editable                      TYPE clike OPTIONAL
        enabled                       TYPE clike OPTIONAL
        suggestionitems               TYPE clike OPTIONAL
        suggestionrows                TYPE clike OPTIONAL
        showsuggestion                TYPE clike OPTIONAL
        showvaluehelp                 TYPE clike OPTIONAL
        valuehelprequest              TYPE clike OPTIONAL
        required                      TYPE clike OPTIONAL
        suggest                       TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
        visible                       TYPE clike OPTIONAL
        submit                        TYPE clike OPTIONAL
        valueliveupdate               TYPE clike OPTIONAL
        autocomplete                  TYPE clike OPTIONAL
        maxsuggestionwidth            TYPE clike OPTIONAL
        fieldwidth                    TYPE clike OPTIONAL
        valuehelponly                 TYPE clike OPTIONAL
        width                         TYPE clike OPTIONAL
        change                        TYPE clike OPTIONAL
        valuehelpiconsrc              TYPE clike OPTIONAL
        textformatter                 TYPE clike OPTIONAL
        textformatmode                TYPE clike OPTIONAL
        maxlength                     TYPE clike OPTIONAL
        startsuggestion               TYPE clike OPTIONAL
        enablesuggestionshighlighting TYPE clike OPTIONAL
        enabletableautopopinmode      TYPE clike OPTIONAL
        arialabelledby                TYPE clike OPTIONAL
        ariadescribedby               TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS dialog
      IMPORTING
        title               TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
        showheader          TYPE clike OPTIONAL
        stretch             TYPE clike OPTIONAL
        contentheight       TYPE clike OPTIONAL
        contentwidth        TYPE clike OPTIONAL
        resizable           TYPE clike OPTIONAL
        horizontalscrolling TYPE clike OPTIONAL
        verticalscrolling   TYPE clike OPTIONAL
        afterclose          TYPE clike OPTIONAL
        beforeopen          TYPE clike OPTIONAL
        beforeclose         TYPE clike OPTIONAL
        afteropen           TYPE clike OPTIONAL
        draggable           TYPE clike OPTIONAL
        closeonnavigation   TYPE clike OPTIONAL
        escapehandler       TYPE clike OPTIONAL
        type                TYPE clike OPTIONAL
        titlealignment      TYPE clike OPTIONAL
        state               TYPE clike OPTIONAL
          PREFERRED PARAMETER title
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS carousel
      IMPORTING
        height                        TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
        loop                          TYPE clike OPTIONAL
        id                            TYPE clike OPTIONAL
        arrowsplacement               TYPE clike OPTIONAL
        backgrounddesign              TYPE clike OPTIONAL
        pageindicatorbackgrounddesign TYPE clike OPTIONAL
        pageindicatorborderdesign     TYPE clike OPTIONAL
        pageindicatorplacement        TYPE clike OPTIONAL
        width                         TYPE clike OPTIONAL
        showpageindicator             TYPE clike OPTIONAL
        visible                       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS buttons
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS get_root
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS get_parent
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS get
      IMPORTING
        name          TYPE string OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS get_child
      IMPORTING
        index         TYPE i DEFAULT 1
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS columns
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS analytical_column
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column
      IMPORTING
        width             TYPE clike OPTIONAL
        id                TYPE clike OPTIONAL
        minscreenwidth    TYPE clike OPTIONAL
        demandpopin       TYPE clike OPTIONAL
        halign            TYPE clike OPTIONAL
        visible           TYPE clike OPTIONAL
        valign            TYPE clike OPTIONAL
        styleclass        TYPE clike OPTIONAL
        sortindicator     TYPE clike OPTIONAL
        popindisplay      TYPE clike OPTIONAL
        mergefunctionname TYPE clike OPTIONAL
        mergeduplicates   TYPE clike OPTIONAL
        importance        TYPE clike OPTIONAL
        autopopinwidth    TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        headermenu        TYPE clike OPTIONAL
          PREFERRED PARAMETER width
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS items
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_donut_chart
      IMPORTING
        selectionchanged  TYPE clike OPTIONAL
        errormessage      TYPE clike OPTIONAL
        errormessagetitle TYPE clike OPTIONAL
        showerror         TYPE clike OPTIONAL
        displayedsegments TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        segments          TYPE clike OPTIONAL
        selectionenabled  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS segments
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_donut_chart_segment
      IMPORTING
        label          TYPE clike OPTIONAL
        value          TYPE clike OPTIONAL
        displayedvalue TYPE clike OPTIONAL
        selected       TYPE clike OPTIONAL
        color          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_bar_chart
      IMPORTING
        selectionchanged  TYPE clike OPTIONAL
        selectionenabled  TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        labelwidth        TYPE clike OPTIONAL
        errormessage      TYPE clike OPTIONAL
        errormessagetitle TYPE clike OPTIONAL
        showerror         TYPE clike OPTIONAL
        displayedbars     TYPE clike OPTIONAL
        bars              TYPE clike OPTIONAL
        max               TYPE clike OPTIONAL
        min               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS bars
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_bar_chart_bar
      IMPORTING
        label          TYPE clike OPTIONAL
        value          TYPE clike OPTIONAL
        displayedvalue TYPE clike OPTIONAL
        selected       TYPE clike OPTIONAL
        color          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_line_chart
      IMPORTING
        selectionchanged  TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        precedingpoint    TYPE clike OPTIONAL
        succeddingpoint   TYPE clike OPTIONAL
        errormessage      TYPE clike OPTIONAL
        errormessagetitle TYPE clike OPTIONAL
        showerror         TYPE clike OPTIONAL
        displayedpoints   TYPE clike OPTIONAL
        selectionenabled  TYPE clike OPTIONAL
        points            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS points
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS interact_line_chart_point
      IMPORTING
        label          TYPE clike OPTIONAL
        value          TYPE clike OPTIONAL
        secondarylabel TYPE clike OPTIONAL
        displayedvalue TYPE clike OPTIONAL
        selected       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS radial_micro_chart
      IMPORTING
        size          TYPE clike OPTIONAL
        percentage    TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        valuecolor    TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        aligncontent  TYPE clike OPTIONAL
        hideonnodata  TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_list_item
      IMPORTING
        id            TYPE clike OPTIONAL
        valign        TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        counter       TYPE clike OPTIONAL
        highlight     TYPE clike OPTIONAL
        highlighttext TYPE clike OPTIONAL
        navigated     TYPE clike OPTIONAL
        unread        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        detailpress   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS action_list_item
      IMPORTING
        id            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS cells
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS bar
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS content_left
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS content_middle
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS content_right
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS content_areas
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS field
      IMPORTING
        ns                 TYPE clike OPTIONAL
        id                 TYPE clike OPTIONAL
        value              TYPE clike OPTIONAL
        editmode           TYPE clike OPTIONAL
        showemptyindicator TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS custom_header
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS header_content
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS sub_header
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS custom_data
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS core_custom_data
      IMPORTING
        key           TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        writetodom    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS badge_custom_data
      IMPORTING
        key           TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS toggle_button
      IMPORTING
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        pressed       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS button
      IMPORTING
        text             TYPE clike OPTIONAL
        icon             TYPE clike OPTIONAL
        type             TYPE clike OPTIONAL
        enabled          TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        press            TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        ns               TYPE clike OPTIONAL
        tooltip          TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        iconfirst        TYPE clike OPTIONAL
        icondensityaware TYPE clike OPTIONAL
        ariahaspopup     TYPE clike OPTIONAL
        activeicon       TYPE clike OPTIONAL
        accessiblerole   TYPE clike OPTIONAL
        textdirection    TYPE clike OPTIONAL
        arialabelledby   TYPE clike OPTIONAL
        ariadescribedby  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS begin_button
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS end_button
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS search_field
      IMPORTING
        search            TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        value             TYPE clike OPTIONAL
        id                TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        change            TYPE clike OPTIONAL
        livechange        TYPE clike OPTIONAL
        suggest           TYPE clike OPTIONAL
        enabled           TYPE clike OPTIONAL
        enablesuggestions TYPE clike OPTIONAL
        maxlength         TYPE clike OPTIONAL
        placeholder       TYPE clike OPTIONAL
        showrefreshbutton TYPE clike OPTIONAL
        showsearchbutton  TYPE clike OPTIONAL
        visible           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_view
      IMPORTING
        items         TYPE clike OPTIONAL
        groupitems    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS barcode_scanner_button
      IMPORTING !id                       TYPE clike OPTIONAL
                scansuccess               TYPE clike OPTIONAL
                scanfail                  TYPE clike OPTIONAL
                inputliveupdate           TYPE clike OPTIONAL
                dialogtitle               TYPE clike OPTIONAL
                disableBarcodeInputDialog TYPE clike OPTIONAL
                frameRate                 TYPE clike OPTIONAL
                keepCameraScan            TYPE clike OPTIONAL
                preferFrontCamera         TYPE clike OPTIONAL
                provideFallback           TYPE clike OPTIONAL
                !width                    TYPE clike OPTIONAL
                zoom                      TYPE clike OPTIONAL
      RETURNING VALUE(result)             TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_popover
      IMPORTING
        items             TYPE clike OPTIONAL
        groupitems        TYPE clike OPTIONAL
        listselect        TYPE clike OPTIONAL
        activetitlepress  TYPE clike OPTIONAL
        placement         TYPE clike OPTIONAL
        afterclose        TYPE clike OPTIONAL
        beforeclose       TYPE clike OPTIONAL
        initiallyexpanded TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_item
      IMPORTING
        type              TYPE clike OPTIONAL
        title             TYPE clike OPTIONAL
        subtitle          TYPE clike OPTIONAL
        description       TYPE clike OPTIONAL
        groupname         TYPE clike OPTIONAL
        markupdescription TYPE clike OPTIONAL
        textdirection     TYPE clike OPTIONAL
        longtexturl       TYPE clike OPTIONAL
        counter           TYPE clike OPTIONAL
        activetitle       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS page
      IMPORTING
        title            TYPE clike OPTIONAL
        navbuttonpress   TYPE clike OPTIONAL
        shownavbutton    TYPE clike OPTIONAL
        showheader       TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        ns               TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        contentonlybusy  TYPE clike OPTIONAL
        enablescrolling  TYPE clike OPTIONAL
        navbuttontooltip TYPE clike OPTIONAL
        floatingfooter   TYPE clike OPTIONAL
        showfooter       TYPE clike OPTIONAL
        showsubheader    TYPE clike OPTIONAL
        titlealignment   TYPE clike OPTIONAL
        titlelevel       TYPE clike OPTIONAL
          PREFERRED PARAMETER title
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS menu_button
      IMPORTING
        text          TYPE clike OPTIONAL
        activeicon    TYPE clike OPTIONAL
        buttonmode    TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        defaultaction TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS panel
      IMPORTING
        expandable       TYPE clike OPTIONAL
        expanded         TYPE clike OPTIONAL
        headertext       TYPE clike OPTIONAL
        stickyheader     TYPE clike OPTIONAL
        height           TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        expandanimation  TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        expand           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS vbox
      IMPORTING
        id               TYPE clike OPTIONAL
        height           TYPE clike OPTIONAL
        justifycontent   TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        rendertype       TYPE clike OPTIONAL
        aligncontent     TYPE clike OPTIONAL
        direction        TYPE clike OPTIONAL
        alignitems       TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        wrap             TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        displayinline    TYPE clike OPTIONAL
        fitcontainer     TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
          PREFERRED PARAMETER class
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS hbox
      IMPORTING
        id               TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        justifycontent   TYPE clike OPTIONAL
        aligncontent     TYPE clike OPTIONAL
        alignitems       TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        height           TYPE clike OPTIONAL
        rendertype       TYPE clike OPTIONAL
        wrap             TYPE clike OPTIONAL
        backgrounddesign TYPE clike OPTIONAL
        direction        TYPE clike OPTIONAL
        displayinline    TYPE clike OPTIONAL
        fitcontainer     TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS scroll_container
      IMPORTING
        height        TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        vertical      TYPE clike OPTIONAL
        horizontal    TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        focusable     TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
          PREFERRED PARAMETER height
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS simple_form
      IMPORTING
        title                   TYPE clike OPTIONAL
        layout                  TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        editable                TYPE clike OPTIONAL
        columnsxl               TYPE clike OPTIONAL
        columnsl                TYPE clike OPTIONAL
        columnsm                TYPE clike OPTIONAL
        id                      TYPE clike OPTIONAL
        adjustlabelspan         TYPE clike OPTIONAL
        backgrounddesign        TYPE clike OPTIONAL
        breakpointl             TYPE clike OPTIONAL
        breakpointm             TYPE clike OPTIONAL
        breakpointxl            TYPE clike OPTIONAL
        emptyspanl              TYPE clike OPTIONAL
        emptyspanm              TYPE clike OPTIONAL
        emptyspans              TYPE clike OPTIONAL
        emptyspanxl             TYPE clike OPTIONAL
        labelspans              TYPE clike OPTIONAL
        labelspanm              TYPE clike OPTIONAL
        labelspanl              TYPE clike OPTIONAL
        labelspanxl             TYPE clike OPTIONAL
        maxcontainercols        TYPE clike OPTIONAL
        minwidth                TYPE clike OPTIONAL
        singlecontainerfullsize TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
        width                   TYPE clike OPTIONAL
          PREFERRED PARAMETER title
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS _cc_plain_xml
      IMPORTING
        val           TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS content
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS title
      IMPORTING
        ns            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        wrapping      TYPE clike OPTIONAL
        level         TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        textalign     TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        titlestyle    TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        wrappingtype  TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tab_container
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tab
      IMPORTING
        text          TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS overflow_toolbar
      IMPORTING
        press         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        active        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        asyncmode     TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        design        TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        style         TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS overflow_toolbar_toggle_button
      IMPORTING
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS overflow_toolbar_button
      IMPORTING
        id            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS overflow_toolbar_menu_button
      IMPORTING
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        buttonmode    TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
        defaultaction TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS menu_item
      IMPORTING
        press         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS toolbar_spacer
      IMPORTING
        ns            TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS label
      IMPORTING
        text          TYPE clike OPTIONAL
        labelfor      TYPE clike OPTIONAL
        design        TYPE clike OPTIONAL
        displayonly   TYPE clike OPTIONAL
        required      TYPE clike OPTIONAL
        showcolon     TYPE clike OPTIONAL
        textalign     TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        valign        TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        wrapping      TYPE clike OPTIONAL
        wrappingtype  TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS image
      IMPORTING
        src                TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        height             TYPE clike OPTIONAL
        width              TYPE clike OPTIONAL
        usemap             TYPE clike OPTIONAL
        mode               TYPE clike OPTIONAL
        lazyloading        TYPE clike OPTIONAL
        densityaware       TYPE clike OPTIONAL
        decorative         TYPE clike OPTIONAL
        backgroundsize     TYPE clike OPTIONAL
        backgroundrepeat   TYPE clike OPTIONAL
        backgroundposition TYPE clike OPTIONAL
        ariahaspopup       TYPE clike OPTIONAL
        alt                TYPE clike OPTIONAL
        activesrc          TYPE clike OPTIONAL
        press              TYPE clike OPTIONAL
        load               TYPE clike OPTIONAL
        error              TYPE clike OPTIONAL
        id                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS date_picker
      IMPORTING
        value                   TYPE clike OPTIONAL
        placeholder             TYPE clike OPTIONAL
        displayformat           TYPE clike OPTIONAL
        valueformat             TYPE clike OPTIONAL
        required                TYPE clike OPTIONAL
        valuestate              TYPE clike OPTIONAL
        valuestatetext          TYPE clike OPTIONAL
        enabled                 TYPE clike OPTIONAL
        showcurrentdatebutton   TYPE clike OPTIONAL
        change                  TYPE clike OPTIONAL
        hideinput               TYPE clike OPTIONAL
        showfooter              TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
        showvaluestatemessage   TYPE clike OPTIONAL
        mindate                 TYPE clike OPTIONAL
        maxdate                 TYPE clike OPTIONAL
        editable                TYPE clike OPTIONAL
        width                   TYPE clike OPTIONAL
        id                      TYPE clike OPTIONAL
        calendarweeknumbering   TYPE clike OPTIONAL
        displayformattype       TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        textdirection           TYPE clike OPTIONAL
        textalign               TYPE clike OPTIONAL
        name                    TYPE clike OPTIONAL
        datevalue               TYPE clike OPTIONAL
        initialfocuseddatevalue TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS time_picker
      IMPORTING
        value                   TYPE clike OPTIONAL
        placeholder             TYPE clike OPTIONAL
        enabled                 TYPE clike OPTIONAL
        valuestate              TYPE clike OPTIONAL
        displayformat           TYPE clike OPTIONAL
        valueformat             TYPE clike OPTIONAL
        required                TYPE clike OPTIONAL
        width                   TYPE clike OPTIONAL
        datevalue               TYPE clike OPTIONAL
        localeid                TYPE clike OPTIONAL
        mask                    TYPE clike OPTIONAL
        maskmode                TYPE clike OPTIONAL
        minutesstep             TYPE clike OPTIONAL
        name                    TYPE clike OPTIONAL
        placeholdersymbol       TYPE clike OPTIONAL
        secondsstep             TYPE clike OPTIONAL
        textalign               TYPE clike OPTIONAL
        textdirection           TYPE clike OPTIONAL
        title                   TYPE clike OPTIONAL
        showcurrenttimebutton   TYPE clike OPTIONAL
        showvaluestatemessage   TYPE clike OPTIONAL
        support2400             TYPE clike OPTIONAL
        initialfocuseddatevalue TYPE clike OPTIONAL
        hideinput               TYPE clike OPTIONAL
        editable                TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
        valuestatetext          TYPE clike OPTIONAL
        livechange              TYPE clike OPTIONAL
        change                  TYPE clike OPTIONAL
        aftervaluehelpopen      TYPE clike OPTIONAL
        aftervaluehelpclose     TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS date_time_picker
      IMPORTING
        value         TYPE clike OPTIONAL
        placeholder   TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        valuestate    TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS link
      IMPORTING
        text               TYPE clike OPTIONAL
        href               TYPE clike OPTIONAL
        target             TYPE clike OPTIONAL
        enabled            TYPE clike OPTIONAL
        press              TYPE clike OPTIONAL
        id                 TYPE clike OPTIONAL
        ns                 TYPE clike OPTIONAL
        wrapping           TYPE clike OPTIONAL
        width              TYPE clike OPTIONAL
        validateurl        TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        textalign          TYPE clike OPTIONAL
        subtle             TYPE clike OPTIONAL
        rel                TYPE clike OPTIONAL
        emptyindicatormode TYPE clike OPTIONAL
        emphasized         TYPE clike OPTIONAL
        ariahaspopup       TYPE clike OPTIONAL
        accessiblerole     TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        endicon            TYPE clike OPTIONAL
        icon               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS list
      IMPORTING
        headertext             TYPE clike OPTIONAL
        items                  TYPE clike OPTIONAL
        mode                   TYPE clike OPTIONAL
        selectionchange        TYPE clike OPTIONAL
        showseparators         TYPE clike OPTIONAL
        footertext             TYPE clike OPTIONAL
        growingdirection       TYPE clike OPTIONAL
        growingthreshold       TYPE clike OPTIONAL
        growingtriggertext     TYPE clike OPTIONAL
        headerlevel            TYPE clike OPTIONAL
        multiselectmode        TYPE clike OPTIONAL
        nodatatext             TYPE clike OPTIONAL
        sticky                 TYPE clike OPTIONAL
        modeanimationon        TYPE clike OPTIONAL
        growingscrolltoload    TYPE clike OPTIONAL
        includeiteminselection TYPE clike OPTIONAL
        growing                TYPE clike OPTIONAL
        inset                  TYPE clike OPTIONAL
        backgrounddesign       TYPE clike OPTIONAL
        rememberselections     TYPE clike OPTIONAL
        showunread             TYPE clike OPTIONAL
        visible                TYPE clike OPTIONAL
        nodata                 TYPE clike OPTIONAL
        id                     TYPE clike OPTIONAL
        itempress              TYPE clike OPTIONAL
        select                 TYPE clike OPTIONAL
        delete                 TYPE clike OPTIONAL
        class                  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS custom_list_item
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS input_list_item
      IMPORTING
        label         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS standard_list_item
      IMPORTING
        title             TYPE clike OPTIONAL
        description       TYPE clike OPTIONAL
        icon              TYPE clike OPTIONAL
        info              TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        type              TYPE clike OPTIONAL
        selected          TYPE clike OPTIONAL
        counter           TYPE clike OPTIONAL
        wrapping          TYPE clike OPTIONAL
        wrapcharlimit     TYPE clike OPTIONAL
        infostateinverted TYPE clike OPTIONAL
        infostate         TYPE clike OPTIONAL
        iconinset         TYPE clike OPTIONAL
        adapttitlesize    TYPE clike OPTIONAL
        activeicon        TYPE clike OPTIONAL
        unread            TYPE clike OPTIONAL
        highlight         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS item
      IMPORTING
        key           TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS segmented_button_item
      IMPORTING
        icon          TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS combobox
      IMPORTING
        selectedkey           TYPE clike OPTIONAL
        showclearicon         TYPE clike OPTIONAL
        selectionchange       TYPE clike OPTIONAL
        selecteditem          TYPE clike OPTIONAL
        items                 TYPE clike OPTIONAL
        change                TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        showsecondaryvalues   TYPE clike OPTIONAL
        placeholder           TYPE clike OPTIONAL
        selecteditemid        TYPE clike OPTIONAL
        name                  TYPE clike OPTIONAL
        value                 TYPE clike OPTIONAL
        valuestate            TYPE clike OPTIONAL
        valuestatetext        TYPE clike OPTIONAL
        textalign             TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
        showvaluestatemessage TYPE clike OPTIONAL
        showbutton            TYPE clike OPTIONAL
        required              TYPE clike OPTIONAL
        editable              TYPE clike OPTIONAL
        enabled               TYPE clike OPTIONAL
        filtersecondaryvalues TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS multi_combobox
      IMPORTING
        selectionchange       TYPE clike OPTIONAL
        selectedkeys          TYPE clike OPTIONAL
        selecteditems         TYPE clike OPTIONAL
        items                 TYPE clike OPTIONAL
        selectionfinish       TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        showclearicon         TYPE clike OPTIONAL
        showsecondaryvalues   TYPE clike OPTIONAL
        placeholder           TYPE clike OPTIONAL
        selecteditemid        TYPE clike OPTIONAL
        selectedkey           TYPE clike OPTIONAL
        name                  TYPE clike OPTIONAL
        value                 TYPE clike OPTIONAL
        valuestate            TYPE clike OPTIONAL
        valuestatetext        TYPE clike OPTIONAL
        textalign             TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
        showvaluestatemessage TYPE clike OPTIONAL
        showbutton            TYPE clike OPTIONAL
        required              TYPE clike OPTIONAL
        editable              TYPE clike OPTIONAL
        enabled               TYPE clike OPTIONAL
        filtersecondaryvalues TYPE clike OPTIONAL
        showselectall         TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid
      IMPORTING
        class          TYPE clike OPTIONAL
        default_span   TYPE clike OPTIONAL
        containerquery TYPE clike OPTIONAL
        hspacing       TYPE clike OPTIONAL
        vspacing       TYPE clike OPTIONAL
        width          TYPE clike OPTIONAL
        content        TYPE clike OPTIONAL
          PREFERRED PARAMETER default_span
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid_box_layout
      IMPORTING boxesperrowconfig TYPE clike OPTIONAL
                boxMinWidth       TYPE clike OPTIONAL
                boxWidth          TYPE clike OPTIONAL
      RETURNING VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid_data
      IMPORTING
        span          TYPE clike OPTIONAL
        linebreak     TYPE clike OPTIONAL
        indentl       TYPE clike OPTIONAL
        indentm       TYPE clike OPTIONAL
          PREFERRED PARAMETER span
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid_drop_info
      IMPORTING targetAggregation TYPE clike OPTIONAL
                dropPosition      TYPE clike OPTIONAL
                dropLayout        TYPE clike OPTIONAL
                drop              TYPE clike OPTIONAL
                dragEnter         TYPE clike OPTIONAL
                dragOver          TYPE clike OPTIONAL
      RETURNING VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid_list
      IMPORTING !id                    TYPE clike     OPTIONAL
                busy                   TYPE abap_bool OPTIONAL
                busyIndicatorDelay     TYPE clike     OPTIONAL
                busyIndicatorSize      TYPE clike     OPTIONAL
                enableBusyIndicator    TYPE abap_bool OPTIONAL
                fieldGroupIds          TYPE clike     OPTIONAL
                footerText             TYPE clike     OPTIONAL
                growing                TYPE abap_bool OPTIONAL
                growingDirection       TYPE clike     OPTIONAL
                growingScrollToLoad    TYPE abap_bool OPTIONAL
                growingThreshold       TYPE clike     OPTIONAL
                growingTriggerText     TYPE clike     OPTIONAL
                headerLevel            TYPE clike     OPTIONAL
                headerText             TYPE clike     OPTIONAL
                includeItemInSelection TYPE abap_bool OPTIONAL
                inset                  TYPE abap_bool OPTIONAL
                keyboardMode           TYPE clike     OPTIONAL
                !mode                  TYPE clike     OPTIONAL
                modeAnimationOn        TYPE abap_bool OPTIONAL
                multiSelectMode        TYPE clike     OPTIONAL
                noDataText             TYPE clike     OPTIONAL
                rememberSelections     TYPE abap_bool OPTIONAL
                showNoData             TYPE abap_bool OPTIONAL
                showSeparators         TYPE clike     OPTIONAL
                showUnread             TYPE abap_bool OPTIONAL
                sticky                 TYPE clike     OPTIONAL
                swipeDirection         TYPE clike     OPTIONAL
                !visible               TYPE abap_bool DEFAULT abap_true
                !width                 TYPE clike     OPTIONAL
                items                  TYPE clike     OPTIONAL
      RETURNING VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS grid_list_item
      IMPORTING busy               TYPE clike OPTIONAL
                busyIndicatorDelay TYPE clike OPTIONAL
                busyIndicatorSize  TYPE clike OPTIONAL
                counter            TYPE clike OPTIONAL
                fieldGroupIds      TYPE clike OPTIONAL
                highlight          TYPE clike OPTIONAL
                highlightText      TYPE clike OPTIONAL
                navigated          TYPE clike OPTIONAL
                selected           TYPE clike OPTIONAL
                !type              TYPE clike OPTIONAL
                unread             TYPE clike OPTIONAL
                !visible           TYPE clike DEFAULT `true`
                detailPress        TYPE clike OPTIONAL
                detailTap          TYPE clike OPTIONAL
                press              TYPE clike OPTIONAL
                tap                TYPE clike OPTIONAL
      RETURNING VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS text_area
      IMPORTING
        value                 TYPE clike OPTIONAL
        rows                  TYPE clike OPTIONAL
        cols                  TYPE clike OPTIONAL
        height                TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        valueliveupdate       TYPE clike OPTIONAL
        editable              TYPE clike OPTIONAL
        enabled               TYPE clike OPTIONAL
        growing               TYPE clike OPTIONAL
        growingmaxlines       TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        required              TYPE clike OPTIONAL
        placeholder           TYPE clike OPTIONAL
        valuestate            TYPE clike OPTIONAL
        valuestatetext        TYPE clike OPTIONAL
        wrapping              TYPE clike OPTIONAL
        maxlength             TYPE clike OPTIONAL
        textalign             TYPE clike OPTIONAL
        textdirection         TYPE clike OPTIONAL
        showvaluestatemessage TYPE clike OPTIONAL
        showexceededtext      TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS range_slider
      IMPORTING
        max           TYPE clike OPTIONAL
        min           TYPE clike OPTIONAL
        step          TYPE clike OPTIONAL
        startvalue    TYPE clike OPTIONAL
        endvalue      TYPE clike OPTIONAL
        showtickmarks TYPE clike OPTIONAL
        labelinterval TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        value2        TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS generic_tag
      IMPORTING
        id             TYPE clike OPTIONAL
        arialabelledby TYPE clike OPTIONAL
        text           TYPE clike OPTIONAL
        design         TYPE clike OPTIONAL
        status         TYPE clike OPTIONAL
        class          TYPE clike OPTIONAL
        press          TYPE clike OPTIONAL
        valuestate     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_attribute
      IMPORTING
        title         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        active        TYPE clike OPTIONAL
        ariahaspopup  TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_number
      IMPORTING
        state              TYPE clike OPTIONAL
        emphasized         TYPE clike OPTIONAL
        number             TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        textalign          TYPE clike OPTIONAL
        numberunit         TYPE clike OPTIONAL
        inverted           TYPE clike OPTIONAL
        emptyindicatormode TYPE clike OPTIONAL
        active             TYPE clike OPTIONAL
        unit               TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        id                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS switch
      IMPORTING
        state         TYPE clike OPTIONAL
        customtexton  TYPE clike OPTIONAL
        customtextoff TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS harveyballmicrochartitem
      IMPORTING
        id            TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        fraction      TYPE clike OPTIONAL
        fractionScale TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS step_input
      IMPORTING
        id                    TYPE clike OPTIONAL
        value                 TYPE clike OPTIONAL
        min                   TYPE clike OPTIONAL
        max                   TYPE clike OPTIONAL
        step                  TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        valuestate            TYPE clike OPTIONAL
        enabled               TYPE clike OPTIONAL
        description           TYPE clike OPTIONAL
        displayvalueprecision TYPE clike OPTIONAL
        largerstep            TYPE clike OPTIONAL
        stepmode              TYPE clike OPTIONAL
        editable              TYPE clike OPTIONAL
        fieldwidth            TYPE clike OPTIONAL
        textalign             TYPE clike OPTIONAL
        validationmode        TYPE clike OPTIONAL
        change                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS progress_indicator
      IMPORTING
        class         TYPE clike OPTIONAL
        percentvalue  TYPE clike OPTIONAL
        displayvalue  TYPE clike OPTIONAL
        showvalue     TYPE clike OPTIONAL
        state         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS segmented_button
      IMPORTING
        selected_key     TYPE clike OPTIONAL
        selection_change TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        enabled          TYPE clike OPTIONAL
          PREFERRED PARAMETER selected_key
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS checkbox
      IMPORTING
        text              TYPE clike OPTIONAL
        selected          TYPE clike OPTIONAL
        enabled           TYPE clike OPTIONAL
        select            TYPE clike OPTIONAL
        id                TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        textalign         TYPE clike OPTIONAL
        textdirection     TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        activehandling    TYPE clike OPTIONAL
        visible           TYPE clike OPTIONAL
        displayonly       TYPE clike OPTIONAL
        editable          TYPE clike OPTIONAL
        partiallyselected TYPE clike OPTIONAL
        useentirewidth    TYPE clike OPTIONAL
        wrapping          TYPE clike OPTIONAL
        name              TYPE clike OPTIONAL
        valuestate        TYPE clike OPTIONAL
        required          TYPE clike OPTIONAL
          PREFERRED PARAMETER selected
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS header_toolbar
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS toolbar
      IMPORTING
        ns            TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        active        TYPE clike OPTIONAL
        ariahaspopup  TYPE clike OPTIONAL
        design        TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        style         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS text
      IMPORTING
        text               TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        ns                 TYPE clike OPTIONAL
        emptyindicatormode TYPE clike OPTIONAL
        maxlines           TYPE clike OPTIONAL
        renderwhitespace   TYPE clike OPTIONAL
        textalign          TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        width              TYPE clike OPTIONAL
        wrapping           TYPE clike OPTIONAL
        wrappingtype       TYPE clike OPTIONAL
        id                 TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS formatted_text
      IMPORTING
        htmltext                    TYPE clike OPTIONAL
        convertedlinksdefaulttarget TYPE clike OPTIONAL
        convertlinkstoanchortags    TYPE clike OPTIONAL
        height                      TYPE clike OPTIONAL
        textalign                   TYPE clike OPTIONAL
        textdirection               TYPE clike OPTIONAL
        visible                     TYPE clike OPTIONAL
        width                       TYPE clike OPTIONAL
        id                          TYPE clike OPTIONAL
        class                       TYPE clike OPTIONAL
        controls                    TYPE clike OPTIONAL
          PREFERRED PARAMETER htmltext
      RETURNING
        VALUE(result)               TYPE REF TO z2ui5_cl_xml_view.

    METHODS _generic
      IMPORTING
        name          TYPE clike
        ns            TYPE clike                           OPTIONAL
        t_prop        TYPE z2ui5_if_types=>ty_t_name_value OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS _generic_property
      IMPORTING
        val           TYPE z2ui5_if_types=>ty_s_name_value OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS xml_get
      RETURNING
        VALUE(result) TYPE string.

    METHODS stringify
      RETURNING
        VALUE(result) TYPE string.

    METHODS tree_table
      IMPORTING
        rows                   TYPE clike OPTIONAL
        selectionmode          TYPE clike OPTIONAL
        enablecolumnreordering TYPE clike OPTIONAL
        expandfirstlevel       TYPE clike OPTIONAL
        columnselect           TYPE clike OPTIONAL
        rowselectionchange     TYPE clike OPTIONAL
        selectionbehavior      TYPE clike OPTIONAL
        id                     TYPE clike OPTIONAL
        alternaterowcolors     TYPE clike OPTIONAL
        columnheadervisible    TYPE clike OPTIONAL
        enablecellfilter       TYPE clike OPTIONAL
        enablecolumnfreeze     TYPE clike OPTIONAL
        enablecustomfilter     TYPE clike OPTIONAL
        enableselectall        TYPE clike OPTIONAL
        shownodata             TYPE clike OPTIONAL
        showoverlay            TYPE clike OPTIONAL
        visible                TYPE clike OPTIONAL
        columnheaderheight     TYPE clike OPTIONAL
        firstvisiblerow        TYPE clike OPTIONAL
        fixedcolumncount       TYPE clike OPTIONAL
        threshold              TYPE clike OPTIONAL
        width                  TYPE clike OPTIONAL
        usegroupmode           TYPE clike OPTIONAL
        groupheaderproperty    TYPE clike OPTIONAL
        rowactioncount         TYPE clike OPTIONAL
        selectedindex          TYPE clike OPTIONAL
        visiblerowcount        TYPE clike OPTIONAL
        visiblerowcountmode    TYPE clike OPTIONAL
        minautorowcount        TYPE clike OPTIONAL
        fixedbottomrowcount    TYPE clike OPTIONAL
        fixedrowcount          TYPE clike OPTIONAL
        rowheight              TYPE clike OPTIONAL
        toggleopenstate        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS tree_columns
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tree_column
      IMPORTING
        label         TYPE clike
        template      TYPE clike OPTIONAL
        halign        TYPE clike DEFAULT 'Begin'
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tree_template
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS filter_bar
      IMPORTING
        usetoolbar                   TYPE clike DEFAULT 'false'
        search                       TYPE clike OPTIONAL
        id                           TYPE clike OPTIONAL
        persistencykey               TYPE clike OPTIONAL
        aftervariantload             TYPE clike OPTIONAL
        aftervariantsave             TYPE clike OPTIONAL
        assignedfilterschanged       TYPE clike OPTIONAL
        beforevariantfetch           TYPE clike OPTIONAL
        cancel                       TYPE clike OPTIONAL
        clear                        TYPE clike OPTIONAL
        filterchange                 TYPE clike OPTIONAL
        filtersdialogbeforeopen      TYPE clike OPTIONAL
        filtersdialogcancel          TYPE clike OPTIONAL
        filtersdialogclosed          TYPE clike OPTIONAL
        initialise                   TYPE clike OPTIONAL
        initialized                  TYPE clike OPTIONAL
        reset                        TYPE clike OPTIONAL
        filtercontainerwidth         TYPE clike OPTIONAL
        header                       TYPE clike OPTIONAL
        advancedmode                 TYPE clike OPTIONAL
        isrunninginvaluehelpdialog   TYPE clike OPTIONAL
        showallfilters               TYPE clike OPTIONAL
        showclearonfb                TYPE clike OPTIONAL
        showfilterconfiguration      TYPE clike OPTIONAL
        showgoonfb                   TYPE clike OPTIONAL
        showrestorebutton            TYPE clike OPTIONAL
        showrestoreonfb              TYPE clike OPTIONAL
        usesnapshot                  TYPE clike OPTIONAL
        searchenabled                TYPE clike OPTIONAL
        considergrouptitle           TYPE clike OPTIONAL
        deltavariantmode             TYPE clike OPTIONAL
        disablesearchmatchespatternw TYPE clike OPTIONAL
        filterbarexpanded            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                TYPE REF TO z2ui5_cl_xml_view.

    METHODS filter_group_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS filter_group_item
      IMPORTING
        name               TYPE clike OPTIONAL
        label              TYPE clike OPTIONAL
        groupname          TYPE clike OPTIONAL
        visibleinfilterbar TYPE clike OPTIONAL
        mandatory          TYPE clike OPTIONAL
        controltooltip     TYPE clike OPTIONAL
        entitysetname      TYPE clike OPTIONAL
        entitytypename     TYPE clike OPTIONAL
        grouptitle         TYPE clike OPTIONAL
        hiddenfilter       TYPE clike OPTIONAL
        labeltooltip       TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        change             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS filter_control
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS flexible_column_layout
      IMPORTING
        layout                        TYPE clike
        id                            TYPE clike
        backgrounddesign              TYPE clike OPTIONAL
        defaulttransitionnamebegincol TYPE clike OPTIONAL
        defaulttransitionnameendcol   TYPE clike OPTIONAL
        defaulttransitionnamemidcol   TYPE clike OPTIONAL
        autofocus                     TYPE clike OPTIONAL
        restorefocusonbacknavigation  TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
        afterbegincolumnnavigate      TYPE clike OPTIONAL
        afterendcolumnnavigate        TYPE clike OPTIONAL
        aftermidcolumnnavigate        TYPE clike OPTIONAL
        begincolumnnavigate           TYPE clike OPTIONAL
        columnresize                  TYPE clike OPTIONAL
        endcolumnnavigate             TYPE clike OPTIONAL
        midcolumnnavigate             TYPE clike OPTIONAL
        statechange                   TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS begin_column_pages
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS mid_column_pages
      IMPORTING
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS end_column_pages
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_table
      IMPORTING
        rows                     TYPE clike OPTIONAL
        columnheadervisible      TYPE clike OPTIONAL
        editable                 TYPE clike OPTIONAL
        class                    TYPE clike OPTIONAL
        enablecellfilter         TYPE clike OPTIONAL
        enablegrouping           TYPE clike OPTIONAL
        enableselectall          TYPE clike OPTIONAL
        firstvisiblerow          TYPE clike OPTIONAL
        fixedbottomrowcount      TYPE clike OPTIONAL
        fixedcolumncount         TYPE clike OPTIONAL
        fixedrowcount            TYPE clike OPTIONAL
        minautorowcount          TYPE clike OPTIONAL
        rowactioncount           TYPE clike OPTIONAL
        rowheight                TYPE clike OPTIONAL
        selectionmode            TYPE clike OPTIONAL
        showcolumnvisibilitymenu TYPE clike OPTIONAL
        shownodata               TYPE clike OPTIONAL
        selectedindex            TYPE clike OPTIONAL
        threshold                TYPE clike OPTIONAL
        visiblerowcount          TYPE clike OPTIONAL
        visiblerowcountmode      TYPE clike OPTIONAL
        alternaterowcolors       TYPE clike OPTIONAL
        footer                   TYPE clike OPTIONAL
        filter                   TYPE clike OPTIONAL
        sort                     TYPE clike OPTIONAL
        rowselectionchange       TYPE clike OPTIONAL
        customfilter             TYPE clike OPTIONAL
        id                       TYPE clike OPTIONAL
        flex                     TYPE clike OPTIONAL
        selectionbehavior        TYPE clike OPTIONAL
        rowmode                  TYPE clike OPTIONAL
          PREFERRED PARAMETER rows
      RETURNING
        VALUE(result)            TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_column
      IMPORTING
        id                    TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        showsortmenuentry     TYPE clike OPTIONAL
        sortproperty          TYPE clike OPTIONAL
        autoResizable         TYPE clike OPTIONAL
        filterproperty        TYPE clike OPTIONAL
        showfiltermenuentry   TYPE clike OPTIONAL
        defaultfilteroperator TYPE clike OPTIONAL
        filtertype            TYPE clike OPTIONAL
        halign                TYPE clike OPTIONAL
        minwidth              TYPE clike OPTIONAL
        resizable             TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
          PREFERRED PARAMETER width
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_columns
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_custom_data
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_extension
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_template
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS currency
      IMPORTING
        value         TYPE clike OPTIONAL
        currency      TYPE clike OPTIONAL
        usesymbol     TYPE clike OPTIONAL
        maxprecision  TYPE clike OPTIONAL
        stringvalue   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_row_action
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_row_action_template
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS ui_row_action_item
      IMPORTING
        icon          TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS radio_button
      IMPORTING
        id             TYPE clike OPTIONAL
        activehandling TYPE clike OPTIONAL
        editable       TYPE clike OPTIONAL
        enabled        TYPE clike OPTIONAL
        groupname      TYPE clike OPTIONAL
        selected       TYPE clike OPTIONAL
        text           TYPE clike OPTIONAL
        textalign      TYPE clike OPTIONAL
        textdirection  TYPE clike OPTIONAL
        useentirewidth TYPE clike OPTIONAL
        valuestate     TYPE clike OPTIONAL
        width          TYPE clike OPTIONAL
        select         TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS radio_button_group
      IMPORTING
        id            TYPE clike OPTIONAL
        columns       TYPE clike OPTIONAL
        editable      TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        selectedindex TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        valuestate    TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        select        TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS dynamic_side_content
      IMPORTING
        id                    TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
        sidecontentvisibility TYPE clike OPTIONAL
        showsidecontent       TYPE clike OPTIONAL
        containerquery        TYPE clike OPTIONAL
          PREFERRED PARAMETER id
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS side_content
      IMPORTING
        width         TYPE clike OPTIONAL
          PREFERRED PARAMETER width
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS planning_calendar
      IMPORTING
        rows                          TYPE clike OPTIONAL
        id                            TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
        startdate                     TYPE clike OPTIONAL
        appointmentsvisualization     TYPE clike OPTIONAL
        appointmentselect             TYPE clike OPTIONAL
        showemptyintervalheaders      TYPE clike OPTIONAL
        showweeknumbers               TYPE clike OPTIONAL
        showdaynamesline              TYPE clike OPTIONAL
        legend                        TYPE clike OPTIONAL
        appointmentheight             TYPE clike OPTIONAL
        appointmentroundwidth         TYPE clike OPTIONAL
        builtinviews                  TYPE clike OPTIONAL
        calendarweeknumbering         TYPE clike OPTIONAL
        firstdayofweek                TYPE clike OPTIONAL
        height                        TYPE clike OPTIONAL
        groupappointmentsmode         TYPE clike OPTIONAL
        iconshape                     TYPE clike OPTIONAL
        maxdate                       TYPE clike OPTIONAL
        mindate                       TYPE clike OPTIONAL
        nodatatext                    TYPE clike OPTIONAL
        primarycalendartype           TYPE clike OPTIONAL
        secondarycalendartype         TYPE clike OPTIONAL
        intervalselect                TYPE clike OPTIONAL
        rowheaderpress                TYPE clike OPTIONAL
        rowselectionchange            TYPE clike OPTIONAL
        startdatechange               TYPE clike OPTIONAL
        viewchange                    TYPE clike OPTIONAL
        stickyheader                  TYPE clike OPTIONAL
        viewkey                       TYPE clike OPTIONAL
        width                         TYPE clike OPTIONAL
        singleselection               TYPE clike OPTIONAL
        showrowheaders                TYPE clike OPTIONAL
        multipleappointmentsselection TYPE clike OPTIONAL
        showintervalheaders           TYPE clike OPTIONAL
          PREFERRED PARAMETER rows
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS planning_calendar_view
      IMPORTING
        appointmentheight      TYPE clike OPTIONAL
        description            TYPE clike OPTIONAL
        intervallabelformatter TYPE clike OPTIONAL
        intervalsize           TYPE clike OPTIONAL
        intervalsl             TYPE clike OPTIONAL
        intervalsm             TYPE clike OPTIONAL
        intervalss             TYPE clike OPTIONAL
        intervaltype           TYPE clike OPTIONAL
        key                    TYPE clike OPTIONAL
        relative               TYPE clike OPTIONAL
        showsubintervals       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS planning_calendar_row
      IMPORTING
        appointments                  TYPE clike OPTIONAL
        intervalheaders               TYPE clike OPTIONAL
        icon                          TYPE clike OPTIONAL
        title                         TYPE clike OPTIONAL
        key                           TYPE clike OPTIONAL
        text                          TYPE clike OPTIONAL
        enableappointmentscreate      TYPE clike OPTIONAL
        enableappointmentsdraganddrop TYPE clike OPTIONAL
        enableappointmentsresize      TYPE clike OPTIONAL
        noappointmentstext            TYPE clike OPTIONAL
        nonworkinghours               TYPE clike OPTIONAL
        rowheaderdescription          TYPE clike OPTIONAL
        nonworkingdays                TYPE clike OPTIONAL
        selected                      TYPE clike OPTIONAL
        appointmentcreate             TYPE clike OPTIONAL
        appointmentdragenter          TYPE clike OPTIONAL
        appointmentdrop               TYPE clike OPTIONAL
        appointmentresize             TYPE clike OPTIONAL
        id                            TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
          PREFERRED PARAMETER appointments
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS planning_calendar_legend
      IMPORTING
        items            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        appointmentitems TYPE clike OPTIONAL
        standarditems    TYPE clike OPTIONAL
        columnwidth      TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS calendar_legend_item
      IMPORTING
        text          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS appointment_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS info_label
      IMPORTING
        id            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        rendermode    TYPE clike OPTIONAL
        colorscheme   TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        displayonly   TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS rows
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS appointments
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS calendar_appointment
      IMPORTING
        startdate     TYPE clike OPTIONAL
        enddate       TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        tentative     TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
          PREFERRED PARAMETER startdate
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS interval_headers
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS block_layout
      IMPORTING
        background    TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS block_layout_row
      IMPORTING
        rowcolorset   TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS block_layout_cell
      IMPORTING
        backgroundcolorset   TYPE clike OPTIONAL
        backgroundcolorshade TYPE clike OPTIONAL
        title                TYPE clike OPTIONAL
        titlealignment       TYPE clike OPTIONAL
        titlelevel           TYPE clike OPTIONAL
        width                TYPE clike OPTIONAL
        class                TYPE clike OPTIONAL
        id                   TYPE clike OPTIONAL
      RETURNING
        VALUE(result)        TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_identifier
      IMPORTING
        emptyindicatormode TYPE clike OPTIONAL
        text               TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        title              TYPE clike OPTIONAL
        titleactive        TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        titlepress         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_status
      IMPORTING
        active                TYPE clike OPTIONAL
        emptyindicatormode    TYPE clike OPTIONAL
        icon                  TYPE clike OPTIONAL
        icondensityaware      TYPE clike OPTIONAL
        inverted              TYPE clike OPTIONAL
        state                 TYPE clike OPTIONAL
        stateannouncementtext TYPE clike OPTIONAL
        text                  TYPE clike OPTIONAL
        textdirection         TYPE clike OPTIONAL
        title                 TYPE clike OPTIONAL
        press                 TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS tree
      IMPORTING
        id                     TYPE clike     OPTIONAL
        items                  TYPE clike     OPTIONAL
        headertext             TYPE clike     OPTIONAL
        headerlevel            TYPE clike     OPTIONAL
        footertext             TYPE clike     OPTIONAL
        mode                   TYPE clike     OPTIONAL
        includeiteminselection TYPE abap_bool OPTIONAL
        inset                  TYPE abap_bool OPTIONAL
        width                  TYPE clike     OPTIONAL
        toggleopenstate        TYPE clike     OPTIONAL
        selectionchange        TYPE clike     OPTIONAL
        itempress              TYPE clike     OPTIONAL
        select                 TYPE clike     OPTIONAL
        multiselectmode        TYPE clike     OPTIONAL
        nodatatext             TYPE clike     OPTIONAL
        shownodata             TYPE clike     OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS standard_tree_item
      IMPORTING
        title         TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        detailpress   TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        counter       TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS icon_tab_bar
      IMPORTING
        class                  TYPE clike OPTIONAL
        select                 TYPE clike OPTIONAL
        expand                 TYPE clike OPTIONAL
        expandable             TYPE clike OPTIONAL
        expanded               TYPE clike OPTIONAL
        selectedkey            TYPE clike OPTIONAL
        uppercase              TYPE clike OPTIONAL
        tabsoverflowmode       TYPE clike OPTIONAL
        tabdensitymode         TYPE clike OPTIONAL
        stretchcontentheight   TYPE clike OPTIONAL
        maxnestinglevel        TYPE clike OPTIONAL
        headermode             TYPE clike OPTIONAL
        headerbackgrounddesign TYPE clike OPTIONAL
        enabletabreordering    TYPE clike OPTIONAL
        backgrounddesign       TYPE clike OPTIONAL
        applycontentpadding    TYPE clike OPTIONAL
        items                  TYPE clike OPTIONAL
        content                TYPE clike OPTIONAL
        id                     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS icon_tab_filter
      IMPORTING
        items            TYPE clike OPTIONAL
        showall          TYPE clike OPTIONAL
        icon             TYPE clike OPTIONAL
        iconcolor        TYPE clike OPTIONAL
        count            TYPE clike OPTIONAL
        text             TYPE clike OPTIONAL
        key              TYPE clike OPTIONAL
        design           TYPE clike OPTIONAL
        icondensityaware TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        textdirection    TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS icon_tab_separator
      IMPORTING
        icon             TYPE clike OPTIONAL
        icondensityaware TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS _z2ui5
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view_cc.

    METHODS gantt_chart_container
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS container_toolbar
      IMPORTING
        showsearchbutton          TYPE clike OPTIONAL
        aligncustomcontenttoright TYPE clike OPTIONAL
        findmode                  TYPE clike OPTIONAL
        findbuttonpress           TYPE clike OPTIONAL
        infoofselectitems         TYPE clike OPTIONAL
        showbirdeyebutton         TYPE clike OPTIONAL
        showdisplaytypebutton     TYPE clike OPTIONAL
        showlegendbutton          TYPE clike OPTIONAL
        showsettingbutton         TYPE clike OPTIONAL
        showtimezoomcontrol       TYPE clike OPTIONAL
        stepcountofslider         TYPE clike OPTIONAL
        zoomcontroltype           TYPE clike OPTIONAL
        zoomlevel                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)             TYPE REF TO z2ui5_cl_xml_view.

    METHODS gantt_chart_with_table
      IMPORTING
        id                        TYPE clike OPTIONAL
        shapeselectionmode        TYPE clike OPTIONAL
        isconnectordetailsvisible TYPE clike OPTIONAL
      RETURNING
        VALUE(result)             TYPE REF TO z2ui5_cl_xml_view.

    METHODS axis_time_strategy
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS proportion_zoom_strategy
      IMPORTING
        zoomlevel     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS total_horizon
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS time_horizon
      IMPORTING
        starttime     TYPE clike OPTIONAL
        endtime       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS visible_horizon
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS row_settings_template
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS gantt_row_settings
      IMPORTING
        rowid         TYPE clike OPTIONAL
        shapes1       TYPE clike OPTIONAL
        relationships TYPE clike OPTIONAL
        shapes2       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS shapes1
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS shapes2
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS task
      IMPORTING
        id            TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        endtime       TYPE clike OPTIONAL
        time          TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        showtitle     TYPE clike OPTIONAL
        connectable   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS gantt_table
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS rating_indicator
      IMPORTING
        maxvalue      TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        iconsize      TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
        displayonly   TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        id            TYPE clike OPTIONAL
        editable      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS gantt_toolbar
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS base_rectangle
      IMPORTING
        time                    TYPE clike OPTIONAL
        shapeid                 TYPE clike OPTIONAL
        endtime                 TYPE clike OPTIONAL
        selectable              TYPE clike OPTIONAL
        selectedfill            TYPE clike OPTIONAL
        fill                    TYPE clike OPTIONAL
        height                  TYPE clike OPTIONAL
        title                   TYPE clike OPTIONAL
        animationsettings       TYPE clike OPTIONAL
        alignshape              TYPE clike OPTIONAL
        color                   TYPE clike OPTIONAL
        fontsize                TYPE clike OPTIONAL
        connectable             TYPE clike OPTIONAL
        fontfamily              TYPE clike OPTIONAL
        filter                  TYPE clike OPTIONAL
        transform               TYPE clike OPTIONAL
        countinbirdeye          TYPE clike OPTIONAL
        fontweight              TYPE clike OPTIONAL
        showtitle               TYPE clike OPTIONAL
        selected                TYPE clike OPTIONAL
        resizable               TYPE clike OPTIONAL
        horizontaltextalignment TYPE clike OPTIONAL
        highlighted             TYPE clike OPTIONAL
        highlightable           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS tool_page
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tool_header
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS icon_tab_header
      IMPORTING
        selectedkey         TYPE clike OPTIONAL
        items               TYPE clike OPTIONAL
        select              TYPE clike OPTIONAL
        mode                TYPE clike OPTIONAL
        ariatexts           TYPE clike OPTIONAL
        backgrounddesign    TYPE clike OPTIONAL
        enabletabreordering TYPE clike OPTIONAL
        maxnestinglevel     TYPE clike OPTIONAL
        tabdensitymode      TYPE clike OPTIONAL
        tabsoverflowmode    TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        id                  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS nav_container
      IMPORTING
        initialpage           TYPE clike OPTIONAL
        id                    TYPE clike OPTIONAL
        defaulttransitionname TYPE clike OPTIONAL
        autofocus             TYPE clike OPTIONAL
        height                TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS pages
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS main_contents
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS table_select_dialog
      IMPORTING
        confirmbuttontext  TYPE clike OPTIONAL
        contentheight      TYPE clike OPTIONAL
        contentwidth       TYPE clike OPTIONAL
        draggable          TYPE clike OPTIONAL
        growing            TYPE clike OPTIONAL
        growingthreshold   TYPE clike OPTIONAL
        multiselect        TYPE clike OPTIONAL
        nodatatext         TYPE clike OPTIONAL
        rememberselections TYPE clike OPTIONAL
        resizable          TYPE clike OPTIONAL
        searchplaceholder  TYPE clike OPTIONAL
        showclearbutton    TYPE clike OPTIONAL
        title              TYPE clike OPTIONAL
        titlealignment     TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        items              TYPE clike OPTIONAL
        livechange         TYPE clike OPTIONAL
        cancel             TYPE clike OPTIONAL
        search             TYPE clike OPTIONAL
        confirm            TYPE clike OPTIONAL
        selectionchange    TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS process_flow
      IMPORTING
        id            TYPE clike OPTIONAL
        foldedcorners TYPE clike OPTIONAL
        scrollable    TYPE clike OPTIONAL
        showlabels    TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        wheelzoomable TYPE clike OPTIONAL
        headerpress   TYPE clike OPTIONAL
        labelpress    TYPE clike OPTIONAL
        nodepress     TYPE clike OPTIONAL
        onerror       TYPE clike OPTIONAL
        lanes         TYPE clike OPTIONAL
        nodes         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS nodes
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS node
      IMPORTING
        id                    TYPE clike OPTIONAL
        class                 TYPE clike OPTIONAL
        alttext               TYPE clike OPTIONAL
        collapsed             TYPE clike OPTIONAL
        corenodesize          TYPE clike OPTIONAL
        description           TYPE clike OPTIONAL
        descriptionlinesize   TYPE clike OPTIONAL
        group                 TYPE clike OPTIONAL
        headercheckboxstate   TYPE clike OPTIONAL
        height                TYPE clike OPTIONAL
        title                 TYPE clike OPTIONAL
        icon                  TYPE clike OPTIONAL
        iconsize              TYPE clike OPTIONAL
        key                   TYPE clike OPTIONAL
        maxwidth              TYPE clike OPTIONAL
        selected              TYPE clike OPTIONAL
        shape                 TYPE clike OPTIONAL
        showactionlinksbutton TYPE clike OPTIONAL
        showdetailbutton      TYPE clike OPTIONAL
        showexpandbutton      TYPE clike OPTIONAL
        statusicon            TYPE clike OPTIONAL
        titlelinesize         TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        x                     TYPE clike OPTIONAL
        y                     TYPE clike OPTIONAL
        collapseexpand        TYPE clike OPTIONAL
        headercheckboxpress   TYPE clike OPTIONAL
        hover                 TYPE clike OPTIONAL
        press                 TYPE clike OPTIONAL
        attributes            TYPE clike OPTIONAL
        actionbuttons         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS node_image
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        src           TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS lanes
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS process_flow_node
      IMPORTING
        laneid            TYPE clike OPTIONAL
        nodeid            TYPE clike OPTIONAL
        title             TYPE clike OPTIONAL
        titleabbreviation TYPE clike OPTIONAL
        children          TYPE clike OPTIONAL
        state             TYPE clike OPTIONAL
        statetext         TYPE clike OPTIONAL
        texts             TYPE clike OPTIONAL
        highlighted       TYPE clike OPTIONAL
        focused           TYPE clike OPTIONAL
        selected          TYPE clike OPTIONAL
        tag               TYPE clike OPTIONAL
        type              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS process_flow_lane_header
      IMPORTING
        iconsrc       TYPE clike OPTIONAL
        laneid        TYPE clike OPTIONAL
        position      TYPE clike OPTIONAL
        state         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        zoomlevel     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS view_settings_dialog
      IMPORTING
        confirm                  TYPE clike OPTIONAL
        cancel                   TYPE clike OPTIONAL
        filterdetailpageopened   TYPE clike OPTIONAL
        reset                    TYPE clike OPTIONAL
        resetfilters             TYPE clike OPTIONAL
        filtersearchoperator     TYPE clike OPTIONAL
        groupdescending          TYPE clike OPTIONAL
        sortdescending           TYPE clike OPTIONAL
        title                    TYPE clike OPTIONAL
        titlealignment           TYPE clike OPTIONAL
        selectedgroupitem        TYPE clike OPTIONAL
        selectedpresetfilteritem TYPE clike OPTIONAL
        selectedsortitem         TYPE clike OPTIONAL
        filteritems              TYPE clike OPTIONAL
        sortitems                TYPE clike OPTIONAL
        groupitems               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)            TYPE REF TO z2ui5_cl_xml_view.

    METHODS filter_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS sort_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS group_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS view_settings_filter_item
      IMPORTING
        enabled       TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        multiselect   TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS view_settings_item
      IMPORTING
        enabled       TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        textdirection TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_management
      IMPORTING
        defaultvariantkey      TYPE clike OPTIONAL
        enabled                TYPE clike OPTIONAL
        inerrorstate           TYPE clike OPTIONAL
        initialselectionkey    TYPE clike OPTIONAL
        lifecyclesupport       TYPE clike OPTIONAL
        selectionkey           TYPE clike OPTIONAL
        showcreatetile         TYPE clike OPTIONAL
        showexecuteonselection TYPE clike OPTIONAL
        showsetasdefault       TYPE clike OPTIONAL
        showshare              TYPE clike OPTIONAL
        standarditemauthor     TYPE clike OPTIONAL
        standarditemtext       TYPE clike OPTIONAL
        usefavorites           TYPE clike OPTIONAL
        visible                TYPE clike OPTIONAL
        variantitems           TYPE clike OPTIONAL
        manage                 TYPE clike OPTIONAL
        save                   TYPE clike OPTIONAL
        select                 TYPE clike OPTIONAL
        uservarcreate          TYPE clike OPTIONAL
        id                     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_item
      IMPORTING
        executeonselection      TYPE clike OPTIONAL
        global                  TYPE clike OPTIONAL
        labelreadonly           TYPE clike OPTIONAL
        lifecyclepackage        TYPE clike OPTIONAL
        lifecycletransportid    TYPE clike OPTIONAL
        namespace               TYPE clike OPTIONAL
        readonly                TYPE clike OPTIONAL
        executeonselect         TYPE clike OPTIONAL
        author                  TYPE clike OPTIONAL
        changeable              TYPE clike OPTIONAL
        enabled                 TYPE clike OPTIONAL
        favorite                TYPE clike OPTIONAL
        key                     TYPE clike OPTIONAL
        text                    TYPE clike OPTIONAL
        title                   TYPE clike OPTIONAL
        textdirection           TYPE clike OPTIONAL
        originaltitle           TYPE clike OPTIONAL
        originalexecuteonselect TYPE clike OPTIONAL
        remove                  TYPE clike OPTIONAL
        rename                  TYPE clike OPTIONAL
        originalfavorite        TYPE clike OPTIONAL
        sharing                 TYPE clike OPTIONAL
        change                  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_management_sapm
      IMPORTING
        creationallowed           TYPE clike OPTIONAL
        defaultkey                TYPE clike OPTIONAL
        inerrorstate              TYPE clike OPTIONAL
        level                     TYPE clike OPTIONAL
        maxwidth                  TYPE clike OPTIONAL
        modified                  TYPE clike OPTIONAL
        popovertitle              TYPE clike OPTIONAL
        selectedkey               TYPE clike OPTIONAL
        showfooter                TYPE clike OPTIONAL
        showsaveas                TYPE clike OPTIONAL
        supportapplyautomatically TYPE clike OPTIONAL
        supportcontexts           TYPE clike OPTIONAL
        supportdefault            TYPE clike OPTIONAL
        supportfavorites          TYPE clike OPTIONAL
        supportpublic             TYPE clike OPTIONAL
        titlestyle                TYPE clike OPTIONAL
        visible                   TYPE clike OPTIONAL
        items                     TYPE clike OPTIONAL
        cancel                    TYPE clike OPTIONAL
        manage                    TYPE clike OPTIONAL
        managecancel              TYPE clike OPTIONAL
        save                      TYPE clike OPTIONAL
        select                    TYPE clike OPTIONAL
        id                        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)             TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_item_sapm
      IMPORTING
        author          TYPE clike OPTIONAL
        changeable      TYPE clike OPTIONAL
        contexts        TYPE clike OPTIONAL
        executeonselect TYPE clike OPTIONAL
        favorite        TYPE clike OPTIONAL
        key             TYPE clike OPTIONAL
        remove          TYPE clike OPTIONAL
        rename          TYPE clike OPTIONAL
        sharing         TYPE clike OPTIONAL
        title           TYPE clike OPTIONAL
        visible         TYPE clike OPTIONAL
        id              TYPE clike OPTIONAL
        textdirection   TYPE clike OPTIONAL
        text            TYPE clike OPTIONAL
        enabled         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS feed_input
      IMPORTING
        buttontooltip    TYPE clike OPTIONAL
        enabled          TYPE clike OPTIONAL
        growing          TYPE clike OPTIONAL
        growingmaxlines  TYPE clike OPTIONAL
        icon             TYPE clike OPTIONAL
        icondensityaware TYPE clike OPTIONAL
        icondisplayshape TYPE clike OPTIONAL
        iconinitials     TYPE clike OPTIONAL
        iconsize         TYPE clike OPTIONAL
        maxlength        TYPE clike OPTIONAL
        placeholder      TYPE clike OPTIONAL
        rows             TYPE clike OPTIONAL
        showexceededtext TYPE clike OPTIONAL
        showicon         TYPE clike OPTIONAL
        value            TYPE clike OPTIONAL
        post             TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS feed_list_item
      IMPORTING
        activeicon                  TYPE clike OPTIONAL
        convertedlinksdefaulttarget TYPE clike OPTIONAL
        convertlinkstoanchortags    TYPE clike OPTIONAL
        icon                        TYPE clike OPTIONAL
        iconactive                  TYPE clike OPTIONAL
        icondensityaware            TYPE clike OPTIONAL
        icondisplayshape            TYPE clike OPTIONAL
        iconinitials                TYPE clike OPTIONAL
        iconsize                    TYPE clike OPTIONAL
        info                        TYPE clike OPTIONAL
        lesslabel                   TYPE clike OPTIONAL
        maxcharacters               TYPE clike OPTIONAL
        morelabel                   TYPE clike OPTIONAL
        sender                      TYPE clike OPTIONAL
        senderactive                TYPE clike OPTIONAL
        showicon                    TYPE clike OPTIONAL
        text                        TYPE clike OPTIONAL
        timestamp                   TYPE clike OPTIONAL
        iconpress                   TYPE clike OPTIONAL
        senderpress                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)               TYPE REF TO z2ui5_cl_xml_view.

    METHODS feed_list_item_action
      IMPORTING
        enabled       TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS feed_content
      IMPORTING
        contenttext   TYPE clike OPTIONAL
        subheader     TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS news_content
      IMPORTING
        contenttext   TYPE clike OPTIONAL
        subheader     TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS color_picker
      IMPORTING
        colorstring   TYPE clike
        displaymode   TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        livechange    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS mask_input
      IMPORTING
        placeholder           TYPE clike OPTIONAL
        mask                  TYPE clike OPTIONAL
        name                  TYPE clike OPTIONAL
        textalign             TYPE clike OPTIONAL
        textdirection         TYPE clike OPTIONAL
        value                 TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        valuestate            TYPE clike OPTIONAL
        valuestatetext        TYPE clike OPTIONAL
        placeholdersymbol     TYPE clike OPTIONAL
        required              TYPE clike OPTIONAL
        showclearicon         TYPE clike OPTIONAL
        showvaluestatemessage TYPE clike OPTIONAL
        visible               TYPE clike OPTIONAL
        fieldwidth            TYPE clike OPTIONAL
        livechange            TYPE clike OPTIONAL
        change                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS responsive_splitter
      IMPORTING
        defaultpane   TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS splitter
      IMPORTING
        height        TYPE clike OPTIONAL
        orientation   TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS invisible_text
      IMPORTING
        ns            TYPE clike
        id            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS fix_flex
      IMPORTING
        ns             TYPE clike OPTIONAL
        class          TYPE clike OPTIONAL
        fixcontentsize TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS fix_content
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS flex_content
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS pane_container
      IMPORTING
        resize        TYPE clike OPTIONAL
        orientation   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS split_pane
      IMPORTING
        id                  TYPE clike OPTIONAL
        requiredparentwidth TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS splitter_layout_data
      IMPORTING
        size          TYPE clike OPTIONAL
        minsize       TYPE clike OPTIONAL
        resizable     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS toolbar_layout_data
      IMPORTING
        id            TYPE clike OPTIONAL
        maxwidth      TYPE clike OPTIONAL
        minwidth      TYPE clike OPTIONAL
        shrinkable    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_header
      IMPORTING
        backgrounddesign     TYPE clike OPTIONAL
        condensed            TYPE clike OPTIONAL
        fullscreenoptimized  TYPE clike OPTIONAL
        icon                 TYPE clike OPTIONAL
        iconactive           TYPE clike OPTIONAL
        iconalt              TYPE clike OPTIONAL
        icondensityaware     TYPE clike OPTIONAL
        icontooltip          TYPE clike OPTIONAL
        imageshape           TYPE clike OPTIONAL
        intro                TYPE clike OPTIONAL
        introactive          TYPE clike OPTIONAL
        introhref            TYPE clike OPTIONAL
        introtarget          TYPE clike OPTIONAL
        introtextdirection   TYPE clike OPTIONAL
        number               TYPE clike OPTIONAL
        numberstate          TYPE clike OPTIONAL
        numbertextdirection  TYPE clike OPTIONAL
        numberunit           TYPE clike OPTIONAL
        responsive           TYPE clike OPTIONAL
        showtitleselector    TYPE clike OPTIONAL
        title                TYPE clike OPTIONAL
        titleactive          TYPE clike OPTIONAL
        titlehref            TYPE clike OPTIONAL
        titlelevel           TYPE clike OPTIONAL
        titleselectortooltip TYPE clike OPTIONAL
        titletarget          TYPE clike OPTIONAL
        titletextdirection   TYPE clike OPTIONAL
        iconpress            TYPE clike OPTIONAL
        intropress           TYPE clike OPTIONAL
        titlepress           TYPE clike OPTIONAL
        titleselectorpress   TYPE clike OPTIONAL
        class                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)        TYPE REF TO z2ui5_cl_xml_view.

    METHODS additional_numbers
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS header_container
      IMPORTING
        scrollstep    TYPE clike OPTIONAL
        scrolltime    TYPE clike OPTIONAL
        orientation   TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS markers
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS statuses
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS status
      IMPORTING
        id                          TYPE clike OPTIONAL
        class                       TYPE clike OPTIONAL
        backgroundcolor             TYPE clike OPTIONAL
        bordercolor                 TYPE clike OPTIONAL
        borderstyle                 TYPE clike OPTIONAL
        borderwidth                 TYPE clike OPTIONAL
        contentcolor                TYPE clike OPTIONAL
        headercontentcolor          TYPE clike OPTIONAL
        hoverbackgroundcolor        TYPE clike OPTIONAL
        hoverbordercolor            TYPE clike OPTIONAL
        hovercontentcolor           TYPE clike OPTIONAL
        key                         TYPE clike OPTIONAL
        legendcolor                 TYPE clike OPTIONAL
        selectedbackgroundcolor     TYPE clike OPTIONAL
        selectedbordercolor         TYPE clike OPTIONAL
        selectedcontentcolor        TYPE clike OPTIONAL
        title                       TYPE clike OPTIONAL
        usefocuscolorascontentcolor TYPE clike OPTIONAL
        visible                     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)               TYPE REF TO z2ui5_cl_xml_view.

    METHODS first_status
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS second_status
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_marker
      IMPORTING
        additionalinfo TYPE clike OPTIONAL
        type           TYPE clike OPTIONAL
        visibility     TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
        press          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS object_list_item
      IMPORTING
        activeicon          TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
        icondensityaware    TYPE clike OPTIONAL
        intro               TYPE clike OPTIONAL
        introtextdirection  TYPE clike OPTIONAL
        number              TYPE clike OPTIONAL
        numberstate         TYPE clike OPTIONAL
        numbertextdirection TYPE clike OPTIONAL
        numberunit          TYPE clike OPTIONAL
        title               TYPE clike OPTIONAL
        titletextdirection  TYPE clike OPTIONAL
        press               TYPE clike OPTIONAL
        selected            TYPE clike OPTIONAL
        type                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS detail_box
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS light_box
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS light_box_item
      IMPORTING
        alt           TYPE clike OPTIONAL
        imagesrc      TYPE clike OPTIONAL
        subtitle      TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS line_micro_chart
      IMPORTING
        color                 TYPE clike OPTIONAL
        height                TYPE clike OPTIONAL
        leftbottomlabel       TYPE clike OPTIONAL
        lefttoplabel          TYPE clike OPTIONAL
        maxxvalue             TYPE clike OPTIONAL
        minxvalue             TYPE clike OPTIONAL
        minyvalue             TYPE clike OPTIONAL
        rightbottomlabel      TYPE clike OPTIONAL
        righttoplabel         TYPE clike OPTIONAL
        size                  TYPE clike OPTIONAL
        threshold             TYPE clike OPTIONAL
        thresholddisplayvalue TYPE clike OPTIONAL
        width                 TYPE clike OPTIONAL
        press                 TYPE clike OPTIONAL
        hideonnodata          TYPE clike OPTIONAL
        showbottomlabels      TYPE clike OPTIONAL
        showpoints            TYPE clike OPTIONAL
        showthresholdline     TYPE clike OPTIONAL
        showthresholdvalue    TYPE clike OPTIONAL
        showtoplabels         TYPE clike OPTIONAL
        maxyvalue             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS line_micro_chart_line
      IMPORTING
        points        TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS line_micro_chart_point
      IMPORTING
        x             TYPE clike OPTIONAL
        y             TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS line_micro_chart_empszd_point
      IMPORTING
        x             TYPE clike OPTIONAL
        y             TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        show          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS stacked_bar_micro_chart
      IMPORTING
        height           TYPE clike OPTIONAL
        press            TYPE clike OPTIONAL
        maxvalue         TYPE clike OPTIONAL
        precision        TYPE clike OPTIONAL
        size             TYPE clike OPTIONAL
        hideonnodata     TYPE clike OPTIONAL
        displayzerovalue TYPE clike OPTIONAL
        showlabels       TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_micro_chart
      IMPORTING
        width             TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        size              TYPE clike OPTIONAL
        aligncontent      TYPE clike OPTIONAL
        hideonnodata      TYPE clike OPTIONAL
        allowcolumnlabels TYPE clike OPTIONAL
        showbottomlabels  TYPE clike OPTIONAL
        showtoplabels     TYPE clike OPTIONAL
        height            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_micro_chart_data
      IMPORTING
        value         TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        displayvalue  TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS comparison_micro_chart
      IMPORTING
        colorpalette  TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        size          TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        maxvalue      TYPE clike OPTIONAL
        minvalue      TYPE clike OPTIONAL
        scale         TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        hideonnodata  TYPE clike OPTIONAL
        shrinkable    TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        view          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS comparison_micro_chart_Data
      IMPORTING !color        TYPE clike OPTIONAL
                press         TYPE clike OPTIONAL
                displayvalue  TYPE clike OPTIONAL
                !title        TYPE clike OPTIONAL
                !value        TYPE clike OPTIONAL
      RETURNING VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS delta_micro_chart
      IMPORTING
        color             TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        size              TYPE clike OPTIONAL
        height            TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        deltadisplayvalue TYPE clike OPTIONAL
        displayvalue1     TYPE clike OPTIONAL
        displayvalue2     TYPE clike OPTIONAL
        title2            TYPE clike OPTIONAL
        value1            TYPE clike OPTIONAL
        value2            TYPE clike OPTIONAL
        view              TYPE clike OPTIONAL
        hideonnodata      TYPE clike OPTIONAL
        title1            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS bullet_micro_chart
      IMPORTING
        actualvaluelabel  TYPE clike OPTIONAL
        press             TYPE clike OPTIONAL
        size              TYPE clike OPTIONAL
        height            TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        deltavaluelabel   TYPE clike OPTIONAL
        maxvalue          TYPE clike OPTIONAL
        minvalue          TYPE clike OPTIONAL
        mode              TYPE clike OPTIONAL
        scale             TYPE clike OPTIONAL
        targetvalue       TYPE clike OPTIONAL
        targetvaluelabel  TYPE clike OPTIONAL
        scalecolor        TYPE clike OPTIONAL
        hideonnodata      TYPE clike OPTIONAL
        showactualvalue   TYPE clike OPTIONAL
        showdeltavalue    TYPE clike OPTIONAL
        showtargetvalue   TYPE clike OPTIONAL
        showthresholds    TYPE clike OPTIONAL
        showvaluemarker   TYPE clike OPTIONAL
        smallrangeallowed TYPE clike OPTIONAL
        forecastvalue     TYPE clike OPTIONAL
        savidm            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS harvey_ball_micro_chart
      IMPORTING
        colorpalette   TYPE clike OPTIONAL
        press          TYPE clike OPTIONAL
        size           TYPE clike OPTIONAL
        height         TYPE clike OPTIONAL
        width          TYPE clike OPTIONAL
        total          TYPE clike OPTIONAL
        totallabel     TYPE clike OPTIONAL
        aligncontent   TYPE clike OPTIONAL
        hideonnodata   TYPE clike OPTIONAL
        formattedlabel TYPE clike OPTIONAL
        showfractions  TYPE clike OPTIONAL
        showtotal      TYPE clike OPTIONAL
        totalscale     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS area_micro_chart
      IMPORTING
        colorpalette  TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        size          TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        maxxvalue     TYPE clike OPTIONAL
        maxyvalue     TYPE clike OPTIONAL
        minxvalue     TYPE clike OPTIONAL
        minyvalue     TYPE clike OPTIONAL
        view          TYPE clike OPTIONAL
        aligncontent  TYPE clike OPTIONAL
        hideonnodata  TYPE clike OPTIONAL
        showlabel     TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS data
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS rich_text_editor
      IMPORTING
        buttongroups       TYPE clike OPTIONAL
        customtoolbar      TYPE clike OPTIONAL
        editable           TYPE clike OPTIONAL
        editortype         TYPE clike OPTIONAL
        height             TYPE clike OPTIONAL
        plugins            TYPE clike OPTIONAL
        required           TYPE clike OPTIONAL
        sanitizevalue      TYPE clike OPTIONAL
        showgroupclipboard TYPE clike OPTIONAL
        showgroupfont      TYPE clike OPTIONAL
        showgroupfontstyle TYPE clike OPTIONAL
        showgroupinsert    TYPE clike OPTIONAL
        showgrouplink      TYPE clike OPTIONAL
        showgroupstructure TYPE clike OPTIONAL
        showgrouptextalign TYPE clike OPTIONAL
        showgroupundo      TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        uselegacytheme     TYPE clike OPTIONAL
        value              TYPE clike OPTIONAL
        width              TYPE clike OPTIONAL
        wrapping           TYPE clike OPTIONAL
        beforeeditorinit   TYPE clike OPTIONAL
        change             TYPE clike OPTIONAL
        ready              TYPE clike OPTIONAL
        readyrecurring     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS slider
      IMPORTING
        max                 TYPE clike OPTIONAL
        min                 TYPE clike OPTIONAL
        step                TYPE clike OPTIONAL
        value               TYPE clike OPTIONAL
        enabletickmarks     TYPE clike OPTIONAL
        width               TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        id                  TYPE clike OPTIONAL
        enabled             TYPE clike OPTIONAL
        change              TYPE clike OPTIONAL
        inputsastooltips    TYPE clike OPTIONAL
        showadvancedtooltip TYPE clike OPTIONAL
        showhandletooltip   TYPE clike OPTIONAL
        liveChange          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS upload_set
      IMPORTING
        id                      TYPE clike OPTIONAL
        instantupload           TYPE clike OPTIONAL
        showicons               TYPE clike OPTIONAL
        uploadenabled           TYPE clike OPTIONAL
        terminationenabled      TYPE clike OPTIONAL
        filetypes               TYPE clike OPTIONAL
        maxfilenamelength       TYPE clike OPTIONAL
        maxfilesize             TYPE clike OPTIONAL
        mediatypes              TYPE clike OPTIONAL
        uploadurl               TYPE clike OPTIONAL
        items                   TYPE clike OPTIONAL
        mode                    TYPE clike OPTIONAL
        selectionchanged        TYPE clike OPTIONAL
        uploadcompleted         TYPE clike OPTIONAL
        afteritemadded          TYPE clike OPTIONAL
        samefilenameallowed     TYPE clike OPTIONAL
        uploadbuttoninvisible   TYPE clike OPTIONAL
        directory               TYPE clike OPTIONAL
        multiple                TYPE clike OPTIONAL
        dragdropdescription     TYPE clike OPTIONAL
        dragdroptext            TYPE clike OPTIONAL
        nodatatext              TYPE clike OPTIONAL
        nodatadescription       TYPE clike OPTIONAL
        nodataillustrationtype  TYPE clike OPTIONAL
        afteritemedited         TYPE clike OPTIONAL
        afteritemremoved        TYPE clike OPTIONAL
        beforeitemadded         TYPE clike OPTIONAL
        beforeitemedited        TYPE clike OPTIONAL
        beforeitemremoved       TYPE clike OPTIONAL
        beforeuploadstarts      TYPE clike OPTIONAL
        beforeuploadtermination TYPE clike OPTIONAL
        filenamelengthexceeded  TYPE clike OPTIONAL
        filerenamed             TYPE clike OPTIONAL
        filesizeexceeded        TYPE clike OPTIONAL
        filetypemismatch        TYPE clike OPTIONAL
        itemdragstart           TYPE clike OPTIONAL
        itemdrop                TYPE clike OPTIONAL
        mediatypemismatch       TYPE clike OPTIONAL
        uploadterminated        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS upload_set_toolbar_placeholder
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS upload_set_item
      IMPORTING
        filename      TYPE clike OPTIONAL
        mediatype     TYPE clike OPTIONAL
        url           TYPE clike OPTIONAL
        thumbnailurl  TYPE clike OPTIONAL
        markers       TYPE clike OPTIONAL
        statuses      TYPE clike OPTIONAL
        enablededit   TYPE clike OPTIONAL
        enabledremove TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        visibleedit   TYPE clike OPTIONAL
        visibleremove TYPE clike OPTIONAL
        uploadstate   TYPE clike OPTIONAL
        uploadurl     TYPE clike OPTIONAL
        openpressed   TYPE clike OPTIONAL
        removepressed TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS markers_as_status
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS rules
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS mask_input_rule
      IMPORTING
        maskformatsymbol TYPE clike OPTIONAL
        regex            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS side_panel
      IMPORTING
        actionbarexpanded         TYPE clike OPTIONAL
        arialabel                 TYPE clike OPTIONAL
        sidepanelmaxwidth         TYPE clike OPTIONAL
        sidepanelminwidth         TYPE clike OPTIONAL
        sidepanelposition         TYPE clike OPTIONAL
        sidepanelresizable        TYPE clike OPTIONAL
        sidepanelresizelargerstep TYPE clike OPTIONAL
        sidepanelresizestep       TYPE clike OPTIONAL
        sidepanelwidth            TYPE clike OPTIONAL
        toggle                    TYPE clike OPTIONAL
      RETURNING
        VALUE(result)             TYPE REF TO z2ui5_cl_xml_view.

    METHODS side_panel_item
      IMPORTING
        icon          TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS main_content
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS quick_view
      IMPORTING
        placement     TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        afterclose    TYPE clike OPTIONAL
        afteropen     TYPE clike OPTIONAL
        beforeclose   TYPE clike OPTIONAL
        beforeopen    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS quick_view_page
      IMPORTING
        description   TYPE clike OPTIONAL
        header        TYPE clike OPTIONAL
        pageid        TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        titleurl      TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS quick_view_page_avatar
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS quick_view_group
      IMPORTING
        heading       TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS quick_view_group_element
      IMPORTING
        emailsubject  TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        pagelinkid    TYPE clike OPTIONAL
        target        TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        url           TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS date_range_selection
      IMPORTING
        value                   TYPE clike OPTIONAL
        placeholder             TYPE clike OPTIONAL
        displayformat           TYPE clike OPTIONAL
        valueformat             TYPE clike OPTIONAL
        required                TYPE clike OPTIONAL
        valuestate              TYPE clike OPTIONAL
        valuestatetext          TYPE clike OPTIONAL
        enabled                 TYPE clike OPTIONAL
        showcurrentdatebutton   TYPE clike OPTIONAL
        change                  TYPE clike OPTIONAL
        hideinput               TYPE clike OPTIONAL
        showfooter              TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
        showvaluestatemessage   TYPE clike OPTIONAL
        mindate                 TYPE clike OPTIONAL
        maxdate                 TYPE clike OPTIONAL
        editable                TYPE clike OPTIONAL
        width                   TYPE clike OPTIONAL
        id                      TYPE clike OPTIONAL
        calendarweeknumbering   TYPE clike OPTIONAL
        displayformattype       TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        textdirection           TYPE clike OPTIONAL
        textalign               TYPE clike OPTIONAL
        name                    TYPE clike OPTIONAL
        datevalue               TYPE clike OPTIONAL
        seconddatevalue         TYPE clike OPTIONAL
        initialfocuseddatevalue TYPE clike OPTIONAL
        delimiter               TYPE clike OPTIONAL
          PREFERRED PARAMETER value
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS variant_management_fl
      IMPORTING
        displaytextfsv                TYPE clike OPTIONAL
        editable                      TYPE clike OPTIONAL
        executeonselectionforstandflt TYPE clike OPTIONAL
        headerlevel                   TYPE clike OPTIONAL
        inerrorstate                  TYPE clike OPTIONAL
        maxwidth                      TYPE clike OPTIONAL
        modelname                     TYPE clike OPTIONAL
        resetoncontextchange          TYPE clike OPTIONAL
        showsetasdefault              TYPE clike OPTIONAL
        titlestyle                    TYPE clike OPTIONAL
        updatevariantinurl            TYPE clike OPTIONAL
        for                           TYPE clike OPTIONAL
        cancel                        TYPE clike OPTIONAL
        initialized                   TYPE clike OPTIONAL
        manage                        TYPE clike OPTIONAL
        save                          TYPE clike OPTIONAL
        select                        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_element_data
      IMPORTING
        cellslarge    TYPE clike OPTIONAL
        cellssmall    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS fb_control
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS smart_variant_management
      IMPORTING
        id                     TYPE clike OPTIONAL
        showexecuteonselection TYPE clike OPTIONAL
        persistencyKey         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS smart_filter_bar
      IMPORTING
        id             TYPE clike OPTIONAL
        persistencyKey TYPE clike OPTIONAL
        entitySet      TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS control_configuration
      IMPORTING
        id                            TYPE clike OPTIONAL
        prevInitDataFetchInValHelpDia TYPE clike OPTIONAL
        visibleInAdvancedArea         TYPE clike OPTIONAL
        key                           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS _control_configuration
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS smart_table
      IMPORTING
        id                      TYPE clike OPTIONAL
        smartFilterId           TYPE clike OPTIONAL
        tableType               TYPE clike OPTIONAL
        editable                TYPE clike OPTIONAL
        initiallyVisibleFields  TYPE clike OPTIONAL
        entitySet               TYPE clike OPTIONAL
        useVariantManagement    TYPE clike OPTIONAL
        useExportToExcel        TYPE clike OPTIONAL
        useTablePersonalisation TYPE clike OPTIONAL
        header                  TYPE clike OPTIONAL
        showRowCount            TYPE clike OPTIONAL
        enableExport            TYPE clike OPTIONAL
        enableAutoBinding       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS form_toolbar
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS paging_button
      IMPORTING
        count                 TYPE clike OPTIONAL
        nextbuttontooltip     TYPE clike OPTIONAL
        previousbuttontooltip TYPE clike OPTIONAL
        position              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)         TYPE REF TO z2ui5_cl_xml_view.

    METHODS timeline
      IMPORTING
        id                TYPE clike OPTIONAL
        enabledoublesided TYPE clike OPTIONAL
        groupby           TYPE clike OPTIONAL
        growingthreshold  TYPE clike OPTIONAL
        filtertitle       TYPE clike OPTIONAL
        sortoldestfirst   TYPE clike OPTIONAL
        alignment         TYPE clike OPTIONAL
        axisorientation   TYPE clike OPTIONAL
        content           TYPE clike OPTIONAL
        enablemodelfilter TYPE clike OPTIONAL
        enablescroll      TYPE clike OPTIONAL
        forcegrowing      TYPE clike OPTIONAL
        group             TYPE clike OPTIONAL
        lazyloading       TYPE clike OPTIONAL
        showheaderbar     TYPE clike OPTIONAL
        showicons         TYPE clike OPTIONAL
        showitemfilter    TYPE clike OPTIONAL
        showsearch        TYPE clike OPTIONAL
        showsort          TYPE clike OPTIONAL
        showtimefilter    TYPE clike OPTIONAL
        sort              TYPE clike OPTIONAL
        groupbytype       TYPE clike OPTIONAL
        textheight        TYPE clike OPTIONAL
        width             TYPE clike OPTIONAL
        height            TYPE clike OPTIONAL
        nodatatext        TYPE clike OPTIONAL
        filterlist        TYPE clike OPTIONAL
        customfilter      TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS timeline_item
      IMPORTING
        id                  TYPE clike OPTIONAL
        datetime            TYPE clike OPTIONAL
        title               TYPE clike OPTIONAL
        usernameclickable   TYPE clike OPTIONAL
        useicontooltip      TYPE clike OPTIONAL
        usernameclicked     TYPE clike OPTIONAL
        select              TYPE clike OPTIONAL
        userpicture         TYPE clike OPTIONAL
        text                TYPE clike OPTIONAL
        username            TYPE clike OPTIONAL
        filtervalue         TYPE clike OPTIONAL
        icondisplayshape    TYPE clike OPTIONAL
        iconinitials        TYPE clike OPTIONAL
        iconsize            TYPE clike OPTIONAL
        icontooltip         TYPE clike OPTIONAL
        maxcharacters       TYPE clike OPTIONAL
        replycount          TYPE clike OPTIONAL
        status              TYPE clike OPTIONAL
        customactionclicked TYPE clike OPTIONAL
        press               TYPE clike OPTIONAL
        replylistopen       TYPE clike OPTIONAL
        replypost           TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS split_container
      IMPORTING
        id                          TYPE clike OPTIONAL
        initialdetail               TYPE clike OPTIONAL
        initialmaster               TYPE clike OPTIONAL
        backgroundcolor             TYPE clike OPTIONAL
        backgroundimage             TYPE clike OPTIONAL
        backgroundopacity           TYPE clike OPTIONAL
        backgroundrepeat            TYPE clike OPTIONAL
        defaulttransitionnamedetail TYPE clike OPTIONAL
        defaulttransitionnamemaster TYPE clike OPTIONAL
        masterbuttontext            TYPE clike OPTIONAL
        masterbuttontooltip         TYPE clike OPTIONAL
        mode                        TYPE clike OPTIONAL
        afterdetailnavigate         TYPE clike OPTIONAL
        aftermasterclose            TYPE clike OPTIONAL
        aftermasternavigate         TYPE clike OPTIONAL
        aftermasteropen             TYPE clike OPTIONAL
        beforemasterclose           TYPE clike OPTIONAL
        beforemasteropen            TYPE clike OPTIONAL
        detailnavigate              TYPE clike OPTIONAL
        masterbutton                TYPE clike OPTIONAL
        masternavigate              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)               TYPE REF TO z2ui5_cl_xml_view.

    METHODS detail_pages
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS master_pages
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS container_content
      IMPORTING
        id            TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS map_container
      IMPORTING
        id               TYPE clike OPTIONAL
        autoadjustheight TYPE clike OPTIONAL
        showHome         TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS spot
      IMPORTING
        id            TYPE clike OPTIONAL
        position      TYPE clike OPTIONAL
        contentoffset TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        scale         TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
        image         TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        click         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS analytic_map
      IMPORTING !id             TYPE clike OPTIONAL
                initialposition TYPE clike OPTIONAL
                height          TYPE clike OPTIONAL
                lassoSelection  TYPE clike OPTIONAL
                visible         TYPE clike OPTIONAL
                width           TYPE clike OPTIONAL
                initialzoom     TYPE clike OPTIONAL
      RETURNING
                VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS spots
      IMPORTING
        id            TYPE clike OPTIONAL
        items         TYPE clike OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS vos
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS action_sheet
      IMPORTING
        id                TYPE clike OPTIONAL
        cancelbuttontext  TYPE clike OPTIONAL
        placement         TYPE clike OPTIONAL
        showcancelbutton  TYPE clike OPTIONAL
        title             TYPE clike OPTIONAL
        afterclose        TYPE clike OPTIONAL
        afteropen         TYPE clike OPTIONAL
        beforeclose       TYPE clike OPTIONAL
        beforeopen        TYPE clike OPTIONAL
        cancelbuttonpress TYPE clike OPTIONAL
        visible           TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS expandable_text
      IMPORTING
        id                 TYPE clike OPTIONAL
        emptyindicatormode TYPE clike OPTIONAL
        maxcharacters      TYPE clike OPTIONAL
        overflowmode       TYPE clike OPTIONAL
        renderwhitespace   TYPE clike OPTIONAL
        text               TYPE clike OPTIONAL
        textalign          TYPE clike OPTIONAL
        textdirection      TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        wrappingtype       TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS select
      IMPORTING
        id                  TYPE clike OPTIONAL
        autoadjustwidth     TYPE clike OPTIONAL
        columnratio         TYPE clike OPTIONAL
        editable            TYPE clike OPTIONAL
        enabled             TYPE clike OPTIONAL
        forceselection      TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
        maxwidth            TYPE clike OPTIONAL
        name                TYPE clike OPTIONAL
        required            TYPE clike OPTIONAL
        resetonmissingkey   TYPE clike OPTIONAL
        selecteditemid      TYPE clike OPTIONAL
        selectedkey         TYPE clike OPTIONAL
        showsecondaryvalues TYPE clike OPTIONAL
        textalign           TYPE clike OPTIONAL
        textdirection       TYPE clike OPTIONAL
        type                TYPE clike OPTIONAL
        valuestate          TYPE clike OPTIONAL
        valuestatetext      TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        width               TYPE clike OPTIONAL
        wrapitemstext       TYPE clike OPTIONAL
        items               TYPE clike OPTIONAL
        selecteditem        TYPE clike OPTIONAL
        change              TYPE clike OPTIONAL
        livechange          TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS embedded_control
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS header_container_control
      IMPORTING
        backgrounddesign TYPE clike OPTIONAL
        gridlayout       TYPE clike OPTIONAL
        height           TYPE clike OPTIONAL
        orientation      TYPE clike OPTIONAL
        scrollstep       TYPE clike OPTIONAL
        scrollstepbyitem TYPE clike OPTIONAL
        scrolltime       TYPE clike OPTIONAL
        showdividers     TYPE clike OPTIONAL
        showoverflowitem TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        width            TYPE clike OPTIONAL
        id               TYPE clike OPTIONAL
        scroll           TYPE clike OPTIONAL
        snaptorow        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS dependents
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS card
      IMPORTING
        id             TYPE clike OPTIONAL
        class          TYPE clike OPTIONAL
        headerposition TYPE clike OPTIONAL
        height         TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
        width          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS card_header
      IMPORTING
        id                  TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        iconalt             TYPE clike OPTIONAL
        iconbackgroundcolor TYPE clike OPTIONAL
        icondisplayshape    TYPE clike OPTIONAL
        iconinitials        TYPE clike OPTIONAL
        iconsize            TYPE clike OPTIONAL
        iconsrc             TYPE clike OPTIONAL
        iconvisible         TYPE clike OPTIONAL
        statustext          TYPE clike OPTIONAL
        statusvisible       TYPE clike OPTIONAL
        subtitle            TYPE clike OPTIONAL
        subtitlemaxlines    TYPE clike OPTIONAL
        title               TYPE clike OPTIONAL
        titlemaxlines       TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        datatimestamp       TYPE clike OPTIONAL
        press               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS numeric_header
      IMPORTING
        id                      TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
        datatimestamp           TYPE clike OPTIONAL
        press                   TYPE clike OPTIONAL
        details                 TYPE clike OPTIONAL
        detailsmaxlines         TYPE clike OPTIONAL
        detailsstate            TYPE clike OPTIONAL
        iconalt                 TYPE clike OPTIONAL
        iconbackgroundcolor     TYPE clike OPTIONAL
        icondisplayshape        TYPE clike OPTIONAL
        iconinitials            TYPE clike OPTIONAL
        iconsize                TYPE clike OPTIONAL
        iconsrc                 TYPE clike OPTIONAL
        iconvisible             TYPE clike OPTIONAL
        number                  TYPE clike OPTIONAL
        numbersize              TYPE clike OPTIONAL
        numbervisible           TYPE clike OPTIONAL
        scale                   TYPE clike OPTIONAL
        sideindicatorsalignment TYPE clike OPTIONAL
        state                   TYPE clike OPTIONAL
        statustext              TYPE clike OPTIONAL
        statusvisible           TYPE clike OPTIONAL
        subtitle                TYPE clike OPTIONAL
        subtitlemaxlines        TYPE clike OPTIONAL
        title                   TYPE clike OPTIONAL
        titlemaxlines           TYPE clike OPTIONAL
        trend                   TYPE clike OPTIONAL
        unitofmeasurement       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS numeric_side_indicator
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        number        TYPE clike OPTIONAL
        state         TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        unit          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS slide_tile
      IMPORTING
        displaytime    TYPE clike OPTIONAL
        height         TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
        scope          TYPE clike OPTIONAL
        sizebehavior   TYPE clike OPTIONAL
        transitiontime TYPE clike OPTIONAL
        press          TYPE clike OPTIONAL
        width          TYPE clike OPTIONAL
        class          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS tiles
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS busy_indicator
      IMPORTING
        id                      TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        customicon              TYPE clike OPTIONAL
        customiconheight        TYPE clike OPTIONAL
        customiconrotationspeed TYPE clike OPTIONAL
        customiconwidth         TYPE clike OPTIONAL
        size                    TYPE clike OPTIONAL
        text                    TYPE clike OPTIONAL
        textdirection           TYPE clike OPTIONAL
        customicondensityaware  TYPE clike OPTIONAL
        visible                 TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS custom_layout
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS carousel_layout
      IMPORTING
        visiblepagescount TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS facet_filter
      IMPORTING
        id                  TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        livesearch          TYPE clike OPTIONAL
        showpersonalization TYPE clike OPTIONAL
        showpopoverokbutton TYPE clike OPTIONAL
        showreset           TYPE clike OPTIONAL
        showsummarybar      TYPE clike OPTIONAL
        type                TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        confirm             TYPE clike OPTIONAL
        reset               TYPE clike OPTIONAL
        lists               TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS facet_filter_list
      IMPORTING
        id                          TYPE clike OPTIONAL
        class                       TYPE clike OPTIONAL
        active                      TYPE clike OPTIONAL
        allcount                    TYPE clike OPTIONAL
        backgrounddesign            TYPE clike OPTIONAL
        datatype                    TYPE clike OPTIONAL
        enablebusyindicator         TYPE clike OPTIONAL
        enablecaseinsensitivesearch TYPE clike OPTIONAL
        footertext                  TYPE clike OPTIONAL
        growing                     TYPE clike OPTIONAL
        growingdirection            TYPE clike OPTIONAL
        growingscrolltoload         TYPE clike OPTIONAL
        growingthreshold            TYPE clike OPTIONAL
        growingtriggertext          TYPE clike OPTIONAL
        headerlevel                 TYPE clike OPTIONAL
        headertext                  TYPE clike OPTIONAL
        includeiteminselection      TYPE clike OPTIONAL
        inset                       TYPE clike OPTIONAL
        key                         TYPE clike OPTIONAL
        keyboardmode                TYPE clike OPTIONAL
        mode                        TYPE clike OPTIONAL
        modeanimationon             TYPE clike OPTIONAL
        multiselectmode             TYPE clike OPTIONAL
        nodatatext                  TYPE clike OPTIONAL
        rememberselections          TYPE clike OPTIONAL
        retainlistsequence          TYPE clike OPTIONAL
        sequence                    TYPE clike OPTIONAL
        shownodata                  TYPE clike OPTIONAL
        showremovefaceticon         TYPE clike OPTIONAL
        showseparators              TYPE clike OPTIONAL
        showunread                  TYPE clike OPTIONAL
        sticky                      TYPE clike OPTIONAL
        swipedirection              TYPE clike OPTIONAL
        title                       TYPE clike OPTIONAL
        visible                     TYPE clike OPTIONAL
        width                       TYPE clike OPTIONAL
        wordwrap                    TYPE clike OPTIONAL
        listclose                   TYPE clike OPTIONAL
        listopen                    TYPE clike OPTIONAL
        search                      TYPE clike OPTIONAL
        selectionchange             TYPE clike OPTIONAL
        delete                      TYPE clike OPTIONAL
        items                       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)               TYPE REF TO z2ui5_cl_xml_view.

    METHODS facet_filter_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        count         TYPE clike OPTIONAL
        counter       TYPE clike OPTIONAL
        highlight     TYPE clike OPTIONAL
        highlighttext TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        navigated     TYPE clike OPTIONAL
        selected      TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        unread        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        detailpress   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS draft_indicator
      IMPORTING
        id             TYPE clike OPTIONAL
        class          TYPE clike OPTIONAL
        mindisplaytime TYPE clike OPTIONAL
        state          TYPE clike OPTIONAL
        visible        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS drag_info
      IMPORTING sourceAggregation TYPE clike OPTIONAL
      RETURNING VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS Drag_Drop_Info
      IMPORTING
        sourceAggregation TYPE clike OPTIONAL
        targetAggregation TYPE clike OPTIONAL
        dragStart         TYPE clike OPTIONAL
        drop              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS drag_drop_config
      IMPORTING
        ns            TYPE clike DEFAULT `f`
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS html_map
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        name          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS html_area
      IMPORTING
        id            TYPE clike OPTIONAL
        shape         TYPE clike OPTIONAL
        coords        TYPE clike OPTIONAL
        alt           TYPE clike OPTIONAL
        target        TYPE clike OPTIONAL
        href          TYPE clike OPTIONAL
        onclick       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS html_canvas
      IMPORTING
        id            TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        style         TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS notification_list
      IMPORTING
        id                     TYPE clike OPTIONAL
        class                  TYPE clike OPTIONAL
        footertext             TYPE clike OPTIONAL
        growing                TYPE clike OPTIONAL
        growingdirection       TYPE clike OPTIONAL
        growingscrolltoload    TYPE clike OPTIONAL
        growingthreshold       TYPE clike OPTIONAL
        growingtriggertext     TYPE clike OPTIONAL
        headerlevel            TYPE clike OPTIONAL
        headertext             TYPE clike OPTIONAL
        includeiteminselection TYPE clike OPTIONAL
        inset                  TYPE clike OPTIONAL
        keyboardmode           TYPE clike OPTIONAL
        mode                   TYPE clike OPTIONAL
        modeanimationon        TYPE clike OPTIONAL
        multiselectmode        TYPE clike OPTIONAL
        nodatatext             TYPE clike OPTIONAL
        rememberselections     TYPE clike OPTIONAL
        shownodata             TYPE clike OPTIONAL
        showseparators         TYPE clike OPTIONAL
        showunread             TYPE clike OPTIONAL
        sticky                 TYPE clike OPTIONAL
        swipedirection         TYPE clike OPTIONAL
        visible                TYPE clike OPTIONAL
        width                  TYPE clike OPTIONAL
        beforeopencontextmenu  TYPE clike OPTIONAL
        delete                 TYPE clike OPTIONAL
        growingfinished        TYPE clike OPTIONAL
        growingstarted         TYPE clike OPTIONAL
        itempress              TYPE clike OPTIONAL
        select                 TYPE clike OPTIONAL
        selectionchange        TYPE clike OPTIONAL
        swipe                  TYPE clike OPTIONAL
        updatefinished         TYPE clike OPTIONAL
        updatestarted          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS notification_list_group
      IMPORTING
        id                            TYPE clike OPTIONAL
        autopriority                  TYPE clike OPTIONAL
        collapsed                     TYPE clike OPTIONAL
        enablecollapsebuttonwhenempty TYPE clike OPTIONAL
        highlight                     TYPE clike OPTIONAL
        highlighttext                 TYPE clike OPTIONAL
        navigated                     TYPE clike OPTIONAL
        priority                      TYPE clike OPTIONAL
        selected                      TYPE clike OPTIONAL
        showbuttons                   TYPE clike OPTIONAL
        showclosebutton               TYPE clike OPTIONAL
        showemptygroup                TYPE clike OPTIONAL
        showitemscounter              TYPE clike OPTIONAL
        title                         TYPE clike OPTIONAL
        type                          TYPE clike OPTIONAL
        unread                        TYPE clike OPTIONAL
        visible                       TYPE clike OPTIONAL
        class                         TYPE clike OPTIONAL
        oncollapse                    TYPE clike OPTIONAL
      RETURNING
        VALUE(result)                 TYPE REF TO z2ui5_cl_xml_view.

    METHODS notification_list_item
      IMPORTING
        id                 TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        authoravatarcolor  TYPE clike OPTIONAL
        authorinitials     TYPE clike OPTIONAL
        description        TYPE clike OPTIONAL
        hideshowmorebutton TYPE clike OPTIONAL
        truncate           TYPE clike OPTIONAL
        authorname         TYPE clike OPTIONAL
        authorpicture      TYPE clike OPTIONAL
        counter            TYPE clike OPTIONAL
        datetime           TYPE clike OPTIONAL
        highlight          TYPE clike OPTIONAL
        highlighttext      TYPE clike OPTIONAL
        navigated          TYPE clike OPTIONAL
        priority           TYPE clike OPTIONAL
        selected           TYPE clike OPTIONAL
        showbuttons        TYPE clike OPTIONAL
        showclosebutton    TYPE clike OPTIONAL
        title              TYPE clike OPTIONAL
        type               TYPE clike OPTIONAL
        unread             TYPE clike OPTIONAL
        close              TYPE clike OPTIONAL
        detailpress        TYPE clike OPTIONAL
        press              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS wizard
      IMPORTING
        id                 TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        backgrounddesign   TYPE clike OPTIONAL
        busy               TYPE clike OPTIONAL
        busyindicatordelay TYPE clike OPTIONAL
        busyindicatorsize  TYPE clike OPTIONAL
        enablebranching    TYPE clike OPTIONAL
        fieldgroupids      TYPE clike OPTIONAL
        finishbuttontext   TYPE clike OPTIONAL
        height             TYPE clike OPTIONAL
        rendermode         TYPE clike OPTIONAL
        shownextbutton     TYPE clike OPTIONAL
        steptitlelevel     TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        width              TYPE clike OPTIONAL
        complete           TYPE clike OPTIONAL
        navigationchange   TYPE clike OPTIONAL
        stepactivate       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS wizard_step
      IMPORTING
        id                 TYPE clike OPTIONAL
        busy               TYPE clike OPTIONAL
        busyindicatordelay TYPE clike OPTIONAL
        busyindicatorsize  TYPE clike OPTIONAL
        fieldgroupids      TYPE clike OPTIONAL
        icon               TYPE clike OPTIONAL
        !optional          TYPE clike OPTIONAL
        title              TYPE clike OPTIONAL
        validated          TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        activate           TYPE clike OPTIONAL
        subsequentsteps    TYPE clike OPTIONAL
        nextstep           TYPE clike OPTIONAL
        complete           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_repeat
      IMPORTING
        list          TYPE clike OPTIONAL
        var           TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_with
      IMPORTING
        path          TYPE clike OPTIONAL
        helper        TYPE clike OPTIONAL
        var           TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_if
      IMPORTING
        test          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_then
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_else
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS template_elseif
      IMPORTING
        test          TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS relationship
      IMPORTING
        shapeid       TYPE clike OPTIONAL
        type          TYPE clike OPTIONAL
        successor     TYPE clike OPTIONAL
        predecessor   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS relationships
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS no_data
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS lines
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS line
      IMPORTING
        id               TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        arroworientation TYPE clike OPTIONAL
        arrowposition    TYPE clike OPTIONAL
        description      TYPE clike OPTIONAL
        from             TYPE clike OPTIONAL
        linetype         TYPE clike OPTIONAL
        selected         TYPE clike OPTIONAL
        status           TYPE clike OPTIONAL
        stretchtocenter  TYPE clike OPTIONAL
        title            TYPE clike OPTIONAL
        to               TYPE clike OPTIONAL
        visible          TYPE clike OPTIONAL
        press            TYPE clike OPTIONAL
        hover            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS groups
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS group
      IMPORTING
        id                  TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        collapsed           TYPE clike OPTIONAL
        description         TYPE clike OPTIONAL
        headercheckboxstate TYPE clike OPTIONAL
        icon                TYPE clike OPTIONAL
        key                 TYPE clike OPTIONAL
        minwidth            TYPE clike OPTIONAL
        parentgroupkey      TYPE clike OPTIONAL
        status              TYPE clike OPTIONAL
        title               TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        collapseexpand      TYPE clike OPTIONAL
        headercheckboxpress TYPE clike OPTIONAL
        showdetail          TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS network_graph
      IMPORTING
        id              TYPE clike OPTIONAL
        class           TYPE clike OPTIONAL
        layout          TYPE clike OPTIONAL
        height          TYPE clike OPTIONAL
        width           TYPE clike OPTIONAL
        nodes           TYPE clike OPTIONAL
        lines           TYPE clike OPTIONAL
        groups          TYPE clike OPTIONAL
        backgroundcolor TYPE clike OPTIONAL
        backgroundimage TYPE clike OPTIONAL
        nodatatext      TYPE clike OPTIONAL
        orientation     TYPE clike OPTIONAL
        rendertype      TYPE clike OPTIONAL
        enablewheelzoom TYPE clike OPTIONAL
        enablezoom      TYPE clike OPTIONAL
        nodata          TYPE clike OPTIONAL
        visible         TYPE clike OPTIONAL
        afterlayouting  TYPE clike OPTIONAL
        beforelayouting TYPE clike OPTIONAL
        failure         TYPE clike OPTIONAL
        graphready      TYPE clike OPTIONAL
        search          TYPE clike OPTIONAL
        searchsuggest   TYPE clike OPTIONAL
        selectionchange TYPE clike OPTIONAL
        zoomchanged     TYPE clike OPTIONAL
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS layout_algorithm
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS layered_layout
      IMPORTING
        id                TYPE clike OPTIONAL
        class             TYPE clike OPTIONAL
        linespacingfactor TYPE clike OPTIONAL
        mergeedges        TYPE clike OPTIONAL
        nodeplacement     TYPE clike OPTIONAL
        nodespacing       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS force_based_layout
      IMPORTING
        id              TYPE clike OPTIONAL
        class           TYPE clike OPTIONAL
        alpha           TYPE clike OPTIONAL
        charge          TYPE clike OPTIONAL
        friction        TYPE clike OPTIONAL
        maximumduration TYPE clike OPTIONAL
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS force_directed_layout
      IMPORTING
        id                      TYPE clike OPTIONAL
        class                   TYPE clike OPTIONAL
        cooldownstep            TYPE clike OPTIONAL
        initialtemperature      TYPE clike OPTIONAL
        maxiterations           TYPE clike OPTIONAL
        maxtime                 TYPE clike OPTIONAL
        optimaldistanceconstant TYPE clike OPTIONAL
        staticnodes             TYPE clike OPTIONAL
      RETURNING
        VALUE(result)           TYPE REF TO z2ui5_cl_xml_view.

    METHODS noop_layout
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS swim_lane_chain_layout
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS two_columns_layout
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS attributes
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS element_attribute
      IMPORTING
        ns            TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS action_buttons
      IMPORTING
        ns            TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS action_button
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        enabled       TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        position      TYPE clike OPTIONAL
        title         TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS routes
      IMPORTING
        id            TYPE clike OPTIONAL
        items         TYPE clike OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS legend_area
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS legenditem
      IMPORTING
        id            TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
          PREFERRED PARAMETER text
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS legend
      IMPORTING
        id            TYPE clike OPTIONAL
        items         TYPE clike OPTIONAL
        caption       TYPE clike OPTIONAL
          PREFERRED PARAMETER items
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS route
      IMPORTING
        id            TYPE clike OPTIONAL
        position      TYPE clike OPTIONAL
        routetype     TYPE clike OPTIONAL
        linedash      TYPE clike OPTIONAL
        color         TYPE clike OPTIONAL
        colorborder   TYPE clike OPTIONAL
        linewidth     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        afterclose    TYPE clike OPTIONAL
        beforeopen    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_item
      IMPORTING
        id                 TYPE clike OPTIONAL
        class              TYPE clike OPTIONAL
        icon               TYPE clike OPTIONAL
        label              TYPE clike OPTIONAL
        resetbuttonenabled TYPE clike OPTIONAL
        showcancelbutton   TYPE clike OPTIONAL
        showconfirmbutton  TYPE clike OPTIONAL
        showresetbutton    TYPE clike OPTIONAL
        visible            TYPE clike OPTIONAL
        cancel             TYPE clike OPTIONAL
        confirm            TYPE clike OPTIONAL
        reset              TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_action_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_action
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        category      TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_action_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_group
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_group_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        grouped       TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_sort
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_sort_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        sortorder     TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_total
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS column_menu_quick_total_item
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        totaled       TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
        label         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS micro_process_flow
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        arialabel     TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        rendertype    TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS micro_process_flow_item
      IMPORTING
        id               TYPE clike OPTIONAL
        class            TYPE clike OPTIONAL
        icon             TYPE clike OPTIONAL
        key              TYPE clike OPTIONAL
        showintermediary TYPE clike OPTIONAL
        showseparator    TYPE clike OPTIONAL
        state            TYPE clike OPTIONAL
        stepwidth        TYPE clike OPTIONAL
        title            TYPE clike OPTIONAL
        press            TYPE clike OPTIONAL
      RETURNING
        VALUE(result)    TYPE REF TO z2ui5_cl_xml_view.

    METHODS intermediary
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS custom_control
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS responsive_scale
      IMPORTING
        id                     TYPE clike OPTIONAL
        class                  TYPE clike OPTIONAL
        tickmarksbetweenlabels TYPE clike OPTIONAL
      RETURNING
        VALUE(result)          TYPE REF TO z2ui5_cl_xml_view.

    METHODS status_indicator
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        labelposition TYPE clike OPTIONAL
        showlabel     TYPE clike OPTIONAL
        size          TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        viewbox       TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS property_thresholds
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS property_threshold
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        fillcolor     TYPE clike OPTIONAL
        tovalue       TYPE clike OPTIONAL
        arialabel     TYPE clike OPTIONAL
        visible       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS shape_group
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS library_shape
      IMPORTING
        id                  TYPE clike OPTIONAL
        class               TYPE clike OPTIONAL
        animationonchange   TYPE clike OPTIONAL
        definition          TYPE clike OPTIONAL
        fillcolor           TYPE clike OPTIONAL
        fillingangle        TYPE clike OPTIONAL
        fillingdirection    TYPE clike OPTIONAL
        fillingtype         TYPE clike OPTIONAL
        height              TYPE clike OPTIONAL
        horizontalalignment TYPE clike OPTIONAL
        shapeid             TYPE clike OPTIONAL
        strokecolor         TYPE clike OPTIONAL
        strokewidth         TYPE clike OPTIONAL
        verticalalignment   TYPE clike OPTIONAL
        visible             TYPE clike OPTIONAL
        width               TYPE clike OPTIONAL
        x                   TYPE clike OPTIONAL
        y                   TYPE clike OPTIONAL
        aftershapeloaded    TYPE clike OPTIONAL
      RETURNING
        VALUE(result)       TYPE REF TO z2ui5_cl_xml_view.

    METHODS tile_info
      IMPORTING
        id              TYPE clike OPTIONAL
        class           TYPE clike OPTIONAL
        backgroundcolor TYPE clike OPTIONAL
        bordercolor     TYPE clike OPTIONAL
        src             TYPE clike OPTIONAL
        text            TYPE clike OPTIONAL
        textcolor       TYPE clike OPTIONAL
      RETURNING
        VALUE(result)   TYPE REF TO z2ui5_cl_xml_view.

    METHODS badge
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS side_navigation
      IMPORTING
        id            TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        selectedkey   TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS navigation_list
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS navigation_list_item
      IMPORTING
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        select        TYPE clike OPTIONAL
        href          TYPE clike OPTIONAL
        key           TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS fixed_item
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS viz_frame
      IMPORTING
        !id                TYPE clike OPTIONAL
        !legendvisible     TYPE clike OPTIONAL
        !vizcustomizations TYPE clike OPTIONAL
        !vizproperties     TYPE clike OPTIONAL
        !vizscales         TYPE clike OPTIONAL
        !viztype           TYPE clike OPTIONAL
        !height            TYPE clike OPTIONAL
        !width             TYPE clike OPTIONAL
        !uiconfig          TYPE clike DEFAULT `{applicationSet:'fiori'}`
        !visible           TYPE clike OPTIONAL
        !selectdata        TYPE clike OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_dataset
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_flattened_dataset
      IMPORTING
        !data         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_dimensions
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_dimension_definition
      IMPORTING
        !axis         TYPE clike OPTIONAL
        !datatype     TYPE clike OPTIONAL
        !displayvalue TYPE clike OPTIONAL
        !identity     TYPE clike OPTIONAL
        !name         TYPE clike OPTIONAL
        !sorter       TYPE clike OPTIONAL
        !value        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_measures
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_measure_definition
      IMPORTING
        !format       TYPE clike OPTIONAL
        !group        TYPE clike OPTIONAL
        !identity     TYPE clike OPTIONAL
        !name         TYPE clike OPTIONAL
        !range        TYPE clike OPTIONAL
        !unit         TYPE clike OPTIONAL
        !value        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_feeds
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS viz_feed_item
      IMPORTING
        !id           TYPE clike OPTIONAL
        !uid          TYPE clike OPTIONAL
        !type         TYPE clike OPTIONAL
        !values       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view .
    METHODS smart_multi_input
      IMPORTING
        id                   TYPE clike OPTIONAL
        entitySet            TYPE clike OPTIONAL
        value                TYPE clike OPTIONAL
        supportranges        TYPE clike DEFAULT 'false'
        enableodataselect    TYPE clike DEFAULT 'false'
        requestatleastfields TYPE clike OPTIONAL
        singletokenmode      TYPE clike DEFAULT 'false'
        supportmultiselect   TYPE clike DEFAULT 'true'
        textseparator        TYPE clike OPTIONAL
        textlabel            TYPE clike OPTIONAL
        tooltiplabel         TYPE clike OPTIONAL
        textineditmodesource TYPE clike DEFAULT 'None'
        mandatory            TYPE clike DEFAULT 'false'
        maxlength            TYPE clike DEFAULT '0'
      RETURNING
        VALUE(result)        TYPE REF TO z2ui5_cl_xml_view.
  PROTECTED SECTION.
    DATA mv_name     TYPE string.
    DATA mv_ns       TYPE string.
    TYPES temp2_9d2fbd18c9 TYPE SORTED TABLE OF z2ui5_if_types=>ty_s_name_value WITH NON-UNIQUE KEY n.
DATA mt_prop     TYPE temp2_9d2fbd18c9.

    TYPES temp3_9d2fbd18c9 TYPE SORTED TABLE OF string WITH UNIQUE KEY table_line.
DATA mt_ns       TYPE temp3_9d2fbd18c9.
    DATA mo_root     TYPE REF TO z2ui5_cl_xml_view.
    DATA mo_previous TYPE REF TO z2ui5_cl_xml_view.
    DATA mo_parent   TYPE REF TO z2ui5_cl_xml_view.
    TYPES temp4_9d2fbd18c9 TYPE STANDARD TABLE OF REF TO z2ui5_cl_xml_view WITH DEFAULT KEY.
DATA mt_child    TYPE temp4_9d2fbd18c9.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_xml_view_cc DEFINITION FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    METHODS smartmultiinput_ext
      IMPORTING
        multiinputid  TYPE clike OPTIONAL
        change        TYPE clike OPTIONAL
        rangeData     TYPE clike OPTIONAL
        addedtokens   TYPE clike OPTIONAL
        removedtokens TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS multiinput_ext
      IMPORTING
        multiinputid   TYPE clike OPTIONAL
        multiinputname TYPE clike OPTIONAL
        change         TYPE clike OPTIONAL
        addedtokens    TYPE clike OPTIONAL
        removedtokens  TYPE clike OPTIONAL
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS uitableext
      IMPORTING
        tableid       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS camera_picture
      IMPORTING
        id            TYPE clike OPTIONAL
        value         TYPE clike OPTIONAL
        press         TYPE clike OPTIONAL
        autoplay      TYPE clike OPTIONAL
        onphoto       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS bwip_js
      IMPORTING
        bcid          TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        scale         TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS demo_output
      IMPORTING
        val           TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS focus
      IMPORTING
        focusid        TYPE clike OPTIONAL
        selectionstart TYPE clike OPTIONAL
        selectionend   TYPE clike OPTIONAL
        setupdate      TYPE clike OPTIONAL
          PREFERRED PARAMETER focusid
      RETURNING
        VALUE(result)  TYPE REF TO z2ui5_cl_xml_view.

    METHODS geolocation
      IMPORTING
        finished           TYPE clike OPTIONAL
        longitude          TYPE any   OPTIONAL
        latitude           TYPE any   OPTIONAL
        altitude           TYPE any   OPTIONAL
        accuracy           TYPE any   OPTIONAL
        altitudeaccuracy   TYPE any   OPTIONAL
        speed              TYPE any   OPTIONAL
        heading            TYPE any   OPTIONAL
        enablehighaccuracy TYPE any   OPTIONAL
        timeout            TYPE any   OPTIONAL
      RETURNING
        VALUE(result)      TYPE REF TO z2ui5_cl_xml_view.

    METHODS info_frontend
      IMPORTING
        finished          TYPE clike OPTIONAL
        ui5_version       TYPE clike OPTIONAL
        device_height     TYPE clike OPTIONAL
        device_width      TYPE clike OPTIONAL
        device_phone      TYPE clike OPTIONAL
        device_desktop    TYPE clike OPTIONAL
        device_tablet     TYPE clike OPTIONAL
        device_combi      TYPE clike OPTIONAL
        ui5_gav           TYPE clike OPTIONAL
        ui5_theme         TYPE clike OPTIONAL
        device_os         TYPE clike OPTIONAL
        device_systemtype TYPE clike OPTIONAL
        device_browser    TYPE clike OPTIONAL
          PREFERRED PARAMETER finished
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS spreadsheet_export
      IMPORTING
        tableid       TYPE clike
        type          TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        icon          TYPE clike OPTIONAL
        tooltip       TYPE clike OPTIONAL
        columnconfig  TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS file_uploader
      IMPORTING
        value             TYPE clike OPTIONAL
        path              TYPE clike OPTIONAL
        placeholder       TYPE clike OPTIONAL
        upload            TYPE clike OPTIONAL
        icononly          TYPE clike OPTIONAL
        buttononly        TYPE clike OPTIONAL
        buttontext        TYPE clike OPTIONAL
        uploadbuttontext  TYPE clike OPTIONAL
        checkdirectupload TYPE clike OPTIONAL
        filetype          TYPE clike OPTIONAL
        icon              TYPE clike OPTIONAL
        enabled           TYPE clike OPTIONAL
      RETURNING
        VALUE(result)     TYPE REF TO z2ui5_cl_xml_view.

    METHODS messaging
      IMPORTING
        items         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS message_manager
      IMPORTING
        items         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS title
      IMPORTING
        title         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS dirty
      IMPORTING
        isdirty       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS lp_title
      IMPORTING
        title                TYPE clike OPTIONAL
        ApplicationFullWidth TYPE clike OPTIONAL
          PREFERRED PARAMETER title
      RETURNING
        VALUE(result)        TYPE REF TO z2ui5_cl_xml_view.

    METHODS history
      IMPORTING
        search        TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS scrolling
      IMPORTING
        setupdate     TYPE clike OPTIONAL
        items         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS tree
      IMPORTING
        tree_id       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS timer
      IMPORTING
        finished      TYPE clike OPTIONAL
        delayms       TYPE clike OPTIONAL
        checkrepeat   TYPE clike OPTIONAL
        checkactive   TYPE clike OPTIONAL
          PREFERRED PARAMETER finished
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS websocket
      IMPORTING
        value         TYPE clike OPTIONAL
        received      TYPE clike OPTIONAL
        path          TYPE clike OPTIONAL
        checkrepeat   TYPE clike OPTIONAL
        checkactive   TYPE clike OPTIONAL
          PREFERRED PARAMETER received
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS binding_update
      IMPORTING
        changed       TYPE clike OPTIONAL
        path          TYPE clike OPTIONAL
          PREFERRED PARAMETER changed
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS chartjs
      IMPORTING
        canvas_id     TYPE clike OPTIONAL
        view          TYPE clike OPTIONAL
        config        TYPE clike OPTIONAL
        height        TYPE clike OPTIONAL
        width         TYPE clike OPTIONAL
        style         TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS favicon
      IMPORTING
        favicon       TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS approve_popover
      IMPORTING
        placement     TYPE clike OPTIONAL
        class         TYPE clike OPTIONAL
        text          TYPE clike OPTIONAL
        btn_txt       TYPE clike OPTIONAL
        btn_type      TYPE clike OPTIONAL
        btn_icon      TYPE clike OPTIONAL
        btn_event     TYPE clike OPTIONAL
      RETURNING
        VALUE(result) TYPE REF TO z2ui5_cl_xml_view.

    METHODS constructor
      IMPORTING
        view TYPE REF TO z2ui5_cl_xml_view.

  PROTECTED SECTION.
    DATA mo_view TYPE REF TO z2ui5_cl_xml_view.

  PRIVATE SECTION.
ENDCLASS.
CLASS z2ui5_cl_xml_view_cc IMPLEMENTATION.

  METHOD approve_popover.

    result = mo_view.

    mo_view->popover( showheader = abap_false
                      placement  = placement
                      class      = class )->hbox( justifycontent = `Center`
      )->vbox( justifycontent = `Center`
               alignitems     = `Center`
        )->text( text
        )->button( type  = btn_type
                   text  = btn_txt
                   icon  = btn_icon
                   press = btn_event ).

  ENDMETHOD.

  METHOD bwip_js.

    result = mo_view.
    DATA temp1 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp1.
    DATA temp2 LIKE LINE OF temp1.
    temp2-n = `bcid`.
    temp2-v = bcid.
    INSERT temp2 INTO TABLE temp1.
    temp2-n = `text`.
    temp2-v = text.
    INSERT temp2 INTO TABLE temp1.
    temp2-n = `scale`.
    temp2-v = scale.
    INSERT temp2 INTO TABLE temp1.
    temp2-n = `height`.
    temp2-v = height.
    INSERT temp2 INTO TABLE temp1.
    mo_view->_generic( name   = `bwipjs`
                       ns     = `z2ui5`
                       t_prop = temp1 ).

  ENDMETHOD.

  METHOD camera_picture.

    result = mo_view.
    DATA temp3 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp3.
    DATA temp4 LIKE LINE OF temp3.
    temp4-n = `id`.
    temp4-v = id.
    INSERT temp4 INTO TABLE temp3.
    temp4-n = `value`.
    temp4-v = value.
    INSERT temp4 INTO TABLE temp3.
    temp4-n = `press`.
    temp4-v = press.
    INSERT temp4 INTO TABLE temp3.
    temp4-n = `OnPhoto`.
    temp4-v = onphoto.
    INSERT temp4 INTO TABLE temp3.
    temp4-n = `autoplay`.
    temp4-v = z2ui5_cl_util=>boolean_abap_2_json( autoplay ).
    INSERT temp4 INTO TABLE temp3.
    mo_view->_generic( name   = `CameraPicture`
                       ns     = `z2ui5`
                       t_prop = temp3 ).

  ENDMETHOD.

  METHOD chartjs.

    result = mo_view.
    DATA temp5 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp5.
    DATA temp6 LIKE LINE OF temp5.
    temp6-n = `canvas_id`.
    temp6-v = canvas_id.
    INSERT temp6 INTO TABLE temp5.
    temp6-n = `view`.
    temp6-v = view.
    INSERT temp6 INTO TABLE temp5.
    temp6-n = `config`.
    temp6-v = config.
    INSERT temp6 INTO TABLE temp5.
    temp6-n = `height`.
    temp6-v = height.
    INSERT temp6 INTO TABLE temp5.
    temp6-n = `width`.
    temp6-v = width.
    INSERT temp6 INTO TABLE temp5.
    temp6-n = `style`.
    temp6-v = style.
    INSERT temp6 INTO TABLE temp5.
    mo_view->_generic( name   = `chartjs`
                       ns     = `z2ui5`
                       t_prop = temp5 ).
  ENDMETHOD.

  METHOD constructor.

    mo_view = view.

  ENDMETHOD.

  METHOD demo_output.

    DATA lv_style TYPE string.

    mo_view->_generic( ns   = `html`
                       name = `style` ).

    DATA lv_class TYPE c LENGTH 20.
    lv_class = 'Z2UI5_CL_CC_DEMO_OUT'.
    CALL METHOD (lv_class)=>('GET_STYLE')
      RECEIVING
        result = lv_style.
    result = mo_view->_cc_plain_xml( lv_style )->html( val ).

  ENDMETHOD.

  METHOD favicon.

    result = mo_view.
    DATA temp7 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp7.
    DATA temp8 LIKE LINE OF temp7.
    temp8-n = `favicon`.
    temp8-v = favicon.
    INSERT temp8 INTO TABLE temp7.
    mo_view->_generic( name   = `Favicon`
                       ns     = `z2ui5`
                       t_prop = temp7 ).

  ENDMETHOD.

  METHOD file_uploader.

    result = mo_view.
    DATA temp9 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp9.
    DATA temp10 LIKE LINE OF temp9.
    temp10-n = `placeholder`.
    temp10-v = placeholder.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `upload`.
    temp10-v = upload.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `path`.
    temp10-v = path.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `value`.
    temp10-v = value.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `iconOnly`.
    temp10-v = z2ui5_cl_util=>boolean_abap_2_json( icononly ).
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `buttonOnly`.
    temp10-v = z2ui5_cl_util=>boolean_abap_2_json( buttononly ).
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `buttonText`.
    temp10-v = buttontext.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `uploadButtonText`.
    temp10-v = uploadbuttontext.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `fileType`.
    temp10-v = filetype.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `checkDirectUpload`.
    temp10-v = z2ui5_cl_util=>boolean_abap_2_json( checkdirectupload ).
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `icon`.
    temp10-v = icon.
    INSERT temp10 INTO TABLE temp9.
    temp10-n = `enabled`.
    temp10-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp10 INTO TABLE temp9.
    mo_view->_generic(
        name   = `FileUploader`
        ns     = `z2ui5`
        t_prop = temp9 ).

  ENDMETHOD.

  METHOD focus.

    result = mo_view.
    DATA temp11 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp11.
    DATA temp12 LIKE LINE OF temp11.
    temp12-n = `setUpdate`.
    temp12-v = setupdate.
    INSERT temp12 INTO TABLE temp11.
    temp12-n = `selectionStart`.
    temp12-v = selectionstart.
    INSERT temp12 INTO TABLE temp11.
    temp12-n = `selectionEnd`.
    temp12-v = selectionend.
    INSERT temp12 INTO TABLE temp11.
    temp12-n = `focusId`.
    temp12-v = focusid.
    INSERT temp12 INTO TABLE temp11.
    mo_view->_generic( name   = `Focus`
                       ns     = `z2ui5`
                       t_prop = temp11 ).

  ENDMETHOD.

  METHOD geolocation.

    result = mo_view.
    DATA temp13 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp13.
    DATA temp14 LIKE LINE OF temp13.
    temp14-n = `finished`.
    temp14-v = finished.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `longitude`.
    temp14-v = longitude.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `latitude`.
    temp14-v = latitude.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `altitude`.
    temp14-v = altitude.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `accuracy`.
    temp14-v = accuracy.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `altitudeAccuracy`.
    temp14-v = altitudeaccuracy.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `speed`.
    temp14-v = speed.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `heading`.
    temp14-v = heading.
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `enableHighAccuracy`.
    temp14-v = z2ui5_cl_util=>boolean_abap_2_json( enablehighaccuracy ).
    INSERT temp14 INTO TABLE temp13.
    temp14-n = `timeout`.
    temp14-v = timeout.
    INSERT temp14 INTO TABLE temp13.
    mo_view->_generic( name   = `Geolocation`
                       ns     = `z2ui5`
                       t_prop = temp13 ).

  ENDMETHOD.

  METHOD history.

    result = mo_view.
    DATA temp15 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp15.
    DATA temp16 LIKE LINE OF temp15.
    temp16-n = `search`.
    temp16-v = search.
    INSERT temp16 INTO TABLE temp15.
    mo_view->_generic( name   = `History`
                       ns     = `z2ui5`
                       t_prop = temp15 ).

  ENDMETHOD.

  METHOD info_frontend.

    result = mo_view.
    DATA temp17 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp17.
    DATA temp18 LIKE LINE OF temp17.
    temp18-n = `ui5_version`.
    temp18-v = ui5_version.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `ui5_gav`.
    temp18-v = ui5_gav.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `finished`.
    temp18-v = finished.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `ui5_theme`.
    temp18-v = ui5_theme.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_os`.
    temp18-v = device_os.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_systemtype`.
    temp18-v = device_systemtype.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_browser`.
    temp18-v = device_browser.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_phone`.
    temp18-v = device_phone.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_desktop`.
    temp18-v = device_desktop.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_tablet`.
    temp18-v = device_tablet.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_combi`.
    temp18-v = device_combi.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_height`.
    temp18-v = device_height.
    INSERT temp18 INTO TABLE temp17.
    temp18-n = `device_width`.
    temp18-v = device_width.
    INSERT temp18 INTO TABLE temp17.
    mo_view->_generic( name   = `Info`
                       ns     = `z2ui5`
                       t_prop = temp17
               ).

  ENDMETHOD.

  METHOD message_manager.

    result = mo_view.
    DATA temp19 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp19.
    DATA temp20 LIKE LINE OF temp19.
    temp20-n = `items`.
    temp20-v = items.
    INSERT temp20 INTO TABLE temp19.
    mo_view->_generic( name   = `MessageManager`
                       ns     = `z2ui5`
                       t_prop = temp19 ).

  ENDMETHOD.

  METHOD messaging.

    result = mo_view.
    DATA temp21 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp21.
    DATA temp22 LIKE LINE OF temp21.
    temp22-n = `items`.
    temp22-v = items.
    INSERT temp22 INTO TABLE temp21.
    mo_view->_generic( name   = `Messaging`
                       ns     = `z2ui5`
                       t_prop = temp21 ).

  ENDMETHOD.

  METHOD multiinput_ext.

    result = mo_view.
    DATA temp23 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp23.
    DATA temp24 LIKE LINE OF temp23.
    temp24-n = `MultiInputId`.
    temp24-v = multiinputid.
    INSERT temp24 INTO TABLE temp23.
    temp24-n = `MultiInputName`.
    temp24-v = multiinputname.
    INSERT temp24 INTO TABLE temp23.
    temp24-n = `change`.
    temp24-v = change.
    INSERT temp24 INTO TABLE temp23.
    temp24-n = `addedTokens`.
    temp24-v = addedtokens.
    INSERT temp24 INTO TABLE temp23.
    temp24-n = `removedTokens`.
    temp24-v = removedtokens.
    INSERT temp24 INTO TABLE temp23.
    mo_view->_generic( name   = `MultiInputExt`
                       ns     = `z2ui5`
                       t_prop = temp23 ).

  ENDMETHOD.

  METHOD tree.

    result = mo_view.
    DATA temp25 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp25.
    DATA temp26 LIKE LINE OF temp25.
    temp26-n = `tree_id`.
    temp26-v = tree_id.
    INSERT temp26 INTO TABLE temp25.
    mo_view->_generic( name   = `Tree`
                       ns     = `z2ui5`
                       t_prop = temp25 ).

  ENDMETHOD.

  METHOD scrolling.

    result = mo_view.
    DATA temp27 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp27.
    DATA temp28 LIKE LINE OF temp27.
    temp28-n = `setUpdate`.
    temp28-v = setupdate.
    INSERT temp28 INTO TABLE temp27.
    temp28-n = `items`.
    temp28-v = items.
    INSERT temp28 INTO TABLE temp27.
    mo_view->_generic( name   = `Scrolling`
                       ns     = `z2ui5`
                       t_prop = temp27 ).

  ENDMETHOD.

  METHOD spreadsheet_export.

    result = mo_view.
    DATA temp29 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp29.
    DATA temp30 LIKE LINE OF temp29.
    temp30-n = `tableId`.
    temp30-v = tableid.
    INSERT temp30 INTO TABLE temp29.
    temp30-n = `text`.
    temp30-v = text.
    INSERT temp30 INTO TABLE temp29.
    temp30-n = `icon`.
    temp30-v = icon.
    INSERT temp30 INTO TABLE temp29.
    temp30-n = `type`.
    temp30-v = type.
    INSERT temp30 INTO TABLE temp29.
    temp30-n = `tooltip`.
    temp30-v = tooltip.
    INSERT temp30 INTO TABLE temp29.
    temp30-n = `columnconfig`.
    temp30-v = columnconfig.
    INSERT temp30 INTO TABLE temp29.
    mo_view->_generic( name   = `ExportSpreadsheet`
                       ns     = `z2ui5`
                       t_prop = temp29 ).

  ENDMETHOD.

  METHOD timer.

    result = mo_view.
    DATA temp31 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp31.
    DATA temp32 LIKE LINE OF temp31.
    temp32-n = `delayMS`.
    temp32-v = delayms.
    INSERT temp32 INTO TABLE temp31.
    temp32-n = `finished`.
    temp32-v = finished.
    INSERT temp32 INTO TABLE temp31.
    temp32-n = `checkActive`.
    temp32-v = z2ui5_cl_util=>boolean_abap_2_json( checkactive ).
    INSERT temp32 INTO TABLE temp31.
    temp32-n = `checkRepeat`.
    temp32-v = z2ui5_cl_util=>boolean_abap_2_json( checkrepeat ).
    INSERT temp32 INTO TABLE temp31.
    mo_view->_generic( name   = `Timer`
                       ns     = `z2ui5`
                       t_prop = temp31 ).

  ENDMETHOD.

  METHOD binding_update.

    result = mo_view.
    DATA temp33 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp33.
    DATA temp34 LIKE LINE OF temp33.
    temp34-n = `path`.
    temp34-v = path.
    INSERT temp34 INTO TABLE temp33.
    temp34-n = `changed`.
    temp34-v = changed.
    INSERT temp34 INTO TABLE temp33.
    mo_view->_generic( name   = `BindingUpdate`
                       ns     = `z2ui5`
                       t_prop = temp33 ).

  ENDMETHOD.

  METHOD websocket.

    result = mo_view.
    DATA temp35 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp35.
    DATA temp36 LIKE LINE OF temp35.
    temp36-n = `value`.
    temp36-v = value.
    INSERT temp36 INTO TABLE temp35.
    temp36-n = `path`.
    temp36-v = path.
    INSERT temp36 INTO TABLE temp35.
    temp36-n = `received`.
    temp36-v = received.
    INSERT temp36 INTO TABLE temp35.
    temp36-n = `checkActive`.
    temp36-v = z2ui5_cl_util=>boolean_abap_2_json( checkactive ).
    INSERT temp36 INTO TABLE temp35.
    temp36-n = `checkRepeat`.
    temp36-v = z2ui5_cl_util=>boolean_abap_2_json( checkrepeat ).
    INSERT temp36 INTO TABLE temp35.
    mo_view->_generic( name   = `Websocket`
                       ns     = `z2ui5`
                       t_prop = temp35 ).

  ENDMETHOD.

  METHOD lp_title.

    result = mo_view.
    DATA temp37 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp37.
    DATA temp38 LIKE LINE OF temp37.
    temp38-n = `title`.
    temp38-v = title.
    INSERT temp38 INTO TABLE temp37.
    temp38-n = `ApplicationFullWidth`.
    temp38-v = z2ui5_cl_util=>boolean_abap_2_json( ApplicationFullWidth ).
    INSERT temp38 INTO TABLE temp37.
    mo_view->_generic( name   = `LPTitle`
                       ns     = `z2ui5`
                       t_prop = temp37
                         ).

  ENDMETHOD.

  METHOD title.

    result = mo_view.
    DATA temp39 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp39.
    DATA temp40 LIKE LINE OF temp39.
    temp40-n = `title`.
    temp40-v = title.
    INSERT temp40 INTO TABLE temp39.
    mo_view->_generic( name   = `Title`
                       ns     = `z2ui5`
                       t_prop = temp39 ).

  ENDMETHOD.

  METHOD dirty.

    result = mo_view.
    DATA temp41 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp41.
    DATA temp42 LIKE LINE OF temp41.
    temp42-n = `isDirty`.
    temp42-v = z2ui5_cl_util=>boolean_abap_2_json( isdirty ).
    INSERT temp42 INTO TABLE temp41.
    mo_view->_generic( name   = `Dirty`
                       ns     = `z2ui5`
                       t_prop = temp41 ).

  ENDMETHOD.

  METHOD uitableext.

    DATA temp43 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp43.
    DATA temp44 LIKE LINE OF temp43.
    temp44-n = `tableId`.
    temp44-v = tableid.
    INSERT temp44 INTO TABLE temp43.
    result = mo_view->_generic( name   = `UITableExt`
                                ns     = `z2ui5`
                                t_prop = temp43 ).

  ENDMETHOD.

  METHOD smartmultiinput_ext.

    result = mo_view.
    DATA temp45 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp45.
    DATA temp46 LIKE LINE OF temp45.
    temp46-n = `multiInputId`.
    temp46-v = multiInputId.
    INSERT temp46 INTO TABLE temp45.
    temp46-n = `rangeData`.
    temp46-v = rangeData.
    INSERT temp46 INTO TABLE temp45.
    temp46-n = `change`.
    temp46-v = change.
    INSERT temp46 INTO TABLE temp45.
    temp46-n = `addedTokens`.
    temp46-v = addedTokens.
    INSERT temp46 INTO TABLE temp45.
    temp46-n = `removedTokens`.
    temp46-v = removedTokens.
    INSERT temp46 INTO TABLE temp45.
    mo_view->_generic( name   = `SmartMultiInputExt`
                       ns     = `z2ui5`
                       t_prop = temp45 ).

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_xml_view IMPLEMENTATION.

  METHOD actions.
    result = _generic( name = `actions`
                       ns   = ns ).
  ENDMETHOD.

  METHOD action_button.
    DATA temp47 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp47.
    DATA temp48 LIKE LINE OF temp47.
    temp48-n = `id`.
    temp48-v = id.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `class`.
    temp48-v = class.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `icon`.
    temp48-v = icon.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `position`.
    temp48-v = position.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `title`.
    temp48-v = title.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `press`.
    temp48-v = press.
    INSERT temp48 INTO TABLE temp47.
    temp48-n = `enabled`.
    temp48-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp48 INTO TABLE temp47.
    result = _generic( name   = `ActionButton`
                       ns     = `networkgraph`
                       t_prop = temp47 ).
  ENDMETHOD.

  METHOD action_buttons.
    DATA temp49 TYPE string.
    CASE ns.
      WHEN ''.
        temp49 = `networkgraph`.
      WHEN OTHERS.
        temp49 = ns.
    ENDCASE.
    result = _generic( name = `actionButtons`
                       ns   = temp49 ).
  ENDMETHOD.

  METHOD action_sheet.
    DATA temp50 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp50.
    DATA temp51 LIKE LINE OF temp50.
    temp51-n = `id`.
    temp51-v = id.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `class`.
    temp51-v = class.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `cancelbuttontext`.
    temp51-v = cancelbuttontext.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `placement`.
    temp51-v = placement.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `showCancelButton`.
    temp51-v = showcancelbutton.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `title`.
    temp51-v = title.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `afterClose`.
    temp51-v = afterclose.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `afterOpen`.
    temp51-v = afteropen.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `beforeClose`.
    temp51-v = beforeclose.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `beforeOpen`.
    temp51-v = beforeopen.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `cancelButtonPress`.
    temp51-v = cancelbuttonpress.
    INSERT temp51 INTO TABLE temp50.
    temp51-n = `visible`.
    temp51-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp51 INTO TABLE temp50.
    result = _generic(
                 name   = `ActionSheet`
                 t_prop = temp50 ).
  ENDMETHOD.

  METHOD additional_content.
    result = _generic( `additionalContent` ).
  ENDMETHOD.

  METHOD additional_numbers.
    result = _generic( `additionalNumbers` ).
  ENDMETHOD.

  METHOD analytic_map.

    DATA temp52 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp52.
    DATA temp53 LIKE LINE OF temp52.
    temp53-n = `id`.
    temp53-v = id.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `initialPosition`.
    temp53-v = initialposition.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `lassoSelection`.
    temp53-v = lassoSelection.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `height`.
    temp53-v = height.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `visible`.
    temp53-v = visible.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `width`.
    temp53-v = width.
    INSERT temp53 INTO TABLE temp52.
    temp53-n = `initialZoom`.
    temp53-v = initialzoom.
    INSERT temp53 INTO TABLE temp52.
    result = _generic( name   = `AnalyticMap`
                       ns     = `vbm`
                       t_prop = temp52 ).

  ENDMETHOD.

  METHOD appointments.
    result = _generic( `appointments` ).
  ENDMETHOD.

  METHOD appointment_items.
    result = _generic( `appointmentItems` ).
  ENDMETHOD.

  METHOD area_micro_chart.
    result = me.
    DATA temp54 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp54.
    DATA temp55 LIKE LINE OF temp54.
    temp55-n = `colorPalette`.
    temp55-v = colorpalette.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `press`.
    temp55-v = press.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `size`.
    temp55-v = size.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `height`.
    temp55-v = height.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `maxXValue`.
    temp55-v = maxxvalue.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `maxYValue`.
    temp55-v = maxyvalue.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `minXValue`.
    temp55-v = minxvalue.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `minYValue`.
    temp55-v = minyvalue.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `view`.
    temp55-v = view.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `alignContent`.
    temp55-v = aligncontent.
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `hideOnNoData`.
    temp55-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `showLabel`.
    temp55-v = z2ui5_cl_util=>boolean_abap_2_json( showlabel ).
    INSERT temp55 INTO TABLE temp54.
    temp55-n = `width`.
    temp55-v = width.
    INSERT temp55 INTO TABLE temp54.
    _generic( name   = `AreaMicroChart`
              ns     = `mchart`
              t_prop = temp54 ).
  ENDMETHOD.

  METHOD attributes.
    DATA temp56 TYPE string.
    CASE ns.
      WHEN ''.
        temp56 = `networkgraph`.
      WHEN OTHERS.
        temp56 = ns.
    ENDCASE.
    result = _generic( name = `attributes`
                       ns   = temp56 ).
  ENDMETHOD.

  METHOD avatar.
    result = me.
    DATA temp57 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp57.
    DATA temp58 LIKE LINE OF temp57.
    temp58-n = `src`.
    temp58-v = src.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `class`.
    temp58-v = class.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `ariaHasPopup`.
    temp58-v = ariahaspopup.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `backgroundColor`.
    temp58-v = backgroundcolor.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `badgeIcon`.
    temp58-v = badgeicon.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `badgeTooltip`.
    temp58-v = badgetooltip.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `badgeValueState`.
    temp58-v = badgevaluestate.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `customDisplaySize`.
    temp58-v = customdisplaysize.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `customFontSize`.
    temp58-v = customfontsize.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `displayShape`.
    temp58-v = displayshape.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `fallbackIcon`.
    temp58-v = fallbackicon.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `imageFitType`.
    temp58-v = imagefittype.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `initials`.
    temp58-v = initials.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `showBorder`.
    temp58-v = z2ui5_cl_util=>boolean_abap_2_json( showborder ).
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `decorative`.
    temp58-v = z2ui5_cl_util=>boolean_abap_2_json( decorative ).
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `enabled`.
    temp58-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `displaySize`.
    temp58-v = displaysize.
    INSERT temp58 INTO TABLE temp57.
    temp58-n = `press`.
    temp58-v = press.
    INSERT temp58 INTO TABLE temp57.
    _generic( name   = `Avatar`
              ns     = ns
              t_prop = temp57 ).
  ENDMETHOD.

  METHOD avatar_group.
    DATA temp59 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp59.
    DATA temp60 LIKE LINE OF temp59.
    temp60-n = `id`.
    temp60-v = id.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `avatarCustomDisplaySize`.
    temp60-v = avatarCustomDisplaySize.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `avatarCustomDispavatarCustomFontSizelaySize`.
    temp60-v = avatarCustomFontSize.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `avatarDisplaySize`.
    temp60-v = avatarDisplaySize.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `blocked`.
    temp60-v = z2ui5_cl_util=>boolean_abap_2_json( blocked ).
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `busy`.
    temp60-v = z2ui5_cl_util=>boolean_abap_2_json( busy ).
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `busyIndicatorDelay`.
    temp60-v = busyIndicatorDelay.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `busyIndicatorSize`.
    temp60-v = busyIndicatorSize.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `fieldGroupIds`.
    temp60-v = fieldGroupIds.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `groupType`.
    temp60-v = groupType.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `visible`.
    temp60-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `tooltip`.
    temp60-v = tooltip.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `items`.
    temp60-v = items.
    INSERT temp60 INTO TABLE temp59.
    temp60-n = `press`.
    temp60-v = press.
    INSERT temp60 INTO TABLE temp59.
    result = _generic( name   = `AvatarGroup`
                       ns     = `f`
                       t_prop = temp59 ).
  ENDMETHOD.

  METHOD avatar_group_item.
    result = me.
    DATA temp61 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp61.
    DATA temp62 LIKE LINE OF temp61.
    temp62-n = `id`.
    temp62-v = id.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `busy`.
    temp62-v = busy.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `busyIndicatorDelay`.
    temp62-v = busyIndicatorDelay.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `busyIndicatorSize`.
    temp62-v = busyIndicatorSize.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `fallbackIcon`.
    temp62-v = fallbackIcon.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `fieldGroupIds`.
    temp62-v = fieldGroupIds.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `initials`.
    temp62-v = initials.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `src`.
    temp62-v = src.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `visible`.
    temp62-v = visible.
    INSERT temp62 INTO TABLE temp61.
    temp62-n = `tooltip`.
    temp62-v = tooltip.
    INSERT temp62 INTO TABLE temp61.
    _generic( name   = `AvatarGroupItem`
                       ns     = `f`
                       t_prop = temp61 ).
  ENDMETHOD.

  METHOD axis_time_strategy.
    result = _generic( name = `axisTimeStrategy`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD badge.
    result = _generic( `badge` ).
  ENDMETHOD.

  METHOD badge_custom_data.
    result = me.
    DATA temp63 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp63.
    DATA temp64 LIKE LINE OF temp63.
    temp64-n = `key`.
    temp64-v = key.
    INSERT temp64 INTO TABLE temp63.
    temp64-n = `value`.
    temp64-v = value.
    INSERT temp64 INTO TABLE temp63.
    temp64-n = `visible`.
    temp64-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp64 INTO TABLE temp63.
    _generic( name   = `BadgeCustomData`
              t_prop = temp63 ).
  ENDMETHOD.

  METHOD bar.
    result = _generic( `Bar` ).
  ENDMETHOD.

  METHOD barcode_scanner_button.
    DATA temp65 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp65.
    DATA temp66 LIKE LINE OF temp65.
    temp66-n = `id`.
    temp66-v = id.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `scanSuccess`.
    temp66-v = scansuccess.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `scanFail`.
    temp66-v = scanfail.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `inputLiveUpdate`.
    temp66-v = inputliveupdate.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `dialogTitle`.
    temp66-v = dialogtitle.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `disableBarcodeInputDialog`.
    temp66-v = disableBarcodeInputDialog.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `frameRate`.
    temp66-v = frameRate.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `keepCameraScan`.
    temp66-v = keepCameraScan.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `preferFrontCamera`.
    temp66-v = preferFrontCamera.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `provideFallback`.
    temp66-v = provideFallback.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `width`.
    temp66-v = width.
    INSERT temp66 INTO TABLE temp65.
    temp66-n = `zoom`.
    temp66-v = zoom.
    INSERT temp66 INTO TABLE temp65.
    result = _generic( name   = `BarcodeScannerButton`
                       ns     = 'ndc'
                       t_prop = temp65 ).
  ENDMETHOD.

  METHOD bars.
    result = _generic( name = `bars`
                       ns   = `mchart` ).
  ENDMETHOD.

  METHOD base_rectangle.

    DATA temp67 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp67.
    DATA temp68 LIKE LINE OF temp67.
    temp68-n = `time`.
    temp68-v = time.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `endTime`.
    temp68-v = endtime.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `selectable`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( selectable ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `selectedFill`.
    temp68-v = selectedfill.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `fill`.
    temp68-v = fill.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `height`.
    temp68-v = height.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `title`.
    temp68-v = title.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `animationSettings`.
    temp68-v = animationsettings.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `alignShape`.
    temp68-v = alignshape.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `color`.
    temp68-v = color.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `fontSize`.
    temp68-v = fontsize.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `connectable`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( connectable ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `fontFamily`.
    temp68-v = fontfamily.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `filter`.
    temp68-v = filter.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `transform`.
    temp68-v = transform.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `countInBirdEye`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( countinbirdeye ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `fontWeight`.
    temp68-v = fontweight.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `showTitle`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( showtitle ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `selected`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `resizable`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `horizontalTextAlignment`.
    temp68-v = horizontaltextalignment.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `shapeId`.
    temp68-v = shapeid.
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `highlighted`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( highlighted ).
    INSERT temp68 INTO TABLE temp67.
    temp68-n = `highlightable`.
    temp68-v = z2ui5_cl_util=>boolean_abap_2_json( highlightable ).
    INSERT temp68 INTO TABLE temp67.
    result = _generic(
        name   = `BaseRectangle`
        ns     = 'gantt'
        t_prop = temp67 ).
  ENDMETHOD.

  METHOD begin_button.

    result = _generic( `beginButton` ).

  ENDMETHOD.

  METHOD begin_column_pages.
    " todo, implement method
    result = _generic( name = `beginColumnPages`
                       ns   = `f` ).

  ENDMETHOD.

  METHOD blocks.
    result = _generic( name = `blocks`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD more_blocks.
    result = _generic( name = `moreBlocks`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD block_layout.
    DATA temp69 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp69.
    DATA temp70 LIKE LINE OF temp69.
    temp70-n = `background`.
    temp70-v = background.
    INSERT temp70 INTO TABLE temp69.
    temp70-n = `id`.
    temp70-v = id.
    INSERT temp70 INTO TABLE temp69.
    result = _generic( name   = `BlockLayout`
                       ns     = `layout`
                       t_prop = temp69 ).
  ENDMETHOD.

  METHOD block_layout_cell.
    DATA temp71 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp71.
    DATA temp72 LIKE LINE OF temp71.
    temp72-n = `backgroundColorSet`.
    temp72-v = backgroundcolorset.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `backgroundColorShade`.
    temp72-v = backgroundcolorshade.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `title`.
    temp72-v = title.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `titleAlignment`.
    temp72-v = titlealignment.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `width`.
    temp72-v = width.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `class`.
    temp72-v = class.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `id`.
    temp72-v = id.
    INSERT temp72 INTO TABLE temp71.
    temp72-n = `titleLevel`.
    temp72-v = titlelevel.
    INSERT temp72 INTO TABLE temp71.
    result = _generic( name   = `BlockLayoutCell`
                       ns     = `layout`
                       t_prop = temp71 ).
  ENDMETHOD.

  METHOD block_layout_row.
    DATA temp73 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp73.
    DATA temp74 LIKE LINE OF temp73.
    temp74-n = `rowColorSet`.
    temp74-v = rowcolorset.
    INSERT temp74 INTO TABLE temp73.
    temp74-n = `id`.
    temp74-v = id.
    INSERT temp74 INTO TABLE temp73.
    result = _generic( name   = `BlockLayoutRow`
                       ns     = `layout`
                       t_prop = temp73 ).
  ENDMETHOD.

  METHOD bullet_micro_chart.
    result = me.
    DATA temp75 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp75.
    DATA temp76 LIKE LINE OF temp75.
    temp76-n = `actualValueLabel`.
    temp76-v = actualvaluelabel.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `press`.
    temp76-v = press.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `size`.
    temp76-v = size.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `height`.
    temp76-v = height.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `width`.
    temp76-v = width.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `deltaValueLabel`.
    temp76-v = deltavaluelabel.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `maxValue`.
    temp76-v = maxvalue.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `minValue`.
    temp76-v = minvalue.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `mode`.
    temp76-v = mode.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `scale`.
    temp76-v = scale.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `targetValue`.
    temp76-v = targetvalue.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `targetValueLabel`.
    temp76-v = targetvaluelabel.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `scaleColor`.
    temp76-v = scalecolor.
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `hideOnNoData`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showActualValue`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( showactualvalue ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showActualValueInDeltaMode`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( savidm ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showDeltaValue`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( showdeltavalue ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showTargetValue`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( showtargetvalue ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showThresholds`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( showthresholds ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `showValueMarker`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluemarker ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `smallRangeAllowed`.
    temp76-v = z2ui5_cl_util=>boolean_abap_2_json( smallrangeallowed ).
    INSERT temp76 INTO TABLE temp75.
    temp76-n = `forecastValue`.
    temp76-v = forecastvalue.
    INSERT temp76 INTO TABLE temp75.
    _generic(
        name   = `BulletMicroChart`
        ns     = `mchart`
        t_prop = temp75 ).
  ENDMETHOD.

  METHOD busy_indicator.
    DATA temp77 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp77.
    DATA temp78 LIKE LINE OF temp77.
    temp78-n = `id`.
    temp78-v = id.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `class`.
    temp78-v = class.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `customIcon`.
    temp78-v = customicon.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `customIconHeight`.
    temp78-v = customiconheight.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `customIconRotationSpeed`.
    temp78-v = customiconrotationspeed.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `customIconWidth`.
    temp78-v = customiconwidth.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `size`.
    temp78-v = size.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `text`.
    temp78-v = text.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `textDirection`.
    temp78-v = textdirection.
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `customIconDensityAware`.
    temp78-v = z2ui5_cl_util=>boolean_abap_2_json( customicondensityaware ).
    INSERT temp78 INTO TABLE temp77.
    temp78-n = `visible`.
    temp78-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp78 INTO TABLE temp77.
    result = _generic(
        name   = `BusyIndicator`
        t_prop = temp77 ).
  ENDMETHOD.

  METHOD button.

    result = me.
    DATA temp79 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp79.
    DATA temp80 LIKE LINE OF temp79.
    temp80-n = `press`.
    temp80-v = press.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `text`.
    temp80-v = text.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `enabled`.
    temp80-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `visible`.
    temp80-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `iconDensityAware`.
    temp80-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `iconFirst`.
    temp80-v = z2ui5_cl_util=>boolean_abap_2_json( iconfirst ).
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `icon`.
    temp80-v = icon.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `type`.
    temp80-v = type.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `id`.
    temp80-v = id.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `width`.
    temp80-v = width.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `tooltip`.
    temp80-v = tooltip.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `textDirection`.
    temp80-v = textdirection.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `accessibleRole`.
    temp80-v = accessiblerole.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `activeIcon`.
    temp80-v = activeicon.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `ariaHasPopup`.
    temp80-v = ariahaspopup.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `class`.
    temp80-v = class.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `ariaLabelledBy`.
    temp80-v = arialabelledby.
    INSERT temp80 INTO TABLE temp79.
    temp80-n = `ariaDescribedBy`.
    temp80-v = ariadescribedby.
    INSERT temp80 INTO TABLE temp79.
    _generic( name   = `Button`
              ns     = ns
              t_prop = temp79 ).
  ENDMETHOD.

  METHOD buttons.
    result = _generic( `buttons` ).
  ENDMETHOD.

  METHOD calendar_appointment.
    DATA temp81 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp81.
    DATA temp82 LIKE LINE OF temp81.
    temp82-n = `startDate`.
    temp82-v = startdate.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `endDate`.
    temp82-v = enddate.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `icon`.
    temp82-v = icon.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `title`.
    temp82-v = title.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `text`.
    temp82-v = text.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `type`.
    temp82-v = type.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `key`.
    temp82-v = key.
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `selected`.
    temp82-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp82 INTO TABLE temp81.
    temp82-n = `tentative`.
    temp82-v = z2ui5_cl_util=>boolean_abap_2_json( tentative ).
    INSERT temp82 INTO TABLE temp81.
    result = _generic(
        name   = `CalendarAppointment`
        ns     = `u`
        t_prop = temp81 ).
  ENDMETHOD.

  METHOD calendar_legend_item.
    DATA temp83 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp83.
    DATA temp84 LIKE LINE OF temp83.
    temp84-n = `text`.
    temp84-v = text.
    INSERT temp84 INTO TABLE temp83.
    temp84-n = `type`.
    temp84-v = type.
    INSERT temp84 INTO TABLE temp83.
    temp84-n = `tooltip`.
    temp84-v = tooltip.
    INSERT temp84 INTO TABLE temp83.
    temp84-n = `color`.
    temp84-v = color.
    INSERT temp84 INTO TABLE temp83.
    result = _generic( name   = `CalendarLegendItem`
                       t_prop = temp83 ).

  ENDMETHOD.

  METHOD card.
    DATA temp85 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp85.
    DATA temp86 LIKE LINE OF temp85.
    temp86-n = `id`.
    temp86-v = id.
    INSERT temp86 INTO TABLE temp85.
    temp86-n = `class`.
    temp86-v = class.
    INSERT temp86 INTO TABLE temp85.
    temp86-n = `headerPosition`.
    temp86-v = headerposition.
    INSERT temp86 INTO TABLE temp85.
    temp86-n = `height`.
    temp86-v = height.
    INSERT temp86 INTO TABLE temp85.
    temp86-n = `width`.
    temp86-v = width.
    INSERT temp86 INTO TABLE temp85.
    temp86-n = `visible`.
    temp86-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp86 INTO TABLE temp85.
    result = _generic( name   = `Card`
                       ns     = `f`
                       t_prop = temp85 ).
  ENDMETHOD.

  METHOD card_header.
    DATA temp87 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp87.
    DATA temp88 LIKE LINE OF temp87.
    temp88-n = `id`.
    temp88-v = id.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `class`.
    temp88-v = class.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `dataTimestamp`.
    temp88-v = datatimestamp.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconAlt`.
    temp88-v = iconalt.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconBackgroundColor`.
    temp88-v = iconbackgroundcolor.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconDisplayShape`.
    temp88-v = icondisplayshape.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconInitials`.
    temp88-v = iconinitials.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconSize`.
    temp88-v = iconsize.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconSrc`.
    temp88-v = iconsrc.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `statusText`.
    temp88-v = statustext.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `statusVisible`.
    temp88-v = statusvisible.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `subtitle`.
    temp88-v = subtitle.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `subtitleMaxLines`.
    temp88-v = subtitlemaxlines.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `title`.
    temp88-v = title.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `press`.
    temp88-v = press.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `titleMaxLines`.
    temp88-v = titlemaxlines.
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `iconVisible`.
    temp88-v = z2ui5_cl_util=>boolean_abap_2_json( iconvisible ).
    INSERT temp88 INTO TABLE temp87.
    temp88-n = `visible`.
    temp88-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp88 INTO TABLE temp87.
    result = _generic( name   = `Header`
                       ns     = `card`
                       t_prop = temp87 ).
  ENDMETHOD.

  METHOD carousel.

    DATA temp89 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp89.
    DATA temp90 LIKE LINE OF temp89.
    temp90-n = `loop`.
    temp90-v = z2ui5_cl_util=>boolean_abap_2_json( loop ).
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `class`.
    temp90-v = class.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `height`.
    temp90-v = height.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `id`.
    temp90-v = id.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `arrowsPlacement`.
    temp90-v = arrowsplacement.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `backgroundDesign`.
    temp90-v = backgrounddesign.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `pageIndicatorBackgroundDesign`.
    temp90-v = pageindicatorbackgrounddesign.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `pageIndicatorBorderDesign`.
    temp90-v = pageindicatorborderdesign.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `pageIndicatorPlacement`.
    temp90-v = pageindicatorplacement.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `width`.
    temp90-v = width.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `showPageIndicator`.
    temp90-v = showpageindicator.
    INSERT temp90 INTO TABLE temp89.
    temp90-n = `visible`.
    temp90-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp90 INTO TABLE temp89.
    result = _generic( name   = `Carousel`
                       t_prop = temp89 ).

  ENDMETHOD.

  METHOD carousel_layout.
    DATA temp91 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp91.
    DATA temp92 LIKE LINE OF temp91.
    temp92-n = `visiblePagesCount`.
    temp92-v = visiblepagescount.
    INSERT temp92 INTO TABLE temp91.
    result = _generic( name   = `CarouselLayout`
                       t_prop = temp91 ).
  ENDMETHOD.

  METHOD cells.
    result = _generic( `cells` ).
  ENDMETHOD.

  METHOD checkbox.

    result = me.
    DATA temp93 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp93.
    DATA temp94 LIKE LINE OF temp93.
    temp94-n = `text`.
    temp94-v = text.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `id`.
    temp94-v = id.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `class`.
    temp94-v = class.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `name`.
    temp94-v = name.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `selected`.
    temp94-v = selected.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `textAlign`.
    temp94-v = textalign.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `textDirection`.
    temp94-v = textdirection.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `valueState`.
    temp94-v = valuestate.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `width`.
    temp94-v = width.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `activeHandling`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( activehandling ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `enabled`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `visible`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `displayOnly`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( displayonly ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `editable`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `partiallySelected`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( partiallyselected ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `useEntireWidth`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( useentirewidth ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `wrapping`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `select`.
    temp94-v = select.
    INSERT temp94 INTO TABLE temp93.
    temp94-n = `required`.
    temp94-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp94 INTO TABLE temp93.
    _generic( name   = `CheckBox`
              t_prop = temp93 ).
  ENDMETHOD.

  METHOD code_editor.
    result = me.
    DATA temp95 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp95.
    DATA temp96 LIKE LINE OF temp95.
    temp96-n = `value`.
    temp96-v = value.
    INSERT temp96 INTO TABLE temp95.
    temp96-n = `type`.
    temp96-v = type.
    INSERT temp96 INTO TABLE temp95.
    temp96-n = `editable`.
    temp96-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp96 INTO TABLE temp95.
    temp96-n = `height`.
    temp96-v = height.
    INSERT temp96 INTO TABLE temp95.
    temp96-n = `width`.
    temp96-v = width.
    INSERT temp96 INTO TABLE temp95.
    _generic( name   = `CodeEditor`
              ns     = `editor`
              t_prop = temp95 ).
  ENDMETHOD.

  METHOD column.
    DATA temp97 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp97.
    DATA temp98 LIKE LINE OF temp97.
    temp98-n = `width`.
    temp98-v = width.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `minScreenWidth`.
    temp98-v = minscreenwidth.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `hAlign`.
    temp98-v = halign.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `headerMenu`.
    temp98-v = headermenu.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `autoPopinWidth`.
    temp98-v = autopopinwidth.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `vAlign`.
    temp98-v = valign.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `importance`.
    temp98-v = importance.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `mergeFunctionName`.
    temp98-v = mergefunctionname.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `popinDisplay`.
    temp98-v = popindisplay.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `sortIndicator`.
    temp98-v = sortindicator.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `styleClass`.
    temp98-v = styleclass.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `id`.
    temp98-v = id.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `class`.
    temp98-v = class.
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `mergeDuplicates`.
    temp98-v = z2ui5_cl_util=>boolean_abap_2_json( mergeduplicates ).
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `visible`.
    temp98-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp98 INTO TABLE temp97.
    temp98-n = `demandPopin`.
    temp98-v = z2ui5_cl_util=>boolean_abap_2_json( demandpopin ).
    INSERT temp98 INTO TABLE temp97.
    result = _generic(
                 name   = `Column`
                 t_prop = temp97 ).
  ENDMETHOD.

  METHOD columns.
    result = _generic( ns   = ns
                       name = `columns` ).
  ENDMETHOD.

  METHOD column_element_data.
    DATA temp99 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp99.
    DATA temp100 LIKE LINE OF temp99.
    temp100-n = `cellsLarge`.
    temp100-v = cellslarge.
    INSERT temp100 INTO TABLE temp99.
    temp100-n = `cellsSmall`.
    temp100-v = cellssmall.
    INSERT temp100 INTO TABLE temp99.
    result = _generic( name   = `ColumnElementData`
                       ns     = `form`
                       t_prop = temp99 ).
  ENDMETHOD.

  METHOD column_list_item.
    DATA temp101 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp101.
    DATA temp102 LIKE LINE OF temp101.
    temp102-n = `vAlign`.
    temp102-v = valign.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `id`.
    temp102-v = id.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `selected`.
    temp102-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `unread`.
    temp102-v = z2ui5_cl_util=>boolean_abap_2_json( unread ).
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `visible`.
    temp102-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `type`.
    temp102-v = type.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `counter`.
    temp102-v = counter.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `highlight`.
    temp102-v = highlight.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `highlightText`.
    temp102-v = highlighttext.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `detailPress`.
    temp102-v = detailpress.
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `navigated`.
    temp102-v = z2ui5_cl_util=>boolean_abap_2_json( navigated ).
    INSERT temp102 INTO TABLE temp101.
    temp102-n = `press`.
    temp102-v = press.
    INSERT temp102 INTO TABLE temp101.
    result = _generic( name   = `ColumnListItem`
                       t_prop = temp101 ).
  ENDMETHOD.

  METHOD action_list_item.
    DATA temp103 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp103.
    DATA temp104 LIKE LINE OF temp103.
    temp104-n = `id`.
    temp104-v = id.
    INSERT temp104 INTO TABLE temp103.
    temp104-n = `text`.
    temp104-v = text.
    INSERT temp104 INTO TABLE temp103.
    result = _generic( name   = `ActionListItem`
                       t_prop = temp103 ).
  ENDMETHOD.

  METHOD column_menu.
    DATA temp105 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp105.
    DATA temp106 LIKE LINE OF temp105.
    temp106-n = `id`.
    temp106-v = id.
    INSERT temp106 INTO TABLE temp105.
    temp106-n = `class`.
    temp106-v = class.
    INSERT temp106 INTO TABLE temp105.
    temp106-n = `afterClose`.
    temp106-v = afterclose.
    INSERT temp106 INTO TABLE temp105.
    temp106-n = `beforeOpen`.
    temp106-v = beforeopen.
    INSERT temp106 INTO TABLE temp105.
    temp106-n = `visible`.
    temp106-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp106 INTO TABLE temp105.
    result = _generic( name   = `Menu`
                       ns     = `columnmenu`
                       t_prop = temp105 ).
  ENDMETHOD.

  METHOD column_menu_action_item.
    DATA temp107 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp107.
    DATA temp108 LIKE LINE OF temp107.
    temp108-n = `id`.
    temp108-v = id.
    INSERT temp108 INTO TABLE temp107.
    temp108-n = `class`.
    temp108-v = class.
    INSERT temp108 INTO TABLE temp107.
    temp108-n = `icon`.
    temp108-v = icon.
    INSERT temp108 INTO TABLE temp107.
    temp108-n = `label`.
    temp108-v = label.
    INSERT temp108 INTO TABLE temp107.
    temp108-n = `press`.
    temp108-v = press.
    INSERT temp108 INTO TABLE temp107.
    temp108-n = `visible`.
    temp108-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp108 INTO TABLE temp107.
    result = _generic( name   = `ActionItem`
                       ns     = `columnmenu`
                       t_prop = temp107 ).
  ENDMETHOD.

  METHOD column_menu_item.
    DATA temp109 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp109.
    DATA temp110 LIKE LINE OF temp109.
    temp110-n = `id`.
    temp110-v = id.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `class`.
    temp110-v = class.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `icon`.
    temp110-v = icon.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `label`.
    temp110-v = label.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `cancel`.
    temp110-v = cancel.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `confirm`.
    temp110-v = confirm.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `reset`.
    temp110-v = reset.
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `resetButtonEnabled`.
    temp110-v = z2ui5_cl_util=>boolean_abap_2_json( resetbuttonenabled ).
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `showCancelButton`.
    temp110-v = z2ui5_cl_util=>boolean_abap_2_json( showcancelbutton ).
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `showConfirmButton`.
    temp110-v = z2ui5_cl_util=>boolean_abap_2_json( showconfirmbutton ).
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `showResetButton`.
    temp110-v = z2ui5_cl_util=>boolean_abap_2_json( showresetbutton ).
    INSERT temp110 INTO TABLE temp109.
    temp110-n = `visible`.
    temp110-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp110 INTO TABLE temp109.
    result = _generic( name   = `Item`
                       ns     = `columnmenu`
                       t_prop = temp109 ).
  ENDMETHOD.

  METHOD column_menu_quick_action.
    DATA temp111 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp111.
    DATA temp112 LIKE LINE OF temp111.
    temp112-n = `id`.
    temp112-v = id.
    INSERT temp112 INTO TABLE temp111.
    temp112-n = `class`.
    temp112-v = class.
    INSERT temp112 INTO TABLE temp111.
    temp112-n = `category`.
    temp112-v = category.
    INSERT temp112 INTO TABLE temp111.
    temp112-n = `label`.
    temp112-v = label.
    INSERT temp112 INTO TABLE temp111.
    temp112-n = `visible`.
    temp112-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp112 INTO TABLE temp111.
    result = _generic( name   = `QuickAction`
                       ns     = `columnmenu`
                       t_prop = temp111 ).
  ENDMETHOD.

  METHOD column_menu_quick_action_item.
    DATA temp113 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp113.
    DATA temp114 LIKE LINE OF temp113.
    temp114-n = `id`.
    temp114-v = id.
    INSERT temp114 INTO TABLE temp113.
    temp114-n = `class`.
    temp114-v = class.
    INSERT temp114 INTO TABLE temp113.
    temp114-n = `key`.
    temp114-v = key.
    INSERT temp114 INTO TABLE temp113.
    temp114-n = `label`.
    temp114-v = label.
    INSERT temp114 INTO TABLE temp113.
    temp114-n = `visible`.
    temp114-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp114 INTO TABLE temp113.
    result = _generic( name   = `QuickActionItem`
                       ns     = `columnmenu`
                       t_prop = temp113 ).
  ENDMETHOD.

  METHOD column_menu_quick_group.
    DATA temp115 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp115.
    DATA temp116 LIKE LINE OF temp115.
    temp116-n = `id`.
    temp116-v = id.
    INSERT temp116 INTO TABLE temp115.
    temp116-n = `class`.
    temp116-v = class.
    INSERT temp116 INTO TABLE temp115.
    temp116-n = `change`.
    temp116-v = change.
    INSERT temp116 INTO TABLE temp115.
    temp116-n = `visible`.
    temp116-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp116 INTO TABLE temp115.
    result = _generic( name   = `QuickGroup`
                       ns     = `columnmenu`
                       t_prop = temp115 ).
  ENDMETHOD.

  METHOD column_menu_quick_group_item.
    DATA temp117 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp117.
    DATA temp118 LIKE LINE OF temp117.
    temp118-n = `id`.
    temp118-v = id.
    INSERT temp118 INTO TABLE temp117.
    temp118-n = `class`.
    temp118-v = class.
    INSERT temp118 INTO TABLE temp117.
    temp118-n = `key`.
    temp118-v = key.
    INSERT temp118 INTO TABLE temp117.
    temp118-n = `label`.
    temp118-v = label.
    INSERT temp118 INTO TABLE temp117.
    temp118-n = `grouped`.
    temp118-v = z2ui5_cl_util=>boolean_abap_2_json( grouped ).
    INSERT temp118 INTO TABLE temp117.
    temp118-n = `visible`.
    temp118-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp118 INTO TABLE temp117.
    result = _generic( name   = `QuickGroupItem`
                       ns     = `columnmenu`
                       t_prop = temp117 ).
  ENDMETHOD.

  METHOD column_menu_quick_sort.
    DATA temp119 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp119.
    DATA temp120 LIKE LINE OF temp119.
    temp120-n = `id`.
    temp120-v = id.
    INSERT temp120 INTO TABLE temp119.
    temp120-n = `class`.
    temp120-v = class.
    INSERT temp120 INTO TABLE temp119.
    temp120-n = `change`.
    temp120-v = change.
    INSERT temp120 INTO TABLE temp119.
    temp120-n = `visible`.
    temp120-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp120 INTO TABLE temp119.
    result = _generic( name   = `QuickSort`
                       ns     = `columnmenu`
                       t_prop = temp119 ).
  ENDMETHOD.

  METHOD column_menu_quick_sort_item.
    DATA temp121 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp121.
    DATA temp122 LIKE LINE OF temp121.
    temp122-n = `id`.
    temp122-v = id.
    INSERT temp122 INTO TABLE temp121.
    temp122-n = `class`.
    temp122-v = class.
    INSERT temp122 INTO TABLE temp121.
    temp122-n = `key`.
    temp122-v = key.
    INSERT temp122 INTO TABLE temp121.
    temp122-n = `label`.
    temp122-v = label.
    INSERT temp122 INTO TABLE temp121.
    temp122-n = `sortOrder`.
    temp122-v = sortorder.
    INSERT temp122 INTO TABLE temp121.
    temp122-n = `visible`.
    temp122-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp122 INTO TABLE temp121.
    result = _generic( name   = `QuickSortItem`
                       ns     = `columnmenu`
                       t_prop = temp121 ).
  ENDMETHOD.

  METHOD column_menu_quick_total.
    DATA temp123 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp123.
    DATA temp124 LIKE LINE OF temp123.
    temp124-n = `id`.
    temp124-v = id.
    INSERT temp124 INTO TABLE temp123.
    temp124-n = `class`.
    temp124-v = class.
    INSERT temp124 INTO TABLE temp123.
    temp124-n = `change`.
    temp124-v = change.
    INSERT temp124 INTO TABLE temp123.
    temp124-n = `visible`.
    temp124-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp124 INTO TABLE temp123.
    result = _generic( name   = `QuickTotal`
                       ns     = `columnmenu`
                       t_prop = temp123 ).
  ENDMETHOD.

  METHOD column_menu_quick_total_item.
    DATA temp125 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp125.
    DATA temp126 LIKE LINE OF temp125.
    temp126-n = `id`.
    temp126-v = id.
    INSERT temp126 INTO TABLE temp125.
    temp126-n = `class`.
    temp126-v = class.
    INSERT temp126 INTO TABLE temp125.
    temp126-n = `key`.
    temp126-v = key.
    INSERT temp126 INTO TABLE temp125.
    temp126-n = `label`.
    temp126-v = label.
    INSERT temp126 INTO TABLE temp125.
    temp126-n = `totaled`.
    temp126-v = z2ui5_cl_util=>boolean_abap_2_json( totaled ).
    INSERT temp126 INTO TABLE temp125.
    temp126-n = `visible`.
    temp126-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp126 INTO TABLE temp125.
    result = _generic( name   = `QuickTotalItem`
                       ns     = `columnmenu`
                       t_prop = temp125 ).
  ENDMETHOD.

  METHOD column_micro_chart.
    result = me.
    DATA temp127 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp127.
    DATA temp128 LIKE LINE OF temp127.
    temp128-n = `width`.
    temp128-v = width.
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `press`.
    temp128-v = press.
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `size`.
    temp128-v = size.
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `alignContent`.
    temp128-v = aligncontent.
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `hideOnNoData`.
    temp128-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `allowColumnLabels`.
    temp128-v = z2ui5_cl_util=>boolean_abap_2_json( allowcolumnlabels ).
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `showBottomLabels`.
    temp128-v = z2ui5_cl_util=>boolean_abap_2_json( showbottomlabels ).
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `showTopLabels`.
    temp128-v = z2ui5_cl_util=>boolean_abap_2_json( showtoplabels ).
    INSERT temp128 INTO TABLE temp127.
    temp128-n = `height`.
    temp128-v = height.
    INSERT temp128 INTO TABLE temp127.
    _generic(
        name   = `ColumnMicroChart`
        ns     = `mchart`
        t_prop = temp127 ).
  ENDMETHOD.

  METHOD column_micro_chart_data.
    result = me.
    DATA temp129 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp129.
    DATA temp130 LIKE LINE OF temp129.
    temp130-n = `color`.
    temp130-v = color.
    INSERT temp130 INTO TABLE temp129.
    temp130-n = `displayValue`.
    temp130-v = displayvalue.
    INSERT temp130 INTO TABLE temp129.
    temp130-n = `label`.
    temp130-v = label.
    INSERT temp130 INTO TABLE temp129.
    temp130-n = `value`.
    temp130-v = value.
    INSERT temp130 INTO TABLE temp129.
    temp130-n = `press`.
    temp130-v = press.
    INSERT temp130 INTO TABLE temp129.
    _generic( name   = `ColumnMicroChartData`
              ns     = `mchart`
              t_prop = temp129 ).
  ENDMETHOD.

  METHOD combobox.
    DATA temp131 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp131.
    DATA temp132 LIKE LINE OF temp131.
    temp132-n = `showClearIcon`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( showclearicon ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `selectedKey`.
    temp132-v = selectedkey.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `items`.
    temp132-v = items.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `id`.
    temp132-v = id.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `class`.
    temp132-v = class.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `selectionchange`.
    temp132-v = selectionchange.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `selectedItem`.
    temp132-v = selecteditem.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `selectedItemId`.
    temp132-v = selecteditemid.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `name`.
    temp132-v = name.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `value`.
    temp132-v = value.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `valueState`.
    temp132-v = valuestate.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `valueStateText`.
    temp132-v = valuestatetext.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `textAlign`.
    temp132-v = textalign.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `showSecondaryValues`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( showsecondaryvalues ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `visible`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `showValueStateMessage`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `showButton`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( showbutton ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `required`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `editable`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `enabled`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `filterSecondaryValues`.
    temp132-v = z2ui5_cl_util=>boolean_abap_2_json( filtersecondaryvalues ).
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `width`.
    temp132-v = width.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `placeholder`.
    temp132-v = placeholder.
    INSERT temp132 INTO TABLE temp131.
    temp132-n = `change`.
    temp132-v = change.
    INSERT temp132 INTO TABLE temp131.
    result = _generic(
        name   = `ComboBox`
        t_prop = temp131 ).

  ENDMETHOD.

  METHOD comparison_micro_chart.
    DATA temp133 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp133.
    DATA temp134 LIKE LINE OF temp133.
    temp134-n = `colorPalette`.
    temp134-v = colorpalette.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `press`.
    temp134-v = press.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `size`.
    temp134-v = size.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `height`.
    temp134-v = height.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `maxValue`.
    temp134-v = maxvalue.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `minValue`.
    temp134-v = minvalue.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `scale`.
    temp134-v = scale.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `width`.
    temp134-v = width.
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `hideOnNoData`.
    temp134-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `shrinkable`.
    temp134-v = z2ui5_cl_util=>boolean_abap_2_json( shrinkable ).
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `visible`.
    temp134-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp134 INTO TABLE temp133.
    temp134-n = `view`.
    temp134-v = view.
    INSERT temp134 INTO TABLE temp133.
    result = _generic( name   = `ComparisonMicroChart`
                      ns     = `mchart`
                      t_prop = temp133 ).
  ENDMETHOD.

  METHOD comparison_micro_chart_data.
    DATA temp135 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp135.
    DATA temp136 LIKE LINE OF temp135.
    temp136-n = `color`.
    temp136-v = color.
    INSERT temp136 INTO TABLE temp135.
    temp136-n = `press`.
    temp136-v = press.
    INSERT temp136 INTO TABLE temp135.
    temp136-n = `displayValue`.
    temp136-v = displayValue.
    INSERT temp136 INTO TABLE temp135.
    temp136-n = `title`.
    temp136-v = title.
    INSERT temp136 INTO TABLE temp135.
    temp136-n = `value`.
    temp136-v = value.
    INSERT temp136 INTO TABLE temp135.
    result = _generic( name   = `ComparisonMicroChartData`
                       ns     = `mchart`
                       t_prop = temp135 ).
  ENDMETHOD.

  METHOD constructor.

  ENDMETHOD.

  METHOD container_content.

    DATA temp137 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp137.
    DATA temp138 LIKE LINE OF temp137.
    temp138-n = `id`.
    temp138-v = id.
    INSERT temp138 INTO TABLE temp137.
    temp138-n = `title`.
    temp138-v = title.
    INSERT temp138 INTO TABLE temp137.
    temp138-n = `icon`.
    temp138-v = icon.
    INSERT temp138 INTO TABLE temp137.
    result = _generic( name   = `ContainerContent`
                       ns     = `vk`
                       t_prop = temp137 ).

  ENDMETHOD.

  METHOD container_toolbar.

    DATA temp139 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp139.
    DATA temp140 LIKE LINE OF temp139.
    temp140-n = `showSearchButton`.
    temp140-v = showsearchbutton.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `alignCustomContentToRight`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( aligncustomcontenttoright ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `findMode`.
    temp140-v = findmode.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `infoOfSelectItems`.
    temp140-v = infoofselectitems.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `findbuttonpress`.
    temp140-v = findbuttonpress.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `showBirdEyeButton`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( showbirdeyebutton ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `showDisplayTypeButton`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( showdisplaytypebutton ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `showLegendButton`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( showlegendbutton ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `showSettingButton`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( showsettingbutton ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `showTimeZoomControl`.
    temp140-v = z2ui5_cl_util=>boolean_abap_2_json( showtimezoomcontrol ).
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `stepCountOfSlider`.
    temp140-v = stepcountofslider.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `zoomControlType`.
    temp140-v = zoomcontroltype.
    INSERT temp140 INTO TABLE temp139.
    temp140-n = `zoomLevel`.
    temp140-v = zoomlevel.
    INSERT temp140 INTO TABLE temp139.
    result = _generic(
        name   = `ContainerToolbar`
        ns     = `gantt`
        t_prop = temp139 ).
  ENDMETHOD.

  METHOD content.

    result = _generic( ns   = ns
                       name = `content` ).

  ENDMETHOD.

  METHOD content_left.
    result = _generic( `contentLeft` ).
  ENDMETHOD.

  METHOD content_middle.
    result = _generic( `contentMiddle` ).
  ENDMETHOD.

  METHOD content_right.
    result = _generic( `contentRight` ).
  ENDMETHOD.

  METHOD core_custom_data.
    result = me.
    DATA temp141 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp141.
    DATA temp142 LIKE LINE OF temp141.
    temp142-n = `value`.
    temp142-v = value.
    INSERT temp142 INTO TABLE temp141.
    temp142-n = `key`.
    temp142-v = key.
    INSERT temp142 INTO TABLE temp141.
    temp142-n = `writeToDom`.
    temp142-v = z2ui5_cl_util=>boolean_abap_2_json( writetodom ).
    INSERT temp142 INTO TABLE temp141.
    _generic( name   = `CustomData`
              ns     = `core`
              t_prop = temp141 ).

  ENDMETHOD.

  METHOD currency.
    DATA temp143 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp143.
    DATA temp144 LIKE LINE OF temp143.
    temp144-n = `value`.
    temp144-v = value.
    INSERT temp144 INTO TABLE temp143.
    temp144-n = `currency`.
    temp144-v = currency.
    INSERT temp144 INTO TABLE temp143.
    temp144-n = `useSymbol`.
    temp144-v = z2ui5_cl_util=>boolean_abap_2_json( usesymbol ).
    INSERT temp144 INTO TABLE temp143.
    temp144-n = `maxPrecision`.
    temp144-v = maxprecision.
    INSERT temp144 INTO TABLE temp143.
    temp144-n = `stringValue`.
    temp144-v = stringvalue.
    INSERT temp144 INTO TABLE temp143.
    result = _generic( name   = `Currency`
                       ns     = 'u'
                       t_prop = temp143 ).

  ENDMETHOD.

  METHOD custom_control.
    result = _generic( name = `customControl`
                       ns   = `commons` ).
  ENDMETHOD.

  METHOD custom_data.
    result = _generic( name = `customData`
                       ns   = ns ).
  ENDMETHOD.

  METHOD custom_header.
    result = _generic( `customHeader` ).
  ENDMETHOD.

  METHOD custom_layout.
    result = _generic( name = `customLayout`
                       ns   = ns  ).
  ENDMETHOD.

  METHOD custom_list_item.
    result = _generic( `CustomListItem` ).
  ENDMETHOD.

  METHOD data.
    result = _generic( name = `data`
                       ns   = `mchart` ).
  ENDMETHOD.

  METHOD date_picker.
    result = me.
    DATA temp145 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp145.
    DATA temp146 LIKE LINE OF temp145.
    temp146-n = `value`.
    temp146-v = value.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `displayFormat`.
    temp146-v = displayformat.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `displayFormatType`.
    temp146-v = displayformattype.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `valueFormat`.
    temp146-v = valueformat.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `required`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `valueState`.
    temp146-v = valuestate.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `valueStateText`.
    temp146-v = valuestatetext.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `placeholder`.
    temp146-v = placeholder.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `textAlign`.
    temp146-v = textalign.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `textDirection`.
    temp146-v = textdirection.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `change`.
    temp146-v = change.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `maxDate`.
    temp146-v = maxdate.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `minDate`.
    temp146-v = mindate.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `width`.
    temp146-v = width.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `id`.
    temp146-v = id.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `dateValue`.
    temp146-v = datevalue.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `name`.
    temp146-v = name.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `class`.
    temp146-v = class.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `calendarWeekNumbering`.
    temp146-v = calendarweeknumbering.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `initialFocusedDateValue`.
    temp146-v = initialfocuseddatevalue.
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `enabled`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `visible`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `editable`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `hideInput`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( hideinput ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `showFooter`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `showValueStateMessage`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp146 INTO TABLE temp145.
    temp146-n = `showCurrentDateButton`.
    temp146-v = z2ui5_cl_util=>boolean_abap_2_json( showcurrentdatebutton ).
    INSERT temp146 INTO TABLE temp145.
    _generic( name   = `DatePicker`
              t_prop = temp145 ).
  ENDMETHOD.

  METHOD date_time_picker.
    result = me.
    DATA temp147 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp147.
    DATA temp148 LIKE LINE OF temp147.
    temp148-n = `value`.
    temp148-v = value.
    INSERT temp148 INTO TABLE temp147.
    temp148-n = `placeholder`.
    temp148-v = placeholder.
    INSERT temp148 INTO TABLE temp147.
    temp148-n = `enabled`.
    temp148-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp148 INTO TABLE temp147.
    temp148-n = `valueState`.
    temp148-v = valuestate.
    INSERT temp148 INTO TABLE temp147.
    _generic( name   = `DateTimePicker`
              t_prop = temp147 ).
  ENDMETHOD.

  METHOD delta_micro_chart.
    result = me.
    DATA temp149 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp149.
    DATA temp150 LIKE LINE OF temp149.
    temp150-n = `color`.
    temp150-v = color.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `press`.
    temp150-v = press.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `size`.
    temp150-v = size.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `height`.
    temp150-v = height.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `width`.
    temp150-v = width.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `deltaDisplayValue`.
    temp150-v = deltadisplayvalue.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `displayValue1`.
    temp150-v = displayvalue1.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `displayValue2`.
    temp150-v = displayvalue2.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `title2`.
    temp150-v = title2.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `value1`.
    temp150-v = value1.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `value2`.
    temp150-v = value2.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `view`.
    temp150-v = view.
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `hideOnNoData`.
    temp150-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp150 INTO TABLE temp149.
    temp150-n = `title1`.
    temp150-v = title1.
    INSERT temp150 INTO TABLE temp149.
    _generic( name   = `DeltaMicroChart`
              ns     = `mchart`
              t_prop = temp149 ).
  ENDMETHOD.

  METHOD dependents.
    result = _generic( name = `dependents`
                       ns   = ns ).
  ENDMETHOD.

  METHOD detail_box.
    result = _generic( `detailBox` ).
  ENDMETHOD.

  METHOD detail_pages.
    result = _generic( `detailPages` ).
  ENDMETHOD.

  METHOD dialog.

    DATA temp151 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp151.
    DATA temp152 LIKE LINE OF temp151.
    temp152-n = `title`.
    temp152-v = title.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `icon`.
    temp152-v = icon.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `stretch`.
    temp152-v = stretch.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `state`.
    temp152-v = state.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `titleAlignment`.
    temp152-v = titlealignment.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `type`.
    temp152-v = type.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `showHeader`.
    temp152-v = showheader.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `contentWidth`.
    temp152-v = contentwidth.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `contentHeight`.
    temp152-v = contentheight.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `escapeHandler`.
    temp152-v = escapehandler.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `closeOnNavigation`.
    temp152-v = z2ui5_cl_util=>boolean_abap_2_json( closeonnavigation ).
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `draggable`.
    temp152-v = z2ui5_cl_util=>boolean_abap_2_json( draggable ).
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `resizable`.
    temp152-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `horizontalScrolling`.
    temp152-v = z2ui5_cl_util=>boolean_abap_2_json( horizontalscrolling ).
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `verticalScrolling`.
    temp152-v = z2ui5_cl_util=>boolean_abap_2_json( verticalscrolling ).
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `afterOpen`.
    temp152-v = afteropen.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `beforeClose`.
    temp152-v = beforeclose.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `beforeOpen`.
    temp152-v = beforeopen.
    INSERT temp152 INTO TABLE temp151.
    temp152-n = `afterClose`.
    temp152-v = afterclose.
    INSERT temp152 INTO TABLE temp151.
    result = _generic(
        name   = `Dialog`
        t_prop = temp151 ).
  ENDMETHOD.

  METHOD draft_indicator.
    DATA temp153 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp153.
    DATA temp154 LIKE LINE OF temp153.
    temp154-n = `id`.
    temp154-v = id.
    INSERT temp154 INTO TABLE temp153.
    temp154-n = `class`.
    temp154-v = class.
    INSERT temp154 INTO TABLE temp153.
    temp154-n = `minDisplayTime`.
    temp154-v = mindisplaytime.
    INSERT temp154 INTO TABLE temp153.
    temp154-n = `state`.
    temp154-v = state.
    INSERT temp154 INTO TABLE temp153.
    temp154-n = `visible`.
    temp154-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp154 INTO TABLE temp153.
    result = _generic( name   = `DraftIndicator`
                       t_prop = temp153 ).
  ENDMETHOD.

  METHOD Drag_Drop_Info.
    result = me.
    DATA temp155 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp155.
    DATA temp156 LIKE LINE OF temp155.
    temp156-n = `sourceAggregation`.
    temp156-v = sourceAggregation.
    INSERT temp156 INTO TABLE temp155.
    temp156-n = `targetAggregation`.
    temp156-v = targetAggregation.
    INSERT temp156 INTO TABLE temp155.
    temp156-n = `dragStart`.
    temp156-v = dragStart.
    INSERT temp156 INTO TABLE temp155.
    temp156-n = `drop`.
    temp156-v = drop.
    INSERT temp156 INTO TABLE temp155.
    _generic( name   = `DragDropInfo`
              ns     = `dnd`
              t_prop = temp155 ).
  ENDMETHOD.

  METHOD drag_info.
    result = me.
    DATA temp157 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp157.
    DATA temp158 LIKE LINE OF temp157.
    temp158-n = `sourceAggregation`.
    temp158-v = sourceAggregation.
    INSERT temp158 INTO TABLE temp157.
    _generic( name   = `DragInfo`
              ns     = `dnd`
              t_prop = temp157 ).
  ENDMETHOD.

  METHOD drag_drop_config.
    result = _generic( name = `dragDropConfig`
                          ns   = ns
                       ).
  ENDMETHOD.

  METHOD dynamic_page.
    DATA temp159 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp159.
    DATA temp160 LIKE LINE OF temp159.
    temp160-n = `headerExpanded`.
    temp160-v = z2ui5_cl_util=>boolean_abap_2_json( headerexpanded ).
    INSERT temp160 INTO TABLE temp159.
    temp160-n = `headerPinned`.
    temp160-v = z2ui5_cl_util=>boolean_abap_2_json( headerpinned ).
    INSERT temp160 INTO TABLE temp159.
    temp160-n = `showFooter`.
    temp160-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp160 INTO TABLE temp159.
    temp160-n = `toggleHeaderOnTitleClick`.
    temp160-v = toggleheaderontitleclick.
    INSERT temp160 INTO TABLE temp159.
    temp160-n = `class`.
    temp160-v = class.
    INSERT temp160 INTO TABLE temp159.
    result = _generic( name   = `DynamicPage`
                       ns     = `f`
                       t_prop = temp159 ).
  ENDMETHOD.

  METHOD dynamic_page_header.
    DATA temp161 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp161.
    DATA temp162 LIKE LINE OF temp161.
    temp162-n = `pinnable`.
    temp162-v = z2ui5_cl_util=>boolean_abap_2_json( pinnable ).
    INSERT temp162 INTO TABLE temp161.
    result = _generic(
                 name   = `DynamicPageHeader`
                 ns     = `f`
                 t_prop = temp161 ).
  ENDMETHOD.

  METHOD dynamic_page_title.
    result = _generic( name = `DynamicPageTitle`
                       ns   = `f` ).
  ENDMETHOD.

  METHOD dynamic_side_content.
    DATA temp163 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp163.
    DATA temp164 LIKE LINE OF temp163.
    temp164-n = `id`.
    temp164-v = id.
    INSERT temp164 INTO TABLE temp163.
    temp164-n = `class`.
    temp164-v = class.
    INSERT temp164 INTO TABLE temp163.
    temp164-n = `sideContentVisibility`.
    temp164-v = sidecontentvisibility.
    INSERT temp164 INTO TABLE temp163.
    temp164-n = `showSideContent`.
    temp164-v = showsidecontent.
    INSERT temp164 INTO TABLE temp163.
    temp164-n = `containerQuery`.
    temp164-v = containerquery.
    INSERT temp164 INTO TABLE temp163.
    result = _generic( name   = `DynamicSideContent`
                       ns     = 'layout'
                       t_prop = temp163 ).

  ENDMETHOD.

  METHOD element_attribute.
    DATA temp165 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp165.
    DATA temp166 LIKE LINE OF temp165.
    temp166-n = `label`.
    temp166-v = label.
    INSERT temp166 INTO TABLE temp165.
    temp166-n = `value`.
    temp166-v = value.
    INSERT temp166 INTO TABLE temp165.
    DATA temp1 TYPE string.
    CASE ns.
      WHEN ''.
        temp1 = `networkgraph`.
      WHEN OTHERS.
        temp1 = ns.
    ENDCASE.
    result = _generic( name   = `ElementAttribute`
                       ns     = temp1
                       t_prop = temp165 ).
  ENDMETHOD.

  METHOD embedded_control.
    result = _generic( name = `embeddedControl`
                       ns   = `commons` ).
  ENDMETHOD.

  METHOD end_button.

    result = _generic( `endButton` ).

  ENDMETHOD.

  METHOD end_column_pages.
    " todo, implement method
    result = me.
  ENDMETHOD.

  METHOD expandable_text.
    DATA temp167 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp167.
    DATA temp168 LIKE LINE OF temp167.
    temp168-n = `id`.
    temp168-v = id.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `emptyIndicatorMode`.
    temp168-v = emptyindicatormode.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `maxCharacters`.
    temp168-v = maxcharacters.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `overflowMode`.
    temp168-v = overflowmode.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `renderWhitespace`.
    temp168-v = z2ui5_cl_util=>boolean_abap_2_json( renderwhitespace ).
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `text`.
    temp168-v = text.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `textAlign`.
    temp168-v = textalign.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `textDirection`.
    temp168-v = textdirection.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `wrappingType`.
    temp168-v = wrappingtype.
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `visible`.
    temp168-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp168 INTO TABLE temp167.
    temp168-n = `class`.
    temp168-v = class.
    INSERT temp168 INTO TABLE temp167.
    result = _generic(
                 name   = `ExpandableText`
                 t_prop = temp167 ).
  ENDMETHOD.

  METHOD expanded_content.
    result = _generic( name = `expandedContent`
                       ns   = ns ).
  ENDMETHOD.

  METHOD expanded_heading.
    result = _generic( name = `expandedHeading`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD facet_filter.
    DATA temp169 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp169.
    DATA temp170 LIKE LINE OF temp169.
    temp170-n = `id`.
    temp170-v = id.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `class`.
    temp170-v = class.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `liveSearch`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( livesearch ).
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `showPersonalization`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( showpersonalization ).
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `showPopoverOKButton`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( showpopoverokbutton ).
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `showReset`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( showreset ).
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `showSummaryBar`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( showsummarybar ).
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `type`.
    temp170-v = type.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `confirm`.
    temp170-v = confirm.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `reset`.
    temp170-v = reset.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `lists`.
    temp170-v = lists.
    INSERT temp170 INTO TABLE temp169.
    temp170-n = `visible`.
    temp170-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp170 INTO TABLE temp169.
    result = _generic( name   = `FacetFilter`
                       t_prop = temp169 ).
  ENDMETHOD.

  METHOD facet_filter_item.
    DATA temp171 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp171.
    DATA temp172 LIKE LINE OF temp171.
    temp172-n = `id`.
    temp172-v = id.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `class`.
    temp172-v = class.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `count`.
    temp172-v = count.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `counter`.
    temp172-v = counter.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `highlight`.
    temp172-v = highlight.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `highlightText`.
    temp172-v = highlighttext.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `key`.
    temp172-v = key.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `navigated`.
    temp172-v = z2ui5_cl_util=>boolean_abap_2_json( navigated ).
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `selected`.
    temp172-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `unread`.
    temp172-v = z2ui5_cl_util=>boolean_abap_2_json( unread ).
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `text`.
    temp172-v = text.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `type`.
    temp172-v = type.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `detailPress`.
    temp172-v = detailpress.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `press`.
    temp172-v = press.
    INSERT temp172 INTO TABLE temp171.
    temp172-n = `visible`.
    temp172-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp172 INTO TABLE temp171.
    result = _generic(
                 name   = `FacetFilterItem`
                 t_prop = temp171 ).
  ENDMETHOD.

  METHOD facet_filter_list.
    DATA temp173 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp173.
    DATA temp174 LIKE LINE OF temp173.
    temp174-n = `id`.
    temp174-v = id.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `class`.
    temp174-v = class.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `active`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `allCount`.
    temp174-v = allcount.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `backgroundDesign`.
    temp174-v = backgrounddesign.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `dataType`.
    temp174-v = datatype.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `enableBusyIndicator`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( enablebusyindicator ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `enableCaseInsensitiveSearch`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( enablecaseinsensitivesearch ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `footerText`.
    temp174-v = footertext.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `growing`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `growingDirection`.
    temp174-v = growingdirection.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `growingScrollToLoad`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( growingscrolltoload ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `growingThreshold`.
    temp174-v = growingthreshold.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `growingTriggerText`.
    temp174-v = growingtriggertext.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `headerLevel`.
    temp174-v = headerlevel.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `includeItemInSelection`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( includeiteminselection ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `inset`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( inset ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `key`.
    temp174-v = key.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `swipedirection`.
    temp174-v = swipedirection.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `headerText`.
    temp174-v = headertext.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `keyboardMode`.
    temp174-v = keyboardmode.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `mode`.
    temp174-v = mode.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `modeAnimationOn`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( modeanimationon ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `multiSelectMode`.
    temp174-v = multiselectmode.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `noDataText`.
    temp174-v = nodatatext.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `rememberSelections`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( rememberselections ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `retainListSequence`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( retainlistsequence ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `sequence`.
    temp174-v = sequence.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `showNoData`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( shownodata ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `showRemoveFacetIcon`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( showremovefaceticon ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `showSeparators`.
    temp174-v = showseparators.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `showUnread`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( showunread ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `sticky`.
    temp174-v = sticky.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `title`.
    temp174-v = title.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `width`.
    temp174-v = width.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `wordWrap`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( wordwrap ).
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `listClose`.
    temp174-v = listclose.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `listOpen`.
    temp174-v = listopen.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `search`.
    temp174-v = search.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `selectionChange`.
    temp174-v = selectionchange.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `delete`.
    temp174-v = delete.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `items`.
    temp174-v = items.
    INSERT temp174 INTO TABLE temp173.
    temp174-n = `visible`.
    temp174-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp174 INTO TABLE temp173.
    result = _generic(
        name   = `FacetFilterList`
        t_prop = temp173 ).
  ENDMETHOD.

  METHOD factory.

    CREATE OBJECT result.

    IF t_ns IS NOT INITIAL.
      result->mt_prop = t_ns.
    ENDIF.

    DATA temp175 LIKE result->mt_prop.
    CLEAR temp175.
    temp175 = result->mt_prop.
    DATA temp176 LIKE LINE OF temp175.
    temp176-n = 'displayBlock'.
    temp176-v = 'true'.
    INSERT temp176 INTO TABLE temp175.
    temp176-n = 'height'.
    temp176-v = '100%'.
    INSERT temp176 INTO TABLE temp175.
    result->mt_prop   = temp175.

    result->mv_name   = `View`.
    result->mv_ns     = `mvc`.
    result->mo_root   = result.
    result->mo_parent = result.

    DATA temp177 TYPE z2ui5_if_types=>ty_s_name_value.
    CLEAR temp177.
    temp177-n = `xmlns`.
    temp177-v = `sap.m`.
    INSERT temp177 INTO TABLE result->mt_prop.
    DATA temp178 TYPE z2ui5_if_types=>ty_s_name_value.
    CLEAR temp178.
    temp178-n = `xmlns:mvc`.
    temp178-v = `sap.ui.core.mvc`.
    INSERT temp178 INTO TABLE result->mt_prop.
    DATA temp179 TYPE z2ui5_if_types=>ty_s_name_value.
    CLEAR temp179.
    temp179-n = `xmlns:core`.
    temp179-v = `sap.ui.core`.
    INSERT temp179 INTO TABLE result->mt_prop.

  ENDMETHOD.

  METHOD factory_plain.

    CREATE OBJECT result.

    result->mo_root   = result.
    result->mo_parent = result.

  ENDMETHOD.

  METHOD factory_popup.

    CREATE OBJECT result.

    IF t_ns IS NOT INITIAL.
      result->mt_prop = t_ns.
    ENDIF.

    result->mv_name   = `FragmentDefinition`.
    result->mv_ns     = `core`.
    result->mo_root   = result.
    result->mo_parent = result.

    DATA temp180 TYPE z2ui5_if_types=>ty_s_name_value.
    CLEAR temp180.
    temp180-n = `xmlns`.
    temp180-v = `sap.m`.
    INSERT temp180 INTO TABLE result->mt_prop.
    DATA temp181 TYPE z2ui5_if_types=>ty_s_name_value.
    CLEAR temp181.
    temp181-n = `xmlns:core`.
    temp181-v = `sap.ui.core`.
    INSERT temp181 INTO TABLE result->mt_prop.

  ENDMETHOD.

  METHOD fb_control.
    result = _generic( name = `control`
                       ns   = `fb` ).
  ENDMETHOD.

  METHOD feed_input.
    DATA temp182 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp182.
    DATA temp183 LIKE LINE OF temp182.
    temp183-n = `buttonTooltip`.
    temp183-v = buttontooltip.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `enabled`.
    temp183-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `growing`.
    temp183-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `growingMaxLines`.
    temp183-v = growingmaxlines.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `icon`.
    temp183-v = icon.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `iconDensityAware`.
    temp183-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `iconDisplayShape`.
    temp183-v = icondisplayshape.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `iconInitials`.
    temp183-v = iconinitials.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `iconSize`.
    temp183-v = iconsize.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `maxLength`.
    temp183-v = maxlength.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `placeholder`.
    temp183-v = placeholder.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `rows`.
    temp183-v = rows.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `showExceededText`.
    temp183-v = z2ui5_cl_util=>boolean_abap_2_json( showexceededtext ).
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `showIcon`.
    temp183-v = z2ui5_cl_util=>boolean_abap_2_json( showicon ).
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `value`.
    temp183-v = value.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `class`.
    temp183-v = class.
    INSERT temp183 INTO TABLE temp182.
    temp183-n = `post`.
    temp183-v = post.
    INSERT temp183 INTO TABLE temp182.
    result = _generic(
                 name   = `FeedInput`
                 t_prop = temp182 ).

  ENDMETHOD.

  METHOD feed_list_item.
    DATA temp184 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp184.
    DATA temp185 LIKE LINE OF temp184.
    temp185-n = `activeIcon`.
    temp185-v = activeicon.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `convertedLinksDefaultTarget`.
    temp185-v = convertedlinksdefaulttarget.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `convertLinksToAnchorTags`.
    temp185-v = convertlinkstoanchortags.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconActive`.
    temp185-v = z2ui5_cl_util=>boolean_abap_2_json( iconactive ).
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `icon`.
    temp185-v = icon.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconDensityAware`.
    temp185-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconDisplayShape`.
    temp185-v = icondisplayshape.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconInitials`.
    temp185-v = iconinitials.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconSize`.
    temp185-v = iconsize.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `info`.
    temp185-v = info.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `lessLabel`.
    temp185-v = lesslabel.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `maxCharacters`.
    temp185-v = maxcharacters.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `moreLabel`.
    temp185-v = morelabel.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `sender`.
    temp185-v = sender.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `senderActive`.
    temp185-v = z2ui5_cl_util=>boolean_abap_2_json( senderactive ).
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `showIcon`.
    temp185-v = z2ui5_cl_util=>boolean_abap_2_json( showicon ).
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `text`.
    temp185-v = text.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `senderPress`.
    temp185-v = senderpress.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `iconPress`.
    temp185-v = iconpress.
    INSERT temp185 INTO TABLE temp184.
    temp185-n = `timestamp`.
    temp185-v = timestamp.
    INSERT temp185 INTO TABLE temp184.
    result = _generic(
                 name   = `FeedListItem`
                 t_prop = temp184 ).
  ENDMETHOD.

  METHOD feed_list_item_action.
    DATA temp186 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp186.
    DATA temp187 LIKE LINE OF temp186.
    temp187-n = `enabled`.
    temp187-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp187 INTO TABLE temp186.
    temp187-n = `icon`.
    temp187-v = icon.
    INSERT temp187 INTO TABLE temp186.
    temp187-n = `key`.
    temp187-v = key.
    INSERT temp187 INTO TABLE temp186.
    temp187-n = `text`.
    temp187-v = text.
    INSERT temp187 INTO TABLE temp186.
    temp187-n = `press`.
    temp187-v = press.
    INSERT temp187 INTO TABLE temp186.
    temp187-n = `visible`.
    temp187-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp187 INTO TABLE temp186.
    result = _generic( name   = `FeedListItemAction`
                       t_prop = temp186 ).
  ENDMETHOD.

  METHOD filter_bar.

    DATA temp188 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp188.
    DATA temp189 LIKE LINE OF temp188.
    temp189-n = 'useToolbar'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( usetoolbar ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'search'.
    temp189-v = search.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'id'.
    temp189-v = id.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'persistencyKey'.
    temp189-v = persistencykey.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'afterVariantLoad'.
    temp189-v = aftervariantload.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'afterVariantSave'.
    temp189-v = aftervariantsave.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'assignedFiltersChanged'.
    temp189-v = assignedfilterschanged.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'beforeVariantFetch'.
    temp189-v = beforevariantfetch.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'cancel'.
    temp189-v = cancel.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'clear'.
    temp189-v = clear.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filtersDialogBeforeOpen'.
    temp189-v = filtersdialogbeforeopen.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filtersDialogCancel'.
    temp189-v = filtersdialogcancel.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filtersDialogClosed'.
    temp189-v = filtersdialogclosed.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'initialise'.
    temp189-v = initialise.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'initialized'.
    temp189-v = initialized.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'reset'.
    temp189-v = reset.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filterContainerWidth'.
    temp189-v = filtercontainerwidth.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'header'.
    temp189-v = header.
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'advancedMode'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( advancedmode ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'isRunningInValueHelpDialog'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( isrunninginvaluehelpdialog ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showAllFilters'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showallfilters ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showClearOnFB'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showclearonfb ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showFilterConfiguration'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showfilterconfiguration ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showGoOnFB'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showgoonfb ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showRestoreButton'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showrestorebutton ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'showRestoreOnFB'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( showrestoreonfb ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'useSnapshot'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( usesnapshot ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'searchEnabled'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( searchenabled ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'considerGroupTitle'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( considergrouptitle ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'deltaVariantMode'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( deltavariantmode ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'disableSearchMatchesPatternWarning'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( disablesearchmatchespatternw ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filterBarExpanded'.
    temp189-v = z2ui5_cl_util=>boolean_abap_2_json( filterbarexpanded ).
    INSERT temp189 INTO TABLE temp188.
    temp189-n = 'filterChange'.
    temp189-v = filterchange.
    INSERT temp189 INTO TABLE temp188.
    result = _generic(
        name   = `FilterBar`
        ns     = 'fb'
        t_prop = temp188 ).
  ENDMETHOD.

  METHOD filter_control.
    result = _generic( name = `control`
                       ns   = 'fb' ).
  ENDMETHOD.

  METHOD filter_group_item.
    DATA temp190 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp190.
    DATA temp191 LIKE LINE OF temp190.
    temp191-n = 'name'.
    temp191-v = name.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'label'.
    temp191-v = label.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'groupName'.
    temp191-v = groupname.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'controlTooltip'.
    temp191-v = controltooltip.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'entitySetName'.
    temp191-v = entitysetname.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'entityTypeName'.
    temp191-v = entitytypename.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'groupTitle'.
    temp191-v = grouptitle.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'labelTooltip'.
    temp191-v = labeltooltip.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'change'.
    temp191-v = change.
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'visibleInFilterBar'.
    temp191-v = z2ui5_cl_util=>boolean_abap_2_json( visibleinfilterbar ).
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'mandatory'.
    temp191-v = z2ui5_cl_util=>boolean_abap_2_json( mandatory ).
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'hiddenFilter'.
    temp191-v = z2ui5_cl_util=>boolean_abap_2_json( hiddenfilter ).
    INSERT temp191 INTO TABLE temp190.
    temp191-n = 'visible'.
    temp191-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp191 INTO TABLE temp190.
    result = _generic(
        name   = `FilterGroupItem`
        ns     = 'fb'
        t_prop = temp190 ).

  ENDMETHOD.

  METHOD filter_group_items.
    result = _generic( name = `filterGroupItems`
                       ns   = 'fb' ).
  ENDMETHOD.

  METHOD filter_items.
    result = _generic( `filterItems` ).
  ENDMETHOD.

  METHOD first_status.
    result = _generic( `firstStatus` ).
  ENDMETHOD.

  METHOD flexible_column_layout.

    DATA temp192 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp192.
    DATA temp193 LIKE LINE OF temp192.
    temp193-n = `layout`.
    temp193-v = layout.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `id`.
    temp193-v = id.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `class`.
    temp193-v = class.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `afterBeginColumnNavigate`.
    temp193-v = afterbegincolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `afterEndColumnNavigate`.
    temp193-v = afterendcolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `afterMidColumnNavigate`.
    temp193-v = aftermidcolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `beginColumnNavigate`.
    temp193-v = begincolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `columnResize`.
    temp193-v = columnresize.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `endColumnNavigate`.
    temp193-v = endcolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `midColumnNavigate`.
    temp193-v = midcolumnnavigate.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `stateChange`.
    temp193-v = statechange.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `backgroundDesign`.
    temp193-v = backgrounddesign.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `defaultTransitionNameBeginColumn`.
    temp193-v = defaulttransitionnamebegincol.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `defaultTransitionNameEndColumn`.
    temp193-v = defaulttransitionnameendcol.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `defaultTransitionNameMidColumn`.
    temp193-v = defaulttransitionnamemidcol.
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `autoFocus`.
    temp193-v = z2ui5_cl_util=>boolean_abap_2_json( autofocus ).
    INSERT temp193 INTO TABLE temp192.
    temp193-n = `restoreFocusOnBackNavigation`.
    temp193-v = z2ui5_cl_util=>boolean_abap_2_json( restorefocusonbacknavigation ).
    INSERT temp193 INTO TABLE temp192.
    result = _generic(
        name   = `FlexibleColumnLayout`
        ns     = `f`
        t_prop = temp192 ).

  ENDMETHOD.

  METHOD flex_box.
    DATA temp194 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp194.
    DATA temp195 LIKE LINE OF temp194.
    temp195-n = `class`.
    temp195-v = class.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `id`.
    temp195-v = id.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `renderType`.
    temp195-v = rendertype.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `width`.
    temp195-v = width.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `height`.
    temp195-v = height.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `alignItems`.
    temp195-v = alignitems.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `fitContainer`.
    temp195-v = z2ui5_cl_util=>boolean_abap_2_json( fitcontainer ).
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `justifyContent`.
    temp195-v = justifycontent.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `wrap`.
    temp195-v = wrap.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `items`.
    temp195-v = items.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `direction`.
    temp195-v = direction.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `alignContent`.
    temp195-v = aligncontent.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `backgroundDesign`.
    temp195-v = backgrounddesign.
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `displayInline`.
    temp195-v = z2ui5_cl_util=>boolean_abap_2_json( displayinline ).
    INSERT temp195 INTO TABLE temp194.
    temp195-n = `visible`.
    temp195-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp195 INTO TABLE temp194.
    result = _generic(
                 name   = `FlexBox`
                 t_prop = temp194 ).
  ENDMETHOD.

  METHOD flex_item_data.
    result = me.

    DATA temp196 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp196.
    DATA temp197 LIKE LINE OF temp196.
    temp197-n = `growFactor`.
    temp197-v = growfactor.
    INSERT temp197 INTO TABLE temp196.
    temp197-n = `baseSize`.
    temp197-v = basesize.
    INSERT temp197 INTO TABLE temp196.
    temp197-n = `backgroundDesign`.
    temp197-v = backgrounddesign.
    INSERT temp197 INTO TABLE temp196.
    temp197-n = `styleClass`.
    temp197-v = styleclass.
    INSERT temp197 INTO TABLE temp196.
    temp197-n = `order`.
    temp197-v = order.
    INSERT temp197 INTO TABLE temp196.
    temp197-n = `shrinkFactor`.
    temp197-v = shrinkfactor.
    INSERT temp197 INTO TABLE temp196.
    _generic( name   = `FlexItemData`
              t_prop = temp196 ).
  ENDMETHOD.

  METHOD footer.
    result = _generic( ns   = ns
                       name = `footer` ).
  ENDMETHOD.

  METHOD force_based_layout.
    DATA temp198 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp198.
    DATA temp199 LIKE LINE OF temp198.
    temp199-n = `id`.
    temp199-v = id.
    INSERT temp199 INTO TABLE temp198.
    temp199-n = `class`.
    temp199-v = class.
    INSERT temp199 INTO TABLE temp198.
    temp199-n = `alpha`.
    temp199-v = alpha.
    INSERT temp199 INTO TABLE temp198.
    temp199-n = `charge`.
    temp199-v = charge.
    INSERT temp199 INTO TABLE temp198.
    temp199-n = `friction`.
    temp199-v = friction.
    INSERT temp199 INTO TABLE temp198.
    temp199-n = `maximumDuration`.
    temp199-v = maximumduration.
    INSERT temp199 INTO TABLE temp198.
    result = _generic( name   = `ForceBasedLayout`
                       ns     = `nglayout`
                       t_prop = temp198 ).
  ENDMETHOD.

  METHOD force_directed_layout.
    DATA temp200 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp200.
    DATA temp201 LIKE LINE OF temp200.
    temp201-n = `id`.
    temp201-v = id.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `class`.
    temp201-v = class.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `coolDownStep`.
    temp201-v = cooldownstep.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `initialTemperature`.
    temp201-v = initialtemperature.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `maxIterations`.
    temp201-v = maxiterations.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `maxTime`.
    temp201-v = maxtime.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `optimalDistanceConstant`.
    temp201-v = optimaldistanceconstant.
    INSERT temp201 INTO TABLE temp200.
    temp201-n = `staticNodes`.
    temp201-v = staticnodes.
    INSERT temp201 INTO TABLE temp200.
    result = _generic( name   = `ForceDirectedLayout`
                       ns     = `nglayout`
                       t_prop = temp200 ).
  ENDMETHOD.

  METHOD formatted_text.
    result = me.
    DATA temp202 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp202.
    DATA temp203 LIKE LINE OF temp202.
    temp203-n = `htmlText`.
    temp203-v = htmltext.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `convertedLinksDefaultTarget`.
    temp203-v = convertedlinksdefaulttarget.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `convertLinksToAnchorTags`.
    temp203-v = convertlinkstoanchortags.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `height`.
    temp203-v = height.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `textAlign`.
    temp203-v = textalign.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `textDirection`.
    temp203-v = textdirection.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `visible`.
    temp203-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `width`.
    temp203-v = width.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `class`.
    temp203-v = class.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `id`.
    temp203-v = id.
    INSERT temp203 INTO TABLE temp202.
    temp203-n = `controls`.
    temp203-v = controls.
    INSERT temp203 INTO TABLE temp202.
    _generic( name   = `FormattedText`
              t_prop = temp202 ).
  ENDMETHOD.

  METHOD form_toolbar.
    result = _generic( name = `toolbar`
                       ns   = `form` ).
  ENDMETHOD.

  METHOD gantt_chart_container.
    result = _generic( name = `GanttChartContainer`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD gantt_chart_with_table.
    DATA temp204 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp204.
    DATA temp205 LIKE LINE OF temp204.
    temp205-n = `id`.
    temp205-v = id.
    INSERT temp205 INTO TABLE temp204.
    temp205-n = `shapeSelectionMode`.
    temp205-v = shapeselectionmode.
    INSERT temp205 INTO TABLE temp204.
    temp205-n = `isConnectorDetailsVisible`.
    temp205-v = z2ui5_cl_util=>boolean_abap_2_json( isconnectordetailsvisible ).
    INSERT temp205 INTO TABLE temp204.
    result = _generic(
        name   = `GanttChartWithTable`
        ns     = `gantt`
        t_prop = temp204 ).
  ENDMETHOD.

  METHOD gantt_row_settings.
    DATA temp206 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp206.
    DATA temp207 LIKE LINE OF temp206.
    temp207-n = `rowId`.
    temp207-v = rowid.
    INSERT temp207 INTO TABLE temp206.
    temp207-n = `shapes1`.
    temp207-v = shapes1.
    INSERT temp207 INTO TABLE temp206.
    temp207-n = `shapes2`.
    temp207-v = shapes2.
    INSERT temp207 INTO TABLE temp206.
    temp207-n = `relationships`.
    temp207-v = relationships.
    INSERT temp207 INTO TABLE temp206.
    result = _generic( name   = `GanttRowSettings`
                       ns     = `gantt`
                       t_prop = temp206 ).
  ENDMETHOD.

  METHOD gantt_table.
    result = _generic( name = `table`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD gantt_toolbar.
    result = _generic( name = `toolbar`
                       ns   = 'gantt' ).
  ENDMETHOD.

  METHOD generic_tag.

    DATA temp208 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp208.
    DATA temp209 LIKE LINE OF temp208.
    temp209-n = `ariaLabelledBy`.
    temp209-v = arialabelledby.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `class`.
    temp209-v = class.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `design`.
    temp209-v = design.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `status`.
    temp209-v = status.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `id`.
    temp209-v = id.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `press`.
    temp209-v = press.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `text`.
    temp209-v = text.
    INSERT temp209 INTO TABLE temp208.
    temp209-n = `valueState`.
    temp209-v = valuestate.
    INSERT temp209 INTO TABLE temp208.
    result = _generic( name   = `GenericTag`
                       t_prop = temp208 ).

  ENDMETHOD.

  METHOD generic_tile.

    DATA temp210 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp210.
    DATA temp211 LIKE LINE OF temp210.
    temp211-n = `class`.
    temp211-v = class.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `id`.
    temp211-v = id.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `header`.
    temp211-v = header.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `mode`.
    temp211-v = mode.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `additionalTooltip`.
    temp211-v = additionaltooltip.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `appShortcut`.
    temp211-v = appshortcut.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `backgroundColor`.
    temp211-v = backgroundcolor.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `backgroundImage`.
    temp211-v = backgroundimage.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `dropAreaOffset`.
    temp211-v = dropareaoffset.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `press`.
    temp211-v = press.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `frameType`.
    temp211-v = frametype.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `failedText`.
    temp211-v = failedtext.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `headerImage`.
    temp211-v = headerimage.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `scope`.
    temp211-v = scope.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `sizeBehavior`.
    temp211-v = sizebehavior.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `state`.
    temp211-v = state.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `systemInfo`.
    temp211-v = systeminfo.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `tileBadge`.
    temp211-v = tilebadge.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `tileIcon`.
    temp211-v = tileicon.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `url`.
    temp211-v = url.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `valueColor`.
    temp211-v = valuecolor.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `width`.
    temp211-v = width.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `wrappingType`.
    temp211-v = wrappingtype.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `imageDescription`.
    temp211-v = imagedescription.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `navigationButtonText`.
    temp211-v = navigationbuttontext.
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `visible`.
    temp211-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `renderOnThemeChange`.
    temp211-v = z2ui5_cl_util=>boolean_abap_2_json( renderonthemechange ).
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `enableNavigationButton`.
    temp211-v = z2ui5_cl_util=>boolean_abap_2_json( enablenavigationbutton ).
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `pressEnabled`.
    temp211-v = z2ui5_cl_util=>boolean_abap_2_json( pressenabled ).
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `iconLoaded`.
    temp211-v = z2ui5_cl_util=>boolean_abap_2_json( iconloaded ).
    INSERT temp211 INTO TABLE temp210.
    temp211-n = `subheader`.
    temp211-v = subheader.
    INSERT temp211 INTO TABLE temp210.
    result = _generic(
                 name   = `GenericTile`
                 ns     = ``
                 t_prop = temp210 ).

  ENDMETHOD.

  METHOD get.

    IF name IS INITIAL.
      result = mo_root->mo_previous.
      RETURN.
    ENDIF.

    IF mo_parent->mv_name = name.
      result = mo_parent.
    ELSE.
      result = mo_parent->get( name ).
    ENDIF.

  ENDMETHOD.

  METHOD get_child.
    DATA temp212 LIKE LINE OF mt_child.
    DATA temp213 LIKE sy-tabix.
    temp213 = sy-tabix.
    READ TABLE mt_child INDEX index INTO temp212.
    sy-tabix = temp213.
    IF sy-subrc <> 0.
      ASSERT 1 = 0.
    ENDIF.
    result = temp212.
  ENDMETHOD.

  METHOD get_parent.
    result = mo_parent.
  ENDMETHOD.

  METHOD get_root.
    result = mo_root.
  ENDMETHOD.

  METHOD grid.

    DATA temp214 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp214.
    DATA temp215 LIKE LINE OF temp214.
    temp215-n = `defaultSpan`.
    temp215-v = default_span.
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `class`.
    temp215-v = class.
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `containerQuery`.
    temp215-v = z2ui5_cl_util=>boolean_abap_2_json( containerquery ).
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `hSpacing`.
    temp215-v = hspacing.
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `vSpacing`.
    temp215-v = vspacing.
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `width`.
    temp215-v = width.
    INSERT temp215 INTO TABLE temp214.
    temp215-n = `content`.
    temp215-v = content.
    INSERT temp215 INTO TABLE temp214.
    result = _generic(
                 name   = `Grid`
                 ns     = `layout`
                 t_prop = temp214 ).
  ENDMETHOD.

  METHOD grid_box_layout.
    result = me.
    DATA temp216 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp216.
    DATA temp217 LIKE LINE OF temp216.
    temp217-n = `boxesPerRowConfig`.
    temp217-v = boxesPerRowConfig.
    INSERT temp217 INTO TABLE temp216.
    temp217-n = `boxMinWidth`.
    temp217-v = boxMinWidth.
    INSERT temp217 INTO TABLE temp216.
    temp217-n = `boxWidth`.
    temp217-v = boxWidth.
    INSERT temp217 INTO TABLE temp216.
    _generic( name   = `GridBoxLayout`
              ns     = `grid`
              t_prop = temp216 ).
  ENDMETHOD.

  METHOD grid_data.
    result = me.
    DATA temp218 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp218.
    DATA temp219 LIKE LINE OF temp218.
    temp219-n = `span`.
    temp219-v = span.
    INSERT temp219 INTO TABLE temp218.
    temp219-n = `linebreak`.
    temp219-v = z2ui5_cl_util=>boolean_abap_2_json( linebreak ).
    INSERT temp219 INTO TABLE temp218.
    temp219-n = `indentL`.
    temp219-v = indentl.
    INSERT temp219 INTO TABLE temp218.
    temp219-n = `indentM`.
    temp219-v = indentm.
    INSERT temp219 INTO TABLE temp218.
    _generic( name   = `GridData`
              ns     = `layout`
              t_prop = temp218 ).
  ENDMETHOD.

  METHOD grid_drop_info.
    result = me.
    DATA temp220 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp220.
    DATA temp221 LIKE LINE OF temp220.
    temp221-n = `targetAggregation`.
    temp221-v = targetAggregation.
    INSERT temp221 INTO TABLE temp220.
    temp221-n = `dropPosition`.
    temp221-v = dropPosition.
    INSERT temp221 INTO TABLE temp220.
    temp221-n = `dropLayout`.
    temp221-v = dropLayout.
    INSERT temp221 INTO TABLE temp220.
    temp221-n = `drop`.
    temp221-v = drop.
    INSERT temp221 INTO TABLE temp220.
    temp221-n = `dragEnter`.
    temp221-v = dragEnter.
    INSERT temp221 INTO TABLE temp220.
    temp221-n = `dragOver`.
    temp221-v = dragOver.
    INSERT temp221 INTO TABLE temp220.
    _generic( name   = `GridDropInfo`
              ns     = `dnd-grid`
              t_prop = temp220 ).
  ENDMETHOD.

  METHOD grid_list.
    DATA temp222 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp222.
    DATA temp223 LIKE LINE OF temp222.
    temp223-n = `id`.
    temp223-v = id.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `busy`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( busy ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `busyIndicatorDelay`.
    temp223-v = busyIndicatorDelay.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `busyIndicatorSize`.
    temp223-v = busyIndicatorSize.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `enableBusyIndicator`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( enableBusyIndicator ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `fieldGroupIds`.
    temp223-v = fieldGroupIds.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `footerText`.
    temp223-v = footerText.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `growing`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `growingDirection`.
    temp223-v = growingDirection.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `growingScrollToLoad`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( growingScrollToLoad ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `growingThreshold`.
    temp223-v = growingThreshold.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `growingTriggerText`.
    temp223-v = growingTriggerText.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `headerLevel`.
    temp223-v = headerLevel.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `headerText`.
    temp223-v = headerText.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `includeItemInSelection`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( includeItemInSelection ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `inset`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( inset ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `keyboardMode`.
    temp223-v = keyboardMode.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `mode`.
    temp223-v = mode.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `modeAnimationOn`.
    temp223-v = modeAnimationOn.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `multiSelectMode`.
    temp223-v = multiSelectMode.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `noDataText`.
    temp223-v = noDataText.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `rememberSelections`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( rememberSelections ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `showNoData`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( showNoData ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `showSeparators`.
    temp223-v = showSeparators.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `showUnread`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( showUnread ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `sticky`.
    temp223-v = sticky.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `swipeDirection`.
    temp223-v = swipeDirection.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `visible`.
    temp223-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `width`.
    temp223-v = width.
    INSERT temp223 INTO TABLE temp222.
    temp223-n = `items`.
    temp223-v = items.
    INSERT temp223 INTO TABLE temp222.
    result = _generic(
                 name   = `GridList`
                 ns     = `f`
                 t_prop = temp222 ).
  ENDMETHOD.

  METHOD grid_list_item.
    DATA temp224 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp224.
    DATA temp225 LIKE LINE OF temp224.
    temp225-n = `busy`.
    temp225-v = busy.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `busyIndicatorDelay`.
    temp225-v = busyIndicatorDelay.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `busyIndicatorSize`.
    temp225-v = busyIndicatorSize.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `counter`.
    temp225-v = counter.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `fieldGroupIds`.
    temp225-v = fieldGroupIds.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `highlight`.
    temp225-v = highlight.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `highlightText`.
    temp225-v = highlightText.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `navigated`.
    temp225-v = navigated.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `selected`.
    temp225-v = selected.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `type`.
    temp225-v = type.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `unread`.
    temp225-v = unread.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `visible`.
    temp225-v = visible.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `detailPress`.
    temp225-v = detailPress.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `detailTap`.
    temp225-v = detailTap.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `press`.
    temp225-v = press.
    INSERT temp225 INTO TABLE temp224.
    temp225-n = `tap`.
    temp225-v = tap.
    INSERT temp225 INTO TABLE temp224.
    result = _generic( name   = `GridListItem`
                       ns     = `f`
                       t_prop = temp224 ).
  ENDMETHOD.

  METHOD group.
    DATA temp226 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp226.
    DATA temp227 LIKE LINE OF temp226.
    temp227-n = `collapsed`.
    temp227-v = z2ui5_cl_util=>boolean_abap_2_json( collapsed ).
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `id`.
    temp227-v = id.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `class`.
    temp227-v = class.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `description`.
    temp227-v = description.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `headerCheckBoxState`.
    temp227-v = headercheckboxstate.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `icon`.
    temp227-v = icon.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `key`.
    temp227-v = key.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `minWidth`.
    temp227-v = minwidth.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `parentGroupKey`.
    temp227-v = parentgroupkey.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `status`.
    temp227-v = status.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `title`.
    temp227-v = title.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `collapseExpand`.
    temp227-v = collapseexpand.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `showDetail`.
    temp227-v = showdetail.
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `visible`.
    temp227-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp227 INTO TABLE temp226.
    temp227-n = `headerCheckBoxPress`.
    temp227-v = headercheckboxpress.
    INSERT temp227 INTO TABLE temp226.
    result = _generic( name   = `group`
                       ns     = `networkgraph`
                       t_prop = temp226 ).
  ENDMETHOD.

  METHOD groups.
    DATA temp228 TYPE string.
    CASE ns.
      WHEN ``.
        temp228 = `networkgraph`.
      WHEN OTHERS.
        temp228 = ns.
    ENDCASE.
    result = _generic( name = `groups`
                       ns   = temp228 ).
  ENDMETHOD.

  METHOD group_items.
    result = _generic( `groupItems` ).
  ENDMETHOD.

  METHOD harvey_ball_micro_chart.

    DATA temp229 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp229.
    DATA temp230 LIKE LINE OF temp229.
    temp230-n = `colorPalette`.
    temp230-v = colorpalette.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `press`.
    temp230-v = press.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `size`.
    temp230-v = size.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `height`.
    temp230-v = height.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `width`.
    temp230-v = width.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `total`.
    temp230-v = total.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `totalLabel`.
    temp230-v = totallabel.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `alignContent`.
    temp230-v = aligncontent.
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `hideOnNoData`.
    temp230-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `formattedLabel`.
    temp230-v = z2ui5_cl_util=>boolean_abap_2_json( formattedlabel ).
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `showFractions`.
    temp230-v = z2ui5_cl_util=>boolean_abap_2_json( showfractions ).
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `showTotal`.
    temp230-v = z2ui5_cl_util=>boolean_abap_2_json( showtotal ).
    INSERT temp230 INTO TABLE temp229.
    temp230-n = `totalScale`.
    temp230-v = totalscale.
    INSERT temp230 INTO TABLE temp229.
    result = _generic( name   = `HarveyBallMicroChart`
              ns     = `mchart`
              t_prop = temp229 ).
  ENDMETHOD.

  METHOD hbox.
    DATA temp231 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp231.
    DATA temp232 LIKE LINE OF temp231.
    temp232-n = `class`.
    temp232-v = class.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `alignContent`.
    temp232-v = aligncontent.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `alignItems`.
    temp232-v = alignitems.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `width`.
    temp232-v = width.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `id`.
    temp232-v = id.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `renderType`.
    temp232-v = rendertype.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `height`.
    temp232-v = height.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `wrap`.
    temp232-v = wrap.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `backgroundDesign`.
    temp232-v = backgrounddesign.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `direction`.
    temp232-v = direction.
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `displayInline`.
    temp232-v = z2ui5_cl_util=>boolean_abap_2_json( displayinline ).
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `fitContainer`.
    temp232-v = z2ui5_cl_util=>boolean_abap_2_json( fitcontainer ).
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `visible`.
    temp232-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp232 INTO TABLE temp231.
    temp232-n = `justifyContent`.
    temp232-v = justifycontent.
    INSERT temp232 INTO TABLE temp231.
    result = _generic(
        name   = `HBox`
        t_prop = temp231 ).

  ENDMETHOD.

  METHOD header.
    result = _generic( name = `header`
                       ns   = ns ).
  ENDMETHOD.

  METHOD header_container.
    DATA temp233 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp233.
    DATA temp234 LIKE LINE OF temp233.
    temp234-n = `scrollStep`.
    temp234-v = scrollstep.
    INSERT temp234 INTO TABLE temp233.
    temp234-n = `scrollTime`.
    temp234-v = scrolltime.
    INSERT temp234 INTO TABLE temp233.
    temp234-n = `orientation`.
    temp234-v = orientation.
    INSERT temp234 INTO TABLE temp233.
    temp234-n = `height`.
    temp234-v = height.
    INSERT temp234 INTO TABLE temp233.
    result = _generic( name   = `HeaderContainer`
                       t_prop = temp233 ).
  ENDMETHOD.

  METHOD header_container_control.
    DATA temp235 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp235.
    DATA temp236 LIKE LINE OF temp235.
    temp236-n = `backgroundDesign`.
    temp236-v = backgrounddesign.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `gridLayout`.
    temp236-v = z2ui5_cl_util=>boolean_abap_2_json( gridlayout ).
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `height`.
    temp236-v = height.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `orientation`.
    temp236-v = orientation.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `scrollStep`.
    temp236-v = scrollstep.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `scrollStepByItem`.
    temp236-v = scrollstepbyitem.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `scrollTime`.
    temp236-v = scrolltime.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `showDividers`.
    temp236-v = z2ui5_cl_util=>boolean_abap_2_json( showdividers ).
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `showOverflowItem`.
    temp236-v = z2ui5_cl_util=>boolean_abap_2_json( showoverflowitem ).
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `visible`.
    temp236-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `snapToRow `.
    temp236-v = z2ui5_cl_util=>boolean_abap_2_json( snaptorow ).
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `width`.
    temp236-v = width.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `id`.
    temp236-v = id.
    INSERT temp236 INTO TABLE temp235.
    temp236-n = `scroll`.
    temp236-v = scroll.
    INSERT temp236 INTO TABLE temp235.
    result = _generic(
                 name   = `HeaderContainer`
                 t_prop = temp235 ).
  ENDMETHOD.

  METHOD header_content.

    result = _generic( name = `headerContent`
                       ns   = ns ).

  ENDMETHOD.

  METHOD header_title.

    result = _generic( name = `headerTitle`
                       ns   = `uxap` ).

  ENDMETHOD.

  METHOD header_toolbar.

    result = _generic( `headerToolbar` ).

  ENDMETHOD.

  METHOD heading.

    result = me.
    result = _generic( name = `heading`
                       ns   = ns ).

  ENDMETHOD.

  METHOD horizontal_layout.
    DATA temp237 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp237.
    DATA temp238 LIKE LINE OF temp237.
    temp238-n = `class`.
    temp238-v = class.
    INSERT temp238 INTO TABLE temp237.
    temp238-n = `allowWrapping`.
    temp238-v = z2ui5_cl_util=>boolean_abap_2_json( allowwrapping ).
    INSERT temp238 INTO TABLE temp237.
    temp238-n = `id`.
    temp238-v = id.
    INSERT temp238 INTO TABLE temp237.
    temp238-n = `visible`.
    temp238-v = visible.
    INSERT temp238 INTO TABLE temp237.
    result = _generic(
                 name   = `HorizontalLayout`
                 ns     = `layout`
                 t_prop = temp237 ).
  ENDMETHOD.

  METHOD html.

    DATA temp239 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp239.
    DATA temp240 LIKE LINE OF temp239.
    temp240-n = 'id'.
    temp240-v = id.
    INSERT temp240 INTO TABLE temp239.
    temp240-n = 'content'.
    temp240-v = content.
    INSERT temp240 INTO TABLE temp239.
    temp240-n = 'afterRendering'.
    temp240-v = afterrendering.
    INSERT temp240 INTO TABLE temp239.
    temp240-n = 'preferDOM'.
    temp240-v = z2ui5_cl_util=>boolean_abap_2_json( preferdom ).
    INSERT temp240 INTO TABLE temp239.
    temp240-n = 'sanitizeContent'.
    temp240-v = z2ui5_cl_util=>boolean_abap_2_json( sanitizecontent ).
    INSERT temp240 INTO TABLE temp239.
    temp240-n = 'visible'.
    temp240-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp240 INTO TABLE temp239.
    result = _generic( name   = `HTML`
                       ns     = `core`
                       t_prop = temp239 ).

  ENDMETHOD.

  METHOD html_area.
    DATA temp241 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp241.
    DATA temp242 LIKE LINE OF temp241.
    temp242-n = `id`.
    temp242-v = id.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `shape`.
    temp242-v = shape.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `coords`.
    temp242-v = coords.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `alt`.
    temp242-v = alt.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `target`.
    temp242-v = target.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `href`.
    temp242-v = href.
    INSERT temp242 INTO TABLE temp241.
    temp242-n = `onclick`.
    temp242-v = onclick.
    INSERT temp242 INTO TABLE temp241.
    result = _generic( name   = `area`
                       ns     = 'html'
                       t_prop = temp241 ).
  ENDMETHOD.

  METHOD html_canvas.
    DATA temp243 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp243.
    DATA temp244 LIKE LINE OF temp243.
    temp244-n = `id`.
    temp244-v = id.
    INSERT temp244 INTO TABLE temp243.
    temp244-n = `class`.
    temp244-v = class.
    INSERT temp244 INTO TABLE temp243.
    temp244-n = `width`.
    temp244-v = width.
    INSERT temp244 INTO TABLE temp243.
    temp244-n = `height`.
    temp244-v = height.
    INSERT temp244 INTO TABLE temp243.
    temp244-n = `style`.
    temp244-v = style.
    INSERT temp244 INTO TABLE temp243.
    result = _generic( name   = `canvas`
                       ns     = `html`
                       t_prop = temp243 ).
  ENDMETHOD.

  METHOD html_map.
    DATA temp245 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp245.
    DATA temp246 LIKE LINE OF temp245.
    temp246-n = `id`.
    temp246-v = id.
    INSERT temp246 INTO TABLE temp245.
    temp246-n = `class`.
    temp246-v = class.
    INSERT temp246 INTO TABLE temp245.
    temp246-n = `name`.
    temp246-v = name.
    INSERT temp246 INTO TABLE temp245.
    result = _generic( name   = `map`
                       ns     = 'html'
                       t_prop = temp245 ).
  ENDMETHOD.

  METHOD icon.

    result = me.
    DATA temp247 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp247.
    DATA temp248 LIKE LINE OF temp247.
    temp248-n = `size`.
    temp248-v = size.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `color`.
    temp248-v = color.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `class`.
    temp248-v = class.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `src`.
    temp248-v = src.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `activeColor`.
    temp248-v = activecolor.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `activeBackgroundColor`.
    temp248-v = activebackgroundcolor.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `alt`.
    temp248-v = alt.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `backgroundColor`.
    temp248-v = backgroundcolor.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `height`.
    temp248-v = height.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `width`.
    temp248-v = width.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `id`.
    temp248-v = id.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `press`.
    temp248-v = press.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `hoverBackgroundColor`.
    temp248-v = hoverbackgroundcolor.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `hoverColor`.
    temp248-v = hovercolor.
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `visible`.
    temp248-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `decorative`.
    temp248-v = z2ui5_cl_util=>boolean_abap_2_json( decorative ).
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `noTabStop`.
    temp248-v = z2ui5_cl_util=>boolean_abap_2_json( notabstop ).
    INSERT temp248 INTO TABLE temp247.
    temp248-n = `useIconTooltip`.
    temp248-v = z2ui5_cl_util=>boolean_abap_2_json( useicontooltip ).
    INSERT temp248 INTO TABLE temp247.
    _generic( name   = `Icon`
              ns     = `core`
              t_prop = temp247 ).

  ENDMETHOD.

  METHOD icon_tab_bar.

    DATA temp249 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp249.
    DATA temp250 LIKE LINE OF temp249.
    temp250-n = `class`.
    temp250-v = class.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `select`.
    temp250-v = select.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `expand`.
    temp250-v = expand.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `expandable`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( expandable ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `expanded`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( expanded ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `applyContentPadding`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( applycontentpadding ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `backgroundDesign`.
    temp250-v = backgrounddesign.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `enableTabReordering`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( enabletabreordering ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `headerBackgroundDesign`.
    temp250-v = headerbackgrounddesign.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `stretchContentHeight`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( stretchcontentheight ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `headerMode`.
    temp250-v = headermode.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `maxNestingLevel`.
    temp250-v = maxnestinglevel.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `tabDensityMode`.
    temp250-v = tabdensitymode.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `tabsOverflowMode`.
    temp250-v = tabsoverflowmode.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `items`.
    temp250-v = items.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `id`.
    temp250-v = id.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `content`.
    temp250-v = content.
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `upperCase`.
    temp250-v = z2ui5_cl_util=>boolean_abap_2_json( uppercase ).
    INSERT temp250 INTO TABLE temp249.
    temp250-n = `selectedKey`.
    temp250-v = selectedkey.
    INSERT temp250 INTO TABLE temp249.
    result = _generic(
                 name   = `IconTabBar`
                 t_prop = temp249 ).
  ENDMETHOD.

  METHOD icon_tab_filter.

    DATA temp251 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp251.
    DATA temp252 LIKE LINE OF temp251.
    temp252-n = `icon`.
    temp252-v = icon.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `items`.
    temp252-v = items.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `design`.
    temp252-v = design.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `iconColor`.
    temp252-v = iconcolor.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `showAll`.
    temp252-v = z2ui5_cl_util=>boolean_abap_2_json( showall ).
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `iconDensityAware`.
    temp252-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `visible`.
    temp252-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `count`.
    temp252-v = count.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `text`.
    temp252-v = text.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `id`.
    temp252-v = id.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `textDirection`.
    temp252-v = textdirection.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `class`.
    temp252-v = class.
    INSERT temp252 INTO TABLE temp251.
    temp252-n = `key`.
    temp252-v = key.
    INSERT temp252 INTO TABLE temp251.
    result = _generic(
        name   = `IconTabFilter`
        t_prop = temp251 ).
  ENDMETHOD.

  METHOD icon_tab_header.

    DATA temp253 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp253.
    DATA temp254 LIKE LINE OF temp253.
    temp254-n = `selectedKey`.
    temp254-v = selectedkey.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `items`.
    temp254-v = items.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `select`.
    temp254-v = select.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `ariaTexts`.
    temp254-v = ariatexts.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `backgroundDesign`.
    temp254-v = backgrounddesign.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `enableTabReordering`.
    temp254-v = z2ui5_cl_util=>boolean_abap_2_json( enabletabreordering ).
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `maxNestingLevel`.
    temp254-v = maxnestinglevel.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `tabDensityMode`.
    temp254-v = tabdensitymode.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `tabsOverflowMode`.
    temp254-v = tabsoverflowmode.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `id`.
    temp254-v = id.
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `visible`.
    temp254-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp254 INTO TABLE temp253.
    temp254-n = `mode`.
    temp254-v = mode.
    INSERT temp254 INTO TABLE temp253.
    result = _generic(
        name   = `IconTabHeader`
        t_prop = temp253 ).

  ENDMETHOD.

  METHOD icon_tab_separator.

    DATA temp255 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp255.
    DATA temp256 LIKE LINE OF temp255.
    temp256-n = `icon`.
    temp256-v = icon.
    INSERT temp256 INTO TABLE temp255.
    temp256-n = `iconDensityAware`.
    temp256-v = icondensityaware.
    INSERT temp256 INTO TABLE temp255.
    temp256-n = `id`.
    temp256-v = id.
    INSERT temp256 INTO TABLE temp255.
    temp256-n = `class`.
    temp256-v = class.
    INSERT temp256 INTO TABLE temp255.
    temp256-n = `visible`.
    temp256-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp256 INTO TABLE temp255.
    result = _generic( name   = `IconTabSeparator`
                       t_prop = temp255 ).

  ENDMETHOD.

  METHOD illustrated_message.

    DATA temp257 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp257.
    DATA temp258 LIKE LINE OF temp257.
    temp258-n = `enableVerticalResponsiveness`.
    temp258-v = enableverticalresponsiveness.
    INSERT temp258 INTO TABLE temp257.
    temp258-n = `illustrationType`.
    temp258-v = illustrationtype.
    INSERT temp258 INTO TABLE temp257.
    temp258-n = `enableFormattedText`.
    temp258-v = z2ui5_cl_util=>boolean_abap_2_json( enableformattedtext ).
    INSERT temp258 INTO TABLE temp257.
    temp258-n = `illustrationSize`.
    temp258-v = illustrationsize.
    INSERT temp258 INTO TABLE temp257.
    temp258-n = `description`.
    temp258-v = description.
    INSERT temp258 INTO TABLE temp257.
    temp258-n = `title`.
    temp258-v = title.
    INSERT temp258 INTO TABLE temp257.
    result = _generic(
        name   = `IllustratedMessage`
        t_prop = temp257 ).
  ENDMETHOD.

  METHOD image.
    result = me.
    DATA temp259 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp259.
    DATA temp260 LIKE LINE OF temp259.
    temp260-n = `id`.
    temp260-v = id.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `src`.
    temp260-v = src.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `class`.
    temp260-v = class.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `height`.
    temp260-v = height.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `alt`.
    temp260-v = alt.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `activeSrc`.
    temp260-v = activesrc.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `ariaHasPopup`.
    temp260-v = ariahaspopup.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `backgroundPosition`.
    temp260-v = backgroundposition.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `backgroundRepeat`.
    temp260-v = backgroundrepeat.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `backgroundSize`.
    temp260-v = backgroundsize.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `mode`.
    temp260-v = mode.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `useMap`.
    temp260-v = usemap.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `width`.
    temp260-v = width.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `error`.
    temp260-v = error.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `press`.
    temp260-v = press.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `load`.
    temp260-v = load.
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `decorative`.
    temp260-v = z2ui5_cl_util=>boolean_abap_2_json( decorative ).
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `densityAware`.
    temp260-v = z2ui5_cl_util=>boolean_abap_2_json( densityaware ).
    INSERT temp260 INTO TABLE temp259.
    temp260-n = `lazyLoading`.
    temp260-v = z2ui5_cl_util=>boolean_abap_2_json( lazyloading ).
    INSERT temp260 INTO TABLE temp259.
    _generic( name   = `Image`
              t_prop = temp259 ).
  ENDMETHOD.

  METHOD image_content.

    DATA temp261 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp261.
    DATA temp262 LIKE LINE OF temp261.
    temp262-n = `src`.
    temp262-v = src.
    INSERT temp262 INTO TABLE temp261.
    temp262-n = `description`.
    temp262-v = description.
    INSERT temp262 INTO TABLE temp261.
    temp262-n = `visible`.
    temp262-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp262 INTO TABLE temp261.
    temp262-n = `class`.
    temp262-v = class.
    INSERT temp262 INTO TABLE temp261.
    temp262-n = `press`.
    temp262-v = press.
    INSERT temp262 INTO TABLE temp261.
    result = _generic( name   = `ImageContent`
                       t_prop = temp261 ).

  ENDMETHOD.

  METHOD info_label.
    DATA temp263 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp263.
    DATA temp264 LIKE LINE OF temp263.
    temp264-n = `id`.
    temp264-v = id.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `class`.
    temp264-v = class.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `text`.
    temp264-v = text.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `renderMode `.
    temp264-v = rendermode.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `colorScheme`.
    temp264-v = colorscheme.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `displayOnly`.
    temp264-v = z2ui5_cl_util=>boolean_abap_2_json( displayonly ).
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `icon`.
    temp264-v = icon.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `textDirection`.
    temp264-v = textdirection.
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `visible`.
    temp264-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp264 INTO TABLE temp263.
    temp264-n = `width`.
    temp264-v = width.
    INSERT temp264 INTO TABLE temp263.
    result = _generic( name   = `InfoLabel`
                       ns     = 'tnt'
                       t_prop = temp263 ).

  ENDMETHOD.

  METHOD input.
    result = me.
    DATA temp265 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp265.
    DATA temp266 LIKE LINE OF temp265.
    temp266-n = `id`.
    temp266-v = id.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `placeholder`.
    temp266-v = placeholder.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `type`.
    temp266-v = type.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `maxLength`.
    temp266-v = maxlength.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `showClearIcon`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( showclearicon ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `description`.
    temp266-v = description.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `editable`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `enabled`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `visible`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `enableTableAutoPopinMode`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( enabletableautopopinmode ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `enableSuggestionsHighlighting`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( enablesuggestionshighlighting ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `showTableSuggestionValueHelp`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( showtablesuggestionvaluehelp ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueState`.
    temp266-v = valuestate.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueStateText`.
    temp266-v = valuestatetext.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `value`.
    temp266-v = value.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `required`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `suggest`.
    temp266-v = suggest.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `suggestionItems`.
    temp266-v = suggestionitems.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `suggestionRows`.
    temp266-v = suggestionrows.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `showSuggestion`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( showsuggestion ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueHelpRequest`.
    temp266-v = valuehelprequest.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `autocomplete`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( autocomplete ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueLiveUpdate`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( valueliveupdate ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `submit`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( submit ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `showValueHelp`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluehelp ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueHelpOnly`.
    temp266-v = z2ui5_cl_util=>boolean_abap_2_json( valuehelponly ).
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `class`.
    temp266-v = class.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `change`.
    temp266-v = change.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `maxSuggestionWidth`.
    temp266-v = maxsuggestionwidth.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `width`.
    temp266-v = width.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `textFormatter`.
    temp266-v = textformatter.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `startSuggestion`.
    temp266-v = startsuggestion.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `valueHelpIconSrc`.
    temp266-v = valuehelpiconsrc.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `textFormatMode`.
    temp266-v = textformatmode.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `fieldWidth`.
    temp266-v = fieldwidth.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `ariaLabelledBy`.
    temp266-v = arialabelledby.
    INSERT temp266 INTO TABLE temp265.
    temp266-n = `ariaDescribedBy`.
    temp266-v = ariadescribedby.
    INSERT temp266 INTO TABLE temp265.
    _generic(
        name   = `Input`
        t_prop = temp265 ).
  ENDMETHOD.

  METHOD input_list_item.
    DATA temp267 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp267.
    DATA temp268 LIKE LINE OF temp267.
    temp268-n = `label`.
    temp268-v = label.
    INSERT temp268 INTO TABLE temp267.
    result = _generic( name   = `InputListItem`
                       t_prop = temp267 ).
  ENDMETHOD.

  METHOD interact_bar_chart.
    DATA temp269 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp269.
    DATA temp270 LIKE LINE OF temp269.
    temp270-n = `selectionChanged`.
    temp270-v = selectionchanged.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `selectionEnabled`.
    temp270-v = z2ui5_cl_util=>boolean_abap_2_json( selectionenabled ).
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `showError`.
    temp270-v = z2ui5_cl_util=>boolean_abap_2_json( showerror ).
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `press`.
    temp270-v = press.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `labelWidth`.
    temp270-v = labelwidth.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `bars`.
    temp270-v = bars.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `errorMessageTitle`.
    temp270-v = errormessagetitle.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `displayedBars`.
    temp270-v = displayedbars.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `min`.
    temp270-v = min.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `max`.
    temp270-v = max.
    INSERT temp270 INTO TABLE temp269.
    temp270-n = `errorMessage`.
    temp270-v = errormessage.
    INSERT temp270 INTO TABLE temp269.
    result = _generic(
        name   = `InteractiveBarChart`
        ns     = `mchart`
        t_prop = temp269 ).
  ENDMETHOD.

  METHOD interact_bar_chart_bar.
    DATA temp271 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp271.
    DATA temp272 LIKE LINE OF temp271.
    temp272-n = `label`.
    temp272-v = label.
    INSERT temp272 INTO TABLE temp271.
    temp272-n = `displayedValue`.
    temp272-v = displayedvalue.
    INSERT temp272 INTO TABLE temp271.
    temp272-n = `value`.
    temp272-v = value.
    INSERT temp272 INTO TABLE temp271.
    temp272-n = `selected`.
    temp272-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp272 INTO TABLE temp271.
    temp272-n = `color`.
    temp272-v = color.
    INSERT temp272 INTO TABLE temp271.
    result = _generic( name   = `InteractiveBarChartBar`
                       ns     = `mchart`
                       t_prop = temp271 ).
  ENDMETHOD.

  METHOD interact_donut_chart.
    DATA temp273 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp273.
    DATA temp274 LIKE LINE OF temp273.
    temp274-n = `selectionChanged`.
    temp274-v = selectionchanged.
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `selectionEnabled`.
    temp274-v = z2ui5_cl_util=>boolean_abap_2_json( selectionenabled ).
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `showError`.
    temp274-v = z2ui5_cl_util=>boolean_abap_2_json( showerror ).
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `errorMessageTitle`.
    temp274-v = errormessagetitle.
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `errorMessage`.
    temp274-v = errormessage.
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `displayedSegments`.
    temp274-v = displayedsegments.
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `segments`.
    temp274-v = segments.
    INSERT temp274 INTO TABLE temp273.
    temp274-n = `press`.
    temp274-v = press.
    INSERT temp274 INTO TABLE temp273.
    result = _generic(
        name   = `InteractiveDonutChart`
        ns     = `mchart`
        t_prop = temp273 ).
  ENDMETHOD.

  METHOD interact_donut_chart_segment.
    DATA temp275 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp275.
    DATA temp276 LIKE LINE OF temp275.
    temp276-n = `label`.
    temp276-v = label.
    INSERT temp276 INTO TABLE temp275.
    temp276-n = `displayedValue`.
    temp276-v = displayedvalue.
    INSERT temp276 INTO TABLE temp275.
    temp276-n = `value`.
    temp276-v = value.
    INSERT temp276 INTO TABLE temp275.
    temp276-n = `selected`.
    temp276-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp276 INTO TABLE temp275.
    temp276-n = `color`.
    temp276-v = color.
    INSERT temp276 INTO TABLE temp275.
    result = _generic( name   = `InteractiveDonutChartSegment`
                       ns     = `mchart`
                       t_prop = temp275 ).
  ENDMETHOD.

  METHOD interact_line_chart.
    DATA temp277 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp277.
    DATA temp278 LIKE LINE OF temp277.
    temp278-n = `selectionChanged`.
    temp278-v = selectionchanged.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `showError`.
    temp278-v = z2ui5_cl_util=>boolean_abap_2_json( showerror ).
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `press`.
    temp278-v = press.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `errorMessageTitle`.
    temp278-v = errormessagetitle.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `errorMessage`.
    temp278-v = errormessage.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `precedingPoint`.
    temp278-v = precedingpoint.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `points`.
    temp278-v = points.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `succeedingPoint`.
    temp278-v = succeddingpoint.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `displayedPoints`.
    temp278-v = displayedpoints.
    INSERT temp278 INTO TABLE temp277.
    temp278-n = `selectionEnabled`.
    temp278-v = selectionenabled.
    INSERT temp278 INTO TABLE temp277.
    result = _generic( name   = `InteractiveLineChart`
                       ns     = `mchart`
                       t_prop = temp277 ).
  ENDMETHOD.

  METHOD interact_line_chart_point.
    DATA temp279 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp279.
    DATA temp280 LIKE LINE OF temp279.
    temp280-n = `label`.
    temp280-v = label.
    INSERT temp280 INTO TABLE temp279.
    temp280-n = `secondaryLabel`.
    temp280-v = secondarylabel.
    INSERT temp280 INTO TABLE temp279.
    temp280-n = `value`.
    temp280-v = value.
    INSERT temp280 INTO TABLE temp279.
    temp280-n = `displayedValue`.
    temp280-v = displayedvalue.
    INSERT temp280 INTO TABLE temp279.
    temp280-n = `selected`.
    temp280-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp280 INTO TABLE temp279.
    result = _generic(
                 name   = `InteractiveLineChartPoint`
                 ns     = `mchart`
                 t_prop = temp279 ).
  ENDMETHOD.

  METHOD intermediary.
    result = _generic( name = `intermediary`
                       ns   = `commons` ).
  ENDMETHOD.

  METHOD interval_headers.
    result = _generic( `intervalHeaders` ).
  ENDMETHOD.

  METHOD item.
    result = me.
    DATA temp281 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp281.
    DATA temp282 LIKE LINE OF temp281.
    temp282-n = `key`.
    temp282-v = key.
    INSERT temp282 INTO TABLE temp281.
    temp282-n = `text`.
    temp282-v = text.
    INSERT temp282 INTO TABLE temp281.
    _generic( name   = `Item`
              ns     = `core`
              t_prop = temp281 ).
  ENDMETHOD.

  METHOD items.
    result = _generic( name = `items`
                       ns   = ns ).
  ENDMETHOD.

  METHOD label.
    result = me.
    DATA temp283 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp283.
    DATA temp284 LIKE LINE OF temp283.
    temp284-n = `text`.
    temp284-v = text.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `displayOnly`.
    temp284-v = z2ui5_cl_util=>boolean_abap_2_json( displayonly ).
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `required`.
    temp284-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `showColon`.
    temp284-v = z2ui5_cl_util=>boolean_abap_2_json( showcolon ).
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `textAlign`.
    temp284-v = textalign.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `textDirection`.
    temp284-v = textdirection.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `vAlign`.
    temp284-v = valign.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `width`.
    temp284-v = width.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `wrapping`.
    temp284-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `wrappingType`.
    temp284-v = wrappingtype.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `design`.
    temp284-v = design.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `id`.
    temp284-v = id.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `class`.
    temp284-v = class.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `labelFor`.
    temp284-v = labelfor.
    INSERT temp284 INTO TABLE temp283.
    temp284-n = `visible`.
    temp284-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp284 INTO TABLE temp283.
    _generic( name   = `Label`
              t_prop = temp283 ).
  ENDMETHOD.

  METHOD lanes.
    result = _generic( name = `lanes`
                       ns   = `commons` ).
  ENDMETHOD.

  METHOD layered_layout.
    DATA temp285 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp285.
    DATA temp286 LIKE LINE OF temp285.
    temp286-n = `id`.
    temp286-v = id.
    INSERT temp286 INTO TABLE temp285.
    temp286-n = `class`.
    temp286-v = class.
    INSERT temp286 INTO TABLE temp285.
    temp286-n = `lineSpacingFactor`.
    temp286-v = linespacingfactor.
    INSERT temp286 INTO TABLE temp285.
    temp286-n = `nodePlacement`.
    temp286-v = nodeplacement.
    INSERT temp286 INTO TABLE temp285.
    temp286-n = `nodeSpacing`.
    temp286-v = nodespacing.
    INSERT temp286 INTO TABLE temp285.
    temp286-n = `mergeEdges`.
    temp286-v = z2ui5_cl_util=>boolean_abap_2_json( mergeedges ).
    INSERT temp286 INTO TABLE temp285.
    result = _generic( name   = `LayeredLayout`
                       ns     = `nglayout`
                       t_prop = temp285 ).
  ENDMETHOD.

  METHOD layout_algorithm.
    result = _generic( name = `layoutAlgorithm`
                       ns   = `networkgraph` ).
  ENDMETHOD.

  METHOD layout_data.
    result = _generic( ns   = ns
                       name = `layoutData` ).
  ENDMETHOD.

  METHOD legend.

    DATA temp287 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp287.
    DATA temp288 LIKE LINE OF temp287.
    temp288-n = `id`.
    temp288-v = id.
    INSERT temp288 INTO TABLE temp287.
    temp288-n = `caption`.
    temp288-v = caption.
    INSERT temp288 INTO TABLE temp287.
    temp288-n = `items`.
    temp288-v = items.
    INSERT temp288 INTO TABLE temp287.
    result = _generic( name   = `Legend`
                       ns     = `vbm`
                       t_prop = temp287 ).

  ENDMETHOD.

  METHOD legenditem.

    DATA temp289 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp289.
    DATA temp290 LIKE LINE OF temp289.
    temp290-n = `id`.
    temp290-v = id.
    INSERT temp290 INTO TABLE temp289.
    temp290-n = `text`.
    temp290-v = text.
    INSERT temp290 INTO TABLE temp289.
    temp290-n = `color`.
    temp290-v = color.
    INSERT temp290 INTO TABLE temp289.
    result = _generic( name   = `LegendItem`
                       ns     = `vbm`
                       t_prop = temp289 ).

  ENDMETHOD.

  METHOD legend_area.

    result = _generic( name = `legend`
                       ns   = `vbm` ).

  ENDMETHOD.

  METHOD library_shape.
    DATA temp291 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp291.
    DATA temp292 LIKE LINE OF temp291.
    temp292-n = `id`.
    temp292-v = id.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `class`.
    temp292-v = class.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `animationOnChange`.
    temp292-v = z2ui5_cl_util=>boolean_abap_2_json( animationonchange ).
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `definition`.
    temp292-v = definition.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `fillColor`.
    temp292-v = fillcolor.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `fillingAngle`.
    temp292-v = fillingangle.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `fillingDirection`.
    temp292-v = fillingdirection.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `fillingType`.
    temp292-v = fillingtype.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `height`.
    temp292-v = height.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `horizontalAlignment`.
    temp292-v = horizontalalignment.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `shapeId`.
    temp292-v = shapeid.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `strokeColor`.
    temp292-v = strokecolor.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `strokeWidth`.
    temp292-v = strokewidth.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `verticalAlignment`.
    temp292-v = verticalalignment.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `width`.
    temp292-v = width.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `x`.
    temp292-v = x.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `y`.
    temp292-v = y.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `afterShapeLoaded`.
    temp292-v = aftershapeloaded.
    INSERT temp292 INTO TABLE temp291.
    temp292-n = `visible`.
    temp292-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp292 INTO TABLE temp291.
    result = _generic(
        name   = `LibraryShape`
        ns     = `si`
        t_prop = temp291 ).
  ENDMETHOD.

  METHOD light_box.
    DATA temp293 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp293.
    DATA temp294 LIKE LINE OF temp293.
    temp294-n = `id`.
    temp294-v = id.
    INSERT temp294 INTO TABLE temp293.
    temp294-n = `class`.
    temp294-v = class.
    INSERT temp294 INTO TABLE temp293.
    temp294-n = `visible`.
    temp294-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp294 INTO TABLE temp293.
    result = _generic( name   = `LightBox`
                       t_prop = temp293 ).
  ENDMETHOD.

  METHOD light_box_item.
    DATA temp295 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp295.
    DATA temp296 LIKE LINE OF temp295.
    temp296-n = `alt`.
    temp296-v = alt.
    INSERT temp296 INTO TABLE temp295.
    temp296-n = `imageSrc`.
    temp296-v = imagesrc.
    INSERT temp296 INTO TABLE temp295.
    temp296-n = `subtitle`.
    temp296-v = subtitle.
    INSERT temp296 INTO TABLE temp295.
    temp296-n = `title`.
    temp296-v = title.
    INSERT temp296 INTO TABLE temp295.
    result = _generic( name   = `LightBoxItem`
                       t_prop = temp295 ).
  ENDMETHOD.

  METHOD line.

    DATA temp297 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp297.
    DATA temp298 LIKE LINE OF temp297.
    temp298-n = `id`.
    temp298-v = id.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `class`.
    temp298-v = class.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `arrowOrientation`.
    temp298-v = arroworientation.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `arrowPosition`.
    temp298-v = arrowposition.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `description`.
    temp298-v = description.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `from`.
    temp298-v = from.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `lineType`.
    temp298-v = linetype.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `status`.
    temp298-v = status.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `title`.
    temp298-v = title.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `to`.
    temp298-v = to.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `hover`.
    temp298-v = hover.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `press`.
    temp298-v = press.
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `stretchToCenter`.
    temp298-v = z2ui5_cl_util=>boolean_abap_2_json( stretchtocenter ).
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `selected`.
    temp298-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp298 INTO TABLE temp297.
    temp298-n = `visible`.
    temp298-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp298 INTO TABLE temp297.
    result = _generic( name   = `Line`
                       ns     = `networkgraph`
                       t_prop = temp297 ).

  ENDMETHOD.

  METHOD lines.
    DATA temp299 TYPE string.
    CASE ns.
      WHEN ''.
        temp299 = `networkgraph`.
      WHEN OTHERS.
        temp299 = ns.
    ENDCASE.
    result = _generic( name = `lines`
                       ns   = temp299 ).
  ENDMETHOD.

  METHOD line_micro_chart.
    result = me.
    DATA temp300 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp300.
    DATA temp301 LIKE LINE OF temp300.
    temp301-n = `color`.
    temp301-v = color.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `height`.
    temp301-v = height.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `leftBottomLabel`.
    temp301-v = leftbottomlabel.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `leftTopLabel`.
    temp301-v = lefttoplabel.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `maxXValue`.
    temp301-v = maxxvalue.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `minXValue`.
    temp301-v = minxvalue.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `minYValue`.
    temp301-v = minyvalue.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `rightBottomLabel`.
    temp301-v = rightbottomlabel.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `rightTopLabel`.
    temp301-v = righttoplabel.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `size`.
    temp301-v = size.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `threshold`.
    temp301-v = threshold.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `thresholdDisplayValue`.
    temp301-v = thresholddisplayvalue.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `width`.
    temp301-v = width.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `press`.
    temp301-v = press.
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `hideOnNoData`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `showBottomLabels`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( showbottomlabels ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `showPoints`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( showpoints ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `showThresholdLine`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( showthresholdline ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `showThresholdValue`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( showthresholdvalue ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `showTopLabels`.
    temp301-v = z2ui5_cl_util=>boolean_abap_2_json( showtoplabels ).
    INSERT temp301 INTO TABLE temp300.
    temp301-n = `maxYValue`.
    temp301-v = maxyvalue.
    INSERT temp301 INTO TABLE temp300.
    _generic(
        name   = `LineMicroChart`
        ns     = `mchart`
        t_prop = temp300 ).
  ENDMETHOD.

  METHOD line_micro_chart_empszd_point.
    DATA temp302 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp302.
    DATA temp303 LIKE LINE OF temp302.
    temp303-n = `x`.
    temp303-v = x.
    INSERT temp303 INTO TABLE temp302.
    temp303-n = `y`.
    temp303-v = y.
    INSERT temp303 INTO TABLE temp302.
    temp303-n = `color`.
    temp303-v = color.
    INSERT temp303 INTO TABLE temp302.
    temp303-n = `show`.
    temp303-v = z2ui5_cl_util=>boolean_abap_2_json( show ).
    INSERT temp303 INTO TABLE temp302.
    result = _generic( name   = `LineMicroChartEmphasizedPoint`
                       ns     = `mchart`
                       t_prop = temp302 ).
  ENDMETHOD.

  METHOD line_micro_chart_line.
    DATA temp304 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp304.
    DATA temp305 LIKE LINE OF temp304.
    temp305-n = `points`.
    temp305-v = points.
    INSERT temp305 INTO TABLE temp304.
    temp305-n = `color`.
    temp305-v = color.
    INSERT temp305 INTO TABLE temp304.
    temp305-n = `type`.
    temp305-v = type.
    INSERT temp305 INTO TABLE temp304.
    result = _generic( name   = `LineMicroChartLine`
                       ns     = `mchart`
                       t_prop = temp304 ).
  ENDMETHOD.

  METHOD line_micro_chart_point.
    DATA temp306 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp306.
    DATA temp307 LIKE LINE OF temp306.
    temp307-n = `x`.
    temp307-v = x.
    INSERT temp307 INTO TABLE temp306.
    temp307-n = `y`.
    temp307-v = y.
    INSERT temp307 INTO TABLE temp306.
    result = _generic( name   = `LineMicroChartPoint`
                       ns     = `mchart`
                       t_prop = temp306 ).
  ENDMETHOD.

  METHOD link.
    result = me.
    DATA temp308 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp308.
    DATA temp309 LIKE LINE OF temp308.
    temp309-n = `text`.
    temp309-v = text.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `target`.
    temp309-v = target.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `href`.
    temp309-v = href.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `press`.
    temp309-v = press.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `id`.
    temp309-v = id.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `class`.
    temp309-v = class.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `accessibleRole`.
    temp309-v = accessiblerole.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `ariaHasPopup`.
    temp309-v = ariahaspopup.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `emptyIndicatorMode`.
    temp309-v = emptyindicatormode.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `rel`.
    temp309-v = rel.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `subtle`.
    temp309-v = z2ui5_cl_util=>boolean_abap_2_json( subtle ).
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `textAlign`.
    temp309-v = textalign.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `textDirection`.
    temp309-v = textdirection.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `validateUrl`.
    temp309-v = z2ui5_cl_util=>boolean_abap_2_json( validateurl ).
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `width`.
    temp309-v = width.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `wrapping`.
    temp309-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `emphasized`.
    temp309-v = z2ui5_cl_util=>boolean_abap_2_json( emphasized ).
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `enabled`.
    temp309-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `endIcon`.
    temp309-v = endicon.
    INSERT temp309 INTO TABLE temp308.
    temp309-n = `icon`.
    temp309-v = icon.
    INSERT temp309 INTO TABLE temp308.
    _generic( name   = `Link`
              ns     = ns
              t_prop = temp308 ).
  ENDMETHOD.

  METHOD link_tile_content.
    DATA temp310 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp310.
    DATA temp311 LIKE LINE OF temp310.
    temp311-n = `iconSrc`.
    temp311-v = iconsrc.
    INSERT temp311 INTO TABLE temp310.
    temp311-n = `linkHref`.
    temp311-v = linkhref.
    INSERT temp311 INTO TABLE temp310.
    temp311-n = `linkText`.
    temp311-v = linktext.
    INSERT temp311 INTO TABLE temp310.
    temp311-n = `linkPress`.
    temp311-v = linkpress.
    INSERT temp311 INTO TABLE temp310.
    result = _generic( name   = `LinkTileContent`
                       t_prop = temp310 ).
  ENDMETHOD.

  METHOD list.
    DATA temp312 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp312.
    DATA temp313 LIKE LINE OF temp312.
    temp313-n = `headerText`.
    temp313-v = headertext.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `items`.
    temp313-v = items.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `mode`.
    temp313-v = mode.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `class`.
    temp313-v = class.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `itemPress`.
    temp313-v = itempress.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `select`.
    temp313-v = select.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `selectionChange`.
    temp313-v = selectionchange.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `showSeparators`.
    temp313-v = showseparators.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `footerText`.
    temp313-v = footertext.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `growingDirection`.
    temp313-v = growingdirection.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `growingThreshold`.
    temp313-v = growingthreshold.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `growingTriggerText`.
    temp313-v = growingtriggertext.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `headerLevel`.
    temp313-v = headerlevel.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `multiSelectMode`.
    temp313-v = multiselectmode.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `noDataText`.
    temp313-v = nodatatext.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `id`.
    temp313-v = id.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `sticky`.
    temp313-v = sticky.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `delete`.
    temp313-v = delete.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `backgroundDesign`.
    temp313-v = backgrounddesign.
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `modeAnimationOn`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( modeanimationon ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `growingScrollToLoad`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( growingscrolltoload ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `includeItemInSelection`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( includeiteminselection ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `growing`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `inset`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( inset ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `rememberSelections`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( rememberselections ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `showUnread`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( showunread ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `visible`.
    temp313-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp313 INTO TABLE temp312.
    temp313-n = `noData`.
    temp313-v = nodata.
    INSERT temp313 INTO TABLE temp312.
    result = _generic(
                 name   = `List`
                 t_prop = temp312 ).
  ENDMETHOD.

  METHOD list_item.
    result = me.
    DATA temp314 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp314.
    DATA temp315 LIKE LINE OF temp314.
    temp315-n = `text`.
    temp315-v = text.
    INSERT temp315 INTO TABLE temp314.
    temp315-n = `icon`.
    temp315-v = icon.
    INSERT temp315 INTO TABLE temp314.
    temp315-n = `key`.
    temp315-v = key.
    INSERT temp315 INTO TABLE temp314.
    temp315-n = `textDirection`.
    temp315-v = textdirection.
    INSERT temp315 INTO TABLE temp314.
    temp315-n = `enabled`.
    temp315-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp315 INTO TABLE temp314.
    temp315-n = `additionalText`.
    temp315-v = additionaltext.
    INSERT temp315 INTO TABLE temp314.
    _generic( name   = `ListItem`
              ns     = `core`
              t_prop = temp314 ).
  ENDMETHOD.

  METHOD main_content.
    result = _generic( name = `mainContent`
                       ns   = `f` ).
  ENDMETHOD.

  METHOD main_contents.

    result = _generic( name = `mainContents`
                       ns   = `tnt` ).

  ENDMETHOD.

  METHOD map_container.

    DATA temp316 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp316.
    DATA temp317 LIKE LINE OF temp316.
    temp317-n = `id`.
    temp317-v = id.
    INSERT temp317 INTO TABLE temp316.
    temp317-n = `autoAdjustHeight`.
    temp317-v = z2ui5_cl_util=>boolean_abap_2_json( autoadjustheight ).
    INSERT temp317 INTO TABLE temp316.
    temp317-n = `showHome`.
    temp317-v = z2ui5_cl_util=>boolean_abap_2_json( showHome ).
    INSERT temp317 INTO TABLE temp316.
    result = _generic( name   = `MapContainer`
                       ns     = `vk`
                       t_prop = temp316 ).

  ENDMETHOD.

  METHOD markers.
    result = _generic( name = `markers`
                       ns   = ns ).
  ENDMETHOD.

  METHOD markers_as_status.
    result = _generic( name = `markersAsStatus`
                       ns   = `upload` ).
  ENDMETHOD.

  METHOD mask_input.
    result = me.
    DATA temp318 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp318.
    DATA temp319 LIKE LINE OF temp318.
    temp319-n = `placeholder`.
    temp319-v = placeholder.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `mask`.
    temp319-v = mask.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `name`.
    temp319-v = name.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `textAlign`.
    temp319-v = textalign.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `textDirection`.
    temp319-v = textdirection.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `value`.
    temp319-v = value.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `width`.
    temp319-v = width.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `liveChange`.
    temp319-v = livechange.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `change`.
    temp319-v = change.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `valueState`.
    temp319-v = valuestate.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `valueStateText`.
    temp319-v = valuestatetext.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `placeholderSymbol`.
    temp319-v = placeholdersymbol.
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `required`.
    temp319-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `showClearIcon`.
    temp319-v = z2ui5_cl_util=>boolean_abap_2_json( showclearicon ).
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `showValueStateMessage`.
    temp319-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `visible`.
    temp319-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp319 INTO TABLE temp318.
    temp319-n = `fieldWidth`.
    temp319-v = fieldwidth.
    INSERT temp319 INTO TABLE temp318.
    _generic( name   = `MaskInput`
              t_prop = temp318 ).
  ENDMETHOD.

  METHOD mask_input_rule.
    DATA temp320 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp320.
    DATA temp321 LIKE LINE OF temp320.
    temp321-n = `maskFormatSymbol`.
    temp321-v = maskformatsymbol.
    INSERT temp321 INTO TABLE temp320.
    temp321-n = `regex`.
    temp321-v = regex.
    INSERT temp321 INTO TABLE temp320.
    result = _generic( name   = `MaskInputRule`
                       t_prop = temp320 ).
  ENDMETHOD.

  METHOD master_pages.
    result = _generic( `masterPages` ).
  ENDMETHOD.

  METHOD menu_button.
    DATA temp322 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp322.
    DATA temp323 LIKE LINE OF temp322.
    temp323-n = `buttonMode`.
    temp323-v = buttonmode.
    INSERT temp323 INTO TABLE temp322.
    temp323-n = `defaultAction`.
    temp323-v = defaultaction.
    INSERT temp323 INTO TABLE temp322.
    temp323-n = `text`.
    temp323-v = text.
    INSERT temp323 INTO TABLE temp322.
    temp323-n = `enabled`.
    temp323-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp323 INTO TABLE temp322.
    temp323-n = `activeIcon`.
    temp323-v = activeicon.
    INSERT temp323 INTO TABLE temp322.
    temp323-n = `type`.
    temp323-v = type.
    INSERT temp323 INTO TABLE temp322.
    result = _generic( name   = `MenuButton`
                       t_prop = temp322 ).
  ENDMETHOD.

  METHOD menu_item.
    result = me.
    DATA temp324 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp324.
    DATA temp325 LIKE LINE OF temp324.
    temp325-n = `press`.
    temp325-v = press.
    INSERT temp325 INTO TABLE temp324.
    temp325-n = `text`.
    temp325-v = text.
    INSERT temp325 INTO TABLE temp324.
    temp325-n = `icon`.
    temp325-v = icon.
    INSERT temp325 INTO TABLE temp324.
    _generic( name   = `MenuItem`
              t_prop = temp324 ).
  ENDMETHOD.

  METHOD message_item.
    DATA temp326 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp326.
    DATA temp327 LIKE LINE OF temp326.
    temp327-n = `type`.
    temp327-v = type.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `title`.
    temp327-v = title.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `subtitle`.
    temp327-v = subtitle.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `description`.
    temp327-v = description.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `longtextUrl`.
    temp327-v = longtexturl.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `textDirection`.
    temp327-v = textdirection.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `groupName`.
    temp327-v = groupname.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `activeTitle`.
    temp327-v = z2ui5_cl_util=>boolean_abap_2_json( activetitle ).
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `counter`.
    temp327-v = counter.
    INSERT temp327 INTO TABLE temp326.
    temp327-n = `markupDescription`.
    temp327-v = z2ui5_cl_util=>boolean_abap_2_json( markupdescription ).
    INSERT temp327 INTO TABLE temp326.
    result = _generic(
        name   = `MessageItem`
        t_prop = temp326 ).
  ENDMETHOD.

  METHOD message_page.
    DATA temp328 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp328.
    DATA temp329 LIKE LINE OF temp328.
    temp329-n = `showHeader`.
    temp329-v = z2ui5_cl_util=>boolean_abap_2_json( show_header ).
    INSERT temp329 INTO TABLE temp328.
    temp329-n = `description`.
    temp329-v = description.
    INSERT temp329 INTO TABLE temp328.
    temp329-n = `icon`.
    temp329-v = icon.
    INSERT temp329 INTO TABLE temp328.
    temp329-n = `text`.
    temp329-v = text.
    INSERT temp329 INTO TABLE temp328.
    temp329-n = `enableFormattedText`.
    temp329-v = z2ui5_cl_util=>boolean_abap_2_json( enableformattedtext ).
    INSERT temp329 INTO TABLE temp328.
    result = _generic(
                 name   = `MessagePage`
                 t_prop = temp328 ).
  ENDMETHOD.

  METHOD message_popover.
    DATA temp330 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp330.
    DATA temp331 LIKE LINE OF temp330.
    temp331-n = `items`.
    temp331-v = items.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `activeTitlePress`.
    temp331-v = activetitlepress.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `placement`.
    temp331-v = placement.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `listSelect`.
    temp331-v = listselect.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `afterClose`.
    temp331-v = afterclose.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `beforeClose`.
    temp331-v = beforeclose.
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `initiallyExpanded`.
    temp331-v = z2ui5_cl_util=>boolean_abap_2_json( initiallyexpanded ).
    INSERT temp331 INTO TABLE temp330.
    temp331-n = `groupItems`.
    temp331-v = z2ui5_cl_util=>boolean_abap_2_json( groupitems ).
    INSERT temp331 INTO TABLE temp330.
    result = _generic(
        name   = `MessagePopover`
        t_prop = temp330 ).
  ENDMETHOD.

  METHOD message_strip.
    result = me.
    DATA temp332 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp332.
    DATA temp333 LIKE LINE OF temp332.
    temp333-n = `text`.
    temp333-v = text.
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `type`.
    temp333-v = type.
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `showIcon`.
    temp333-v = z2ui5_cl_util=>boolean_abap_2_json( showicon ).
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `customIcon`.
    temp333-v = customicon.
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `visible`.
    temp333-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `showCloseButton`.
    temp333-v = z2ui5_cl_util=>boolean_abap_2_json( showclosebutton ).
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `class`.
    temp333-v = class.
    INSERT temp333 INTO TABLE temp332.
    temp333-n = `enableFormattedText`.
    temp333-v = z2ui5_cl_util=>boolean_abap_2_json( enableformattedtext ).
    INSERT temp333 INTO TABLE temp332.
    _generic(
        name   = `MessageStrip`
        t_prop = temp332 ).
  ENDMETHOD.

  METHOD message_view.

    DATA temp334 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp334.
    DATA temp335 LIKE LINE OF temp334.
    temp335-n = `items`.
    temp335-v = items.
    INSERT temp335 INTO TABLE temp334.
    temp335-n = `groupItems`.
    temp335-v = z2ui5_cl_util=>boolean_abap_2_json( groupitems ).
    INSERT temp335 INTO TABLE temp334.
    result = _generic( name   = `MessageView`
                       t_prop = temp334 ).
  ENDMETHOD.

  METHOD micro_process_flow.
    DATA temp336 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp336.
    DATA temp337 LIKE LINE OF temp336.
    temp337-n = `id`.
    temp337-v = id.
    INSERT temp337 INTO TABLE temp336.
    temp337-n = `class`.
    temp337-v = class.
    INSERT temp337 INTO TABLE temp336.
    temp337-n = `renderType`.
    temp337-v = rendertype.
    INSERT temp337 INTO TABLE temp336.
    temp337-n = `width`.
    temp337-v = width.
    INSERT temp337 INTO TABLE temp336.
    temp337-n = `ariaLabel`.
    temp337-v = arialabel.
    INSERT temp337 INTO TABLE temp336.
    result = _generic( name   = `MicroProcessFlow`
                       ns     = `commons`
                       t_prop = temp336 ).
  ENDMETHOD.

  METHOD micro_process_flow_item.
    DATA temp338 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp338.
    DATA temp339 LIKE LINE OF temp338.
    temp339-n = `id`.
    temp339-v = id.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `class`.
    temp339-v = class.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `press`.
    temp339-v = press.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `title`.
    temp339-v = title.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `stepWidth`.
    temp339-v = stepwidth.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `state`.
    temp339-v = state.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `key`.
    temp339-v = key.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `icon`.
    temp339-v = icon.
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `showSeparator`.
    temp339-v = z2ui5_cl_util=>boolean_abap_2_json( showseparator ).
    INSERT temp339 INTO TABLE temp338.
    temp339-n = `showIntermediary`.
    temp339-v = z2ui5_cl_util=>boolean_abap_2_json( showintermediary ).
    INSERT temp339 INTO TABLE temp338.
    result = _generic(
        name   = `MicroProcessFlowItem`
        ns     = `commons`
        t_prop = temp338 ).
  ENDMETHOD.

  METHOD mid_column_pages.

    DATA temp340 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp340.
    DATA temp341 LIKE LINE OF temp340.
    temp341-n = `id`.
    temp341-v = id.
    INSERT temp341 INTO TABLE temp340.
    result = _generic( name   = `midColumnPages`
                       ns     = `f`
                       t_prop = temp340 ).

  ENDMETHOD.

  METHOD multi_combobox.
    DATA temp342 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp342.
    DATA temp343 LIKE LINE OF temp342.
    temp343-n = `selectionChange`.
    temp343-v = selectionchange.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `selectedKeys`.
    temp343-v = selectedkeys.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `selectedItems`.
    temp343-v = selecteditems.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `items`.
    temp343-v = items.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `id`.
    temp343-v = id.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `class`.
    temp343-v = class.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `selectionFinish`.
    temp343-v = selectionfinish.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `width`.
    temp343-v = width.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `showSecondaryValues`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( showsecondaryvalues ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `placeholder`.
    temp343-v = placeholder.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `selectedItemId`.
    temp343-v = selecteditemid.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `selectedKey`.
    temp343-v = selectedkey.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `name`.
    temp343-v = name.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `value`.
    temp343-v = value.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `valueState`.
    temp343-v = valuestate.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `valueStateText`.
    temp343-v = valuestatetext.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `textAlign`.
    temp343-v = textalign.
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `visible`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `showValueStateMessage`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `showClearIcon`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( showclearicon ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `showButton`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( showbutton ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `required`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `editable`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `enabled`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `filterSecondaryValues`.
    temp343-v = z2ui5_cl_util=>boolean_abap_2_json( filtersecondaryvalues ).
    INSERT temp343 INTO TABLE temp342.
    temp343-n = `showSelectAll`.
    temp343-v = showselectall.
    INSERT temp343 INTO TABLE temp342.
    result = _generic(
        name   = `MultiComboBox`
        t_prop = temp342 ).
  ENDMETHOD.

  METHOD multi_input.
    DATA temp344 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp344.
    DATA temp345 LIKE LINE OF temp344.
    temp345-n = `tokens`.
    temp345-v = tokens.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `showClearIcon`.
    temp345-v = z2ui5_cl_util=>boolean_abap_2_json( showclearicon ).
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `name`.
    temp345-v = name.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `showValueHelp`.
    temp345-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluehelp ).
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `enabled`.
    temp345-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `suggestionItems`.
    temp345-v = suggestionitems.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `tokenUpdate`.
    temp345-v = tokenupdate.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `submit`.
    temp345-v = submit.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `width`.
    temp345-v = width.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `value`.
    temp345-v = value.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `id`.
    temp345-v = id.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `change`.
    temp345-v = change.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `valueHelpRequest`.
    temp345-v = valuehelprequest.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `class`.
    temp345-v = class.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `visible`.
    temp345-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `required`.
    temp345-v = required.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `valueState`.
    temp345-v = valuestate.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `valueStateText`.
    temp345-v = valuestatetext.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `placeholder`.
    temp345-v = placeholder.
    INSERT temp345 INTO TABLE temp344.
    temp345-n = `showSuggestion`.
    temp345-v = z2ui5_cl_util=>boolean_abap_2_json( showsuggestion ).
    INSERT temp345 INTO TABLE temp344.
    result = _generic(
        name   = `MultiInput`
        t_prop = temp344 ).
  ENDMETHOD.

  METHOD navigation_actions.
    result = _generic( name = `navigationActions`
                       ns   = `f` ).
  ENDMETHOD.

  METHOD nav_container.

    DATA temp346 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp346.
    DATA temp347 LIKE LINE OF temp346.
    temp347-n = `initialPage`.
    temp347-v = initialpage.
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `id`.
    temp347-v = id.
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `height`.
    temp347-v = height.
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `width`.
    temp347-v = width.
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `autoFocus`.
    temp347-v = z2ui5_cl_util=>boolean_abap_2_json( autofocus ).
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `visible`.
    temp347-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp347 INTO TABLE temp346.
    temp347-n = `defaultTransitionName`.
    temp347-v = defaulttransitionname.
    INSERT temp347 INTO TABLE temp346.
    result = _generic( name   = `NavContainer`
                       t_prop = temp346 ).

  ENDMETHOD.

  METHOD network_graph.
    DATA temp348 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp348.
    DATA temp349 LIKE LINE OF temp348.
    temp349-n = `id`.
    temp349-v = id.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `class`.
    temp349-v = class.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `layout`.
    temp349-v = layout.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `height`.
    temp349-v = height.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `width`.
    temp349-v = width.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `nodes`.
    temp349-v = nodes.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `lines`.
    temp349-v = lines.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `groups`.
    temp349-v = groups.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `backgroundColor`.
    temp349-v = backgroundcolor.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `backgroundImage`.
    temp349-v = backgroundimage.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `noDataText`.
    temp349-v = nodatatext.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `orientation`.
    temp349-v = orientation.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `renderType`.
    temp349-v = rendertype.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `afterLayouting`.
    temp349-v = afterlayouting.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `beforeLayouting`.
    temp349-v = beforelayouting.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `failure`.
    temp349-v = failure.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `graphReady`.
    temp349-v = graphready.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `search`.
    temp349-v = search.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `searchSuggest`.
    temp349-v = searchsuggest.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `selectionChange`.
    temp349-v = selectionchange.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `zoomChanged`.
    temp349-v = zoomchanged.
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `enableWheelZoom`.
    temp349-v = z2ui5_cl_util=>boolean_abap_2_json( enablewheelzoom ).
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `enableZoom`.
    temp349-v = z2ui5_cl_util=>boolean_abap_2_json( enablezoom ).
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `noData`.
    temp349-v = z2ui5_cl_util=>boolean_abap_2_json( nodata ).
    INSERT temp349 INTO TABLE temp348.
    temp349-n = `visible`.
    temp349-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp349 INTO TABLE temp348.
    result = _generic( name   = `Graph`
                       ns     = `networkgraph`
                       t_prop = temp348 ).

  ENDMETHOD.

  METHOD node.
    DATA temp350 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp350.
    DATA temp351 LIKE LINE OF temp350.
    temp351-n = `id`.
    temp351-v = id.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `class`.
    temp351-v = class.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `altText`.
    temp351-v = alttext.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `coreNodeSize`.
    temp351-v = corenodesize.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `description`.
    temp351-v = description.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `descriptionLineSize`.
    temp351-v = descriptionlinesize.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `group`.
    temp351-v = group.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `headerCheckBoxState`.
    temp351-v = headercheckboxstate.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `height`.
    temp351-v = height.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `icon`.
    temp351-v = icon.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `iconSize`.
    temp351-v = iconsize.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `iconSize`.
    temp351-v = iconsize.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `key`.
    temp351-v = key.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `maxWidth`.
    temp351-v = maxwidth.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `title`.
    temp351-v = title.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `shape`.
    temp351-v = shape.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `statusIcon`.
    temp351-v = statusicon.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `titleLineSize`.
    temp351-v = titlelinesize.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `width`.
    temp351-v = width.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `x`.
    temp351-v = x.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `y`.
    temp351-v = y.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `attributes`.
    temp351-v = attributes.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `actionButtons`.
    temp351-v = actionbuttons.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `collapseExpand`.
    temp351-v = collapseexpand.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `headerCheckBoxPress`.
    temp351-v = headercheckboxpress.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `hover`.
    temp351-v = hover.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `press`.
    temp351-v = press.
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `collapsed`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( collapsed ).
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `selected`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `showActionLinksButton`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( showactionlinksbutton ).
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `showDetailButton`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( showdetailbutton ).
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `showExpandButton`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( showexpandbutton ).
    INSERT temp351 INTO TABLE temp350.
    temp351-n = `visible`.
    temp351-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp351 INTO TABLE temp350.
    result = _generic(
        name   = `Node`
        ns     = `networkgraph`
        t_prop = temp350 ).

  ENDMETHOD.

  METHOD nodes.
    result = _generic( name = `nodes`
                       ns   = ns ).
  ENDMETHOD.

  METHOD node_image.
    DATA temp352 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp352.
    DATA temp353 LIKE LINE OF temp352.
    temp353-n = `id`.
    temp353-v = id.
    INSERT temp353 INTO TABLE temp352.
    temp353-n = `class`.
    temp353-v = class.
    INSERT temp353 INTO TABLE temp352.
    temp353-n = `height`.
    temp353-v = height.
    INSERT temp353 INTO TABLE temp352.
    temp353-n = `width`.
    temp353-v = width.
    INSERT temp353 INTO TABLE temp352.
    temp353-n = `src`.
    temp353-v = src.
    INSERT temp353 INTO TABLE temp352.
    result = _generic( name   = `NodeImage`
                       ns     = `networkgraph`
                       t_prop = temp352 ).
  ENDMETHOD.

  METHOD noop_layout.
    result = _generic( name = `NoopLayout`
                       ns   = `nglayout` ).
  ENDMETHOD.

  METHOD notification_list.
    DATA temp354 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp354.
    DATA temp355 LIKE LINE OF temp354.
    temp355-n = `id`.
    temp355-v = id.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `class`.
    temp355-v = class.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `footerText`.
    temp355-v = footertext.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingDirection`.
    temp355-v = growingdirection.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingThreshold`.
    temp355-v = growingthreshold.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingTriggerText`.
    temp355-v = growingtriggertext.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `headerLevel`.
    temp355-v = headerlevel.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `headerText`.
    temp355-v = headertext.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `keyboardMode`.
    temp355-v = keyboardmode.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `mode`.
    temp355-v = mode.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `multiSelectMode`.
    temp355-v = multiselectmode.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `noDataText`.
    temp355-v = nodatatext.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `sticky`.
    temp355-v = sticky.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `swipeDirection`.
    temp355-v = swipedirection.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `width`.
    temp355-v = width.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `showSeparators`.
    temp355-v = showseparators.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `beforeOpenContextMenu`.
    temp355-v = beforeopencontextmenu.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `delete`.
    temp355-v = delete.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingFinished`.
    temp355-v = growingfinished.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingStarted`.
    temp355-v = growingstarted.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `itemPress`.
    temp355-v = itempress.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `select`.
    temp355-v = select.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `selectionChange`.
    temp355-v = selectionchange.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `swipe`.
    temp355-v = swipe.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `updateFinished`.
    temp355-v = updatefinished.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `updateStarted`.
    temp355-v = updatestarted.
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growingScrollToLoad`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( growingscrolltoload ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `visible`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `growing`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `includeItemInSelection`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( includeiteminselection ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `inset`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( inset ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `modeAnimationOn`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( modeanimationon ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `rememberSelections`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( rememberselections ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `showNoData`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( shownodata ).
    INSERT temp355 INTO TABLE temp354.
    temp355-n = `showUnread`.
    temp355-v = z2ui5_cl_util=>boolean_abap_2_json( showunread ).
    INSERT temp355 INTO TABLE temp354.
    result = _generic(
        name   = `NotificationList`
        t_prop = temp354 ).
  ENDMETHOD.

  METHOD notification_list_group.
    DATA temp356 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp356.
    DATA temp357 LIKE LINE OF temp356.
    temp357-n = `id`.
    temp357-v = id.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `class`.
    temp357-v = class.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `highlight`.
    temp357-v = highlight.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `highlightText`.
    temp357-v = highlighttext.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `priority`.
    temp357-v = priority.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `title`.
    temp357-v = title.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `type`.
    temp357-v = type.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `onCollapse`.
    temp357-v = oncollapse.
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `visible`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `autoPriority`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( autopriority ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `collapsed`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( collapsed ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `enableCollapseButtonWhenEmpty`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( enablecollapsebuttonwhenempty ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `navigated`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( navigated ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `selected`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `showButtons`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( showbuttons ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `showCloseButton`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( showclosebutton ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `showEmptyGroup`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( showemptygroup ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `showItemsCounter`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( showitemscounter ).
    INSERT temp357 INTO TABLE temp356.
    temp357-n = `unread`.
    temp357-v = z2ui5_cl_util=>boolean_abap_2_json( unread ).
    INSERT temp357 INTO TABLE temp356.
    result = _generic(
                 name   = `NotificationListGroup`
                 t_prop = temp356 ).
  ENDMETHOD.

  METHOD notification_list_item.
    DATA temp358 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp358.
    DATA temp359 LIKE LINE OF temp358.
    temp359-n = `id`.
    temp359-v = id.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `class`.
    temp359-v = class.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `authorAvatarColor`.
    temp359-v = authoravatarcolor.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `authorInitials`.
    temp359-v = authorinitials.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `description`.
    temp359-v = description.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `authorName`.
    temp359-v = authorname.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `authorPicture`.
    temp359-v = authorpicture.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `datetime`.
    temp359-v = datetime.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `counter`.
    temp359-v = counter.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `highlightText`.
    temp359-v = highlighttext.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `priority`.
    temp359-v = priority.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `title`.
    temp359-v = title.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `type`.
    temp359-v = type.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `close`.
    temp359-v = close.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `detailPress`.
    temp359-v = detailpress.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `press`.
    temp359-v = press.
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `visible`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `hideShowMoreButton`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( hideshowmorebutton ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `truncate`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( truncate ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `highlight`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( highlight ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `navigated`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( navigated ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `selected`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `showButtons`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( showbuttons ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `showCloseButton`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( showclosebutton ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `truncate`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( truncate ).
    INSERT temp359 INTO TABLE temp358.
    temp359-n = `unread`.
    temp359-v = z2ui5_cl_util=>boolean_abap_2_json( unread ).
    INSERT temp359 INTO TABLE temp358.
    result = _generic(
                 name   = `NotificationListItem`
                 t_prop = temp358 ).
  ENDMETHOD.

  METHOD no_data.
    result = _generic( name = `noData`
                       ns   = ns ).
  ENDMETHOD.

  METHOD numeric_content.

    DATA temp360 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp360.
    DATA temp361 LIKE LINE OF temp360.
    temp361-n = `value`.
    temp361-v = value.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `icon`.
    temp361-v = icon.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `width`.
    temp361-v = width.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `valueColor`.
    temp361-v = valuecolor.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `truncateValueTo`.
    temp361-v = truncatevalueto.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `state`.
    temp361-v = state.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `scale`.
    temp361-v = scale.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `indicator`.
    temp361-v = indicator.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `iconDescription`.
    temp361-v = icondescription.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `visible`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `nullifyValue`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( nullifyvalue ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `formatterValue`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( formattervalue ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `animateTextChange`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( animatetextchange ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `adaptiveFontSize`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( adaptivefontsize ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `withMargin`.
    temp361-v = z2ui5_cl_util=>boolean_abap_2_json( withmargin ).
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `class`.
    temp361-v = class.
    INSERT temp361 INTO TABLE temp360.
    temp361-n = `press`.
    temp361-v = press.
    INSERT temp361 INTO TABLE temp360.
    result = _generic(
        name   = `NumericContent`
        t_prop = temp360 ).

  ENDMETHOD.

  METHOD numeric_header.

    DATA temp362 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp362.
    DATA temp363 LIKE LINE OF temp362.
    temp363-n = `id`.
    temp363-v = id.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `class`.
    temp363-v = class.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `datatimestamp`.
    temp363-v = datatimestamp.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `press`.
    temp363-v = press.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `details`.
    temp363-v = details.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `detailsMaxLines`.
    temp363-v = detailsmaxlines.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `detailsState`.
    temp363-v = detailsstate.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconAlt`.
    temp363-v = iconalt.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconBackgroundColor`.
    temp363-v = iconbackgroundcolor.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconDisplayShape`.
    temp363-v = icondisplayshape.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconSize`.
    temp363-v = iconsize.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconSrc`.
    temp363-v = iconsrc.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconInitials`.
    temp363-v = iconinitials.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `number`.
    temp363-v = number.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `numberSize`.
    temp363-v = numbersize.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `scale`.
    temp363-v = scale.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `sideIndicatorsAlignment`.
    temp363-v = sideindicatorsalignment.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `state`.
    temp363-v = state.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `statusText`.
    temp363-v = statustext.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `subtitle`.
    temp363-v = subtitle.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `subtitleMaxLines`.
    temp363-v = subtitlemaxlines.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `title`.
    temp363-v = title.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `titleMaxLines`.
    temp363-v = titlemaxlines.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `trend`.
    temp363-v = trend.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `unitOfMeasurement`.
    temp363-v = unitofmeasurement.
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `statusVisible`.
    temp363-v = z2ui5_cl_util=>boolean_abap_2_json( statusvisible ).
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `numberVisible`.
    temp363-v = z2ui5_cl_util=>boolean_abap_2_json( numbervisible ).
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `iconVisible`.
    temp363-v = z2ui5_cl_util=>boolean_abap_2_json( iconvisible ).
    INSERT temp363 INTO TABLE temp362.
    temp363-n = `visible`.
    temp363-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp363 INTO TABLE temp362.
    result = _generic( name   = `NumericHeader`
                       ns     = `f`
                       t_prop = temp362 ).
  ENDMETHOD.

  METHOD numeric_side_indicator.
    DATA temp364 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp364.
    DATA temp365 LIKE LINE OF temp364.
    temp365-n = `id`.
    temp365-v = id.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `class`.
    temp365-v = class.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `unit`.
    temp365-v = unit.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `title`.
    temp365-v = title.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `state`.
    temp365-v = state.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `number`.
    temp365-v = number.
    INSERT temp365 INTO TABLE temp364.
    temp365-n = `visible`.
    temp365-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp365 INTO TABLE temp364.
    result = _generic( name   = `NumericSideIndicator`
                       ns     = `f`
                       t_prop = temp364 ).
  ENDMETHOD.

  METHOD object_attribute.
    result = me.

    DATA temp366 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp366.
    DATA temp367 LIKE LINE OF temp366.
    temp367-n = `title`.
    temp367-v = title.
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `textDirection`.
    temp367-v = textdirection.
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `ariaHasPopup`.
    temp367-v = ariahaspopup.
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `press`.
    temp367-v = press.
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `active`.
    temp367-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `visible`.
    temp367-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp367 INTO TABLE temp366.
    temp367-n = `text`.
    temp367-v = text.
    INSERT temp367 INTO TABLE temp366.
    _generic( name   = `ObjectAttribute`
              t_prop = temp366 ).
  ENDMETHOD.

  METHOD object_header.

    DATA temp368 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp368.
    DATA temp369 LIKE LINE OF temp368.
    temp369-n = `backgrounddesign`.
    temp369-v = backgrounddesign.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `condensed`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( condensed ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `fullscreenoptimized`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( fullscreenoptimized ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `icon`.
    temp369-v = icon.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `iconactive`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( iconactive ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `iconalt`.
    temp369-v = iconalt.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `icondensityaware`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `icontooltip`.
    temp369-v = icontooltip.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `imageShape`.
    temp369-v = imageshape.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `intro`.
    temp369-v = intro.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `introactive`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( introactive ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `introhref`.
    temp369-v = introhref.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `introtarget`.
    temp369-v = introtarget.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `introtextdirection`.
    temp369-v = introtextdirection.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `number`.
    temp369-v = number.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `numberstate`.
    temp369-v = numberstate.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `numbertextdirection`.
    temp369-v = numbertextdirection.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `numberunit`.
    temp369-v = numberunit.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `responsive`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( responsive ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `showtitleselector`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( showtitleselector ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `title`.
    temp369-v = title.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titleactive`.
    temp369-v = z2ui5_cl_util=>boolean_abap_2_json( titleactive ).
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titlehref`.
    temp369-v = titlehref.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titlelevel`.
    temp369-v = titlelevel.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titleselectortooltip`.
    temp369-v = titleselectortooltip.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titletarget`.
    temp369-v = titletarget.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titletextdirection`.
    temp369-v = titletextdirection.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `iconpress`.
    temp369-v = iconpress.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `intropress`.
    temp369-v = intropress.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titlepress`.
    temp369-v = titlepress.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `titleselectorpress`.
    temp369-v = titleselectorpress.
    INSERT temp369 INTO TABLE temp368.
    temp369-n = `class`.
    temp369-v = class.
    INSERT temp369 INTO TABLE temp368.
    result = _generic(
        name   = `ObjectHeader`
        t_prop = temp368 ).
  ENDMETHOD.

  METHOD object_identifier.
    DATA temp370 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp370.
    DATA temp371 LIKE LINE OF temp370.
    temp371-n = `emptyIndicatorMode`.
    temp371-v = emptyindicatormode.
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `text`.
    temp371-v = text.
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `textDirection`.
    temp371-v = textdirection.
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `title`.
    temp371-v = title.
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `titleActive`.
    temp371-v = titleactive.
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `visible`.
    temp371-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp371 INTO TABLE temp370.
    temp371-n = `titlePress`.
    temp371-v = titlepress.
    INSERT temp371 INTO TABLE temp370.
    result = _generic( name   = `ObjectIdentifier`
                       t_prop = temp370 ).
  ENDMETHOD.

  METHOD object_list_item.
    DATA temp372 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp372.
    DATA temp373 LIKE LINE OF temp372.
    temp373-n = `activeIcon`.
    temp373-v = activeicon.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `icon`.
    temp373-v = icon.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `intro`.
    temp373-v = intro.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `introTextDirection`.
    temp373-v = introtextdirection.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `number`.
    temp373-v = number.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `numberState`.
    temp373-v = numberstate.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `numberTextDirection`.
    temp373-v = numbertextdirection.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `numberUnit`.
    temp373-v = numberunit.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `title`.
    temp373-v = title.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `titleTextDirection`.
    temp373-v = titletextdirection.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `iconDensityAware`.
    temp373-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `press`.
    temp373-v = press.
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `selected`.
    temp373-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp373 INTO TABLE temp372.
    temp373-n = `type`.
    temp373-v = type.
    INSERT temp373 INTO TABLE temp372.
    result = _generic(
        name   = `ObjectListItem`
        t_prop = temp372 ).
  ENDMETHOD.

  METHOD object_marker.
    DATA temp374 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp374.
    DATA temp375 LIKE LINE OF temp374.
    temp375-n = `additionalInfo`.
    temp375-v = additionalinfo.
    INSERT temp375 INTO TABLE temp374.
    temp375-n = `type`.
    temp375-v = type.
    INSERT temp375 INTO TABLE temp374.
    temp375-n = `visible`.
    temp375-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp375 INTO TABLE temp374.
    temp375-n = `press`.
    temp375-v = press.
    INSERT temp375 INTO TABLE temp374.
    temp375-n = `visibility`.
    temp375-v = visibility.
    INSERT temp375 INTO TABLE temp374.
    result = _generic( name   = `ObjectMarker`
                       t_prop = temp374 ).
  ENDMETHOD.

  METHOD object_number.
    result = me.
    DATA temp376 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp376.
    DATA temp377 LIKE LINE OF temp376.
    temp377-n = `emphasized`.
    temp377-v = z2ui5_cl_util=>boolean_abap_2_json( emphasized ).
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `number`.
    temp377-v = number.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `state`.
    temp377-v = state.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `id`.
    temp377-v = id.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `class`.
    temp377-v = class.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `textAlign`.
    temp377-v = textalign.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `textDirection`.
    temp377-v = textdirection.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `emptyIndicatorMode`.
    temp377-v = emptyindicatormode.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `numberunit`.
    temp377-v = numberunit.
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `active`.
    temp377-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `inverted`.
    temp377-v = z2ui5_cl_util=>boolean_abap_2_json( inverted ).
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `visible`.
    temp377-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp377 INTO TABLE temp376.
    temp377-n = `unit`.
    temp377-v = unit.
    INSERT temp377 INTO TABLE temp376.
    _generic( name   = `ObjectNumber`
              t_prop = temp376 ).
  ENDMETHOD.

  METHOD object_page_dyn_header_title.
    result = _generic( name = `ObjectPageDynamicHeaderTitle`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD object_page_header.
    result = me.
    DATA temp378 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp378.
    DATA temp379 LIKE LINE OF temp378.
    temp379-n = `isActionAreaAlwaysVisible`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( isactionareaalwaysvisible ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `isObjectIconAlwaysVisible`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( isobjecticonalwaysvisible ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `isObjectSubtitleAlwaysVisible`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( isobjectsubtitlealwaysvisible ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `isObjectTitleAlwaysVisible`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( isobjecttitlealwaysvisible ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markChanges`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( markchanges ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markFavorite`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( markfavorite ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markFlagged`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( markflagged ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markLocked`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( marklocked ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectImageDensityAware`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( objectimagedensityaware ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `showMarkers`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( showmarkers ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `showPlaceholder`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( showplaceholder ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `showTitleSelector`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( showtitleselector ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `visible`.
    temp379-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectImageAlt`.
    temp379-v = objectimagealt.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectImageBackgroundColor`.
    temp379-v = objectimagebackgroundcolor.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectImageURI`.
    temp379-v = objectimageuri.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectSubtitle`.
    temp379-v = objectsubtitle.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectTitle`.
    temp379-v = objecttitle.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markChangesPress`.
    temp379-v = markchangespress.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `markLockedPress`.
    temp379-v = marklockedpress.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `titleSelectorPress`.
    temp379-v = titleselectorpress.
    INSERT temp379 INTO TABLE temp378.
    temp379-n = `objectImageShape`.
    temp379-v = objectimageshape.
    INSERT temp379 INTO TABLE temp378.
    _generic(
        name   = `ObjectPageHeader`
        ns     = `uxap`
        t_prop = temp378 ).
  ENDMETHOD.

  METHOD object_page_header_action_btn.
    result = me.
    DATA temp380 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp380.
    DATA temp381 LIKE LINE OF temp380.
    temp381-n = `activeIcon`.
    temp381-v = activeicon.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `ariaHasPopup`.
    temp381-v = ariahaspopup.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `icon`.
    temp381-v = icon.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `importance`.
    temp381-v = importance.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `text`.
    temp381-v = text.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `textDirection`.
    temp381-v = textdirection.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `type`.
    temp381-v = type.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `width`.
    temp381-v = width.
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `enabled`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `hideIcon`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( hideicon ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `hideText`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( hidetext ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `iconDensityAware`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `iconFirst`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( iconfirst ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `visible`.
    temp381-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp381 INTO TABLE temp380.
    temp381-n = `press`.
    temp381-v = press.
    INSERT temp381 INTO TABLE temp380.
    _generic( name   = `ObjectPageHeaderActionButton`
              ns     = `uxap`
              t_prop = temp380 ).
  ENDMETHOD.

  METHOD object_page_layout.
    DATA temp382 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp382.
    DATA temp383 LIKE LINE OF temp382.
    temp383-n = `showTitleInHeaderContent`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showtitleinheadercontent ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showEditHeaderButton`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showeditheaderbutton ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `alwaysShowContentHeader`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( alwaysshowcontentheader ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `enableLazyLoading`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( enablelazyloading ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `flexEnabled`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( flexenabled ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `headerContentPinnable`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( headercontentpinnable ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `headerContentPinned`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( headercontentpinned ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `isChildPage`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( ischildpage ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `preserveHeaderStateOnScroll`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( preserveheaderstateonscroll ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showAnchorBar`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showanchorbar ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showAnchorBarPopover`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showanchorbarpopover ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showHeaderContent`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showheadercontent ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showOnlyHighImportance`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showonlyhighimportance ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `subSectionLayout`.
    temp383-v = subsectionlayout.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `toggleHeaderOnTitleClick`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( toggleheaderontitleclick ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `useIconTabBar`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( useicontabbar ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `useTwoColumnsForLargeScreen`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( usetwocolumnsforlargescreen ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `visible`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `backgroundDesignAnchorBar`.
    temp383-v = backgrounddesignanchorbar.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `height`.
    temp383-v = height.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `sectionTitleLevel`.
    temp383-v = sectiontitlelevel.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `editHeaderButtonPress`.
    temp383-v = editheaderbuttonpress.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `upperCaseAnchorBar`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( uppercaseanchorbar ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `beforeNavigate`.
    temp383-v = beforenavigate.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `headerContentPinnedStateChange`.
    temp383-v = headercontentpinnedstatechange.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `navigate`.
    temp383-v = navigate.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `sectionChange`.
    temp383-v = sectionchange.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `subSectionVisibilityChange`.
    temp383-v = subsectionvisibilitychange.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `toggleAnchorBar`.
    temp383-v = toggleanchorbar.
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `showFooter`.
    temp383-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp383 INTO TABLE temp382.
    temp383-n = `class`.
    temp383-v = class.
    INSERT temp383 INTO TABLE temp382.
    result = _generic(
        name   = `ObjectPageLayout`
        ns     = `uxap`
        t_prop = temp382 ).
  ENDMETHOD.

  METHOD object_page_section.
    DATA temp384 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp384.
    DATA temp385 LIKE LINE OF temp384.
    temp385-n = `titleUppercase`.
    temp385-v = z2ui5_cl_util=>boolean_abap_2_json( titleuppercase ).
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `title`.
    temp385-v = title.
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `id`.
    temp385-v = id.
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `anchorBarButtonColor`.
    temp385-v = anchorbarbuttoncolor.
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `titleLevel`.
    temp385-v = titlelevel.
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `titleVisible`.
    temp385-v = z2ui5_cl_util=>boolean_abap_2_json( titlevisible ).
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `showTitle`.
    temp385-v = z2ui5_cl_util=>boolean_abap_2_json( showtitle ).
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `visible`.
    temp385-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `wrapTitle`.
    temp385-v = z2ui5_cl_util=>boolean_abap_2_json( wraptitle ).
    INSERT temp385 INTO TABLE temp384.
    temp385-n = `importance`.
    temp385-v = importance.
    INSERT temp385 INTO TABLE temp384.
    result = _generic(
                 name   = `ObjectPageSection`
                 ns     = `uxap`
                 t_prop = temp384 ).
  ENDMETHOD.

  METHOD object_page_sub_section.
    DATA temp386 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp386.
    DATA temp387 LIKE LINE OF temp386.
    temp387-n = `id`.
    temp387-v = id.
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `mode`.
    temp387-v = mode.
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `importance`.
    temp387-v = importance.
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `titleLevel`.
    temp387-v = titlelevel.
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `titleVisible`.
    temp387-v = z2ui5_cl_util=>boolean_abap_2_json( titlevisible ).
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `showTitle`.
    temp387-v = z2ui5_cl_util=>boolean_abap_2_json( showtitle ).
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `titleUppercase`.
    temp387-v = z2ui5_cl_util=>boolean_abap_2_json( titleuppercase ).
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `visible`.
    temp387-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp387 INTO TABLE temp386.
    temp387-n = `title`.
    temp387-v = title.
    INSERT temp387 INTO TABLE temp386.
    result = _generic(
                 name   = `ObjectPageSubSection`
                 ns     = `uxap`
                 t_prop = temp386 ).
  ENDMETHOD.

  METHOD object_status.
    DATA temp388 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp388.
    DATA temp389 LIKE LINE OF temp388.
    temp389-n = `active`.
    temp389-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `emptyIndicatorMode`.
    temp389-v = emptyindicatormode.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `icon`.
    temp389-v = icon.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `iconDensityAware`.
    temp389-v = z2ui5_cl_util=>boolean_abap_2_json( icondensityaware ).
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `inverted`.
    temp389-v = z2ui5_cl_util=>boolean_abap_2_json( inverted ).
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `state`.
    temp389-v = state.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `stateAnnouncementText`.
    temp389-v = stateannouncementtext.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `text`.
    temp389-v = text.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `id`.
    temp389-v = id.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `class`.
    temp389-v = class.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `textDirection`.
    temp389-v = textdirection.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `title`.
    temp389-v = title.
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `visible`.
    temp389-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp389 INTO TABLE temp388.
    temp389-n = `press`.
    temp389-v = press.
    INSERT temp389 INTO TABLE temp388.
    result = _generic(
        name   = `ObjectStatus`
        t_prop = temp388 ).
  ENDMETHOD.

  METHOD overflow_toolbar.
    DATA temp390 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp390.
    DATA temp391 LIKE LINE OF temp390.
    temp391-n = `press`.
    temp391-v = press.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `text`.
    temp391-v = text.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `active`.
    temp391-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `visible`.
    temp391-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `asyncMode`.
    temp391-v = z2ui5_cl_util=>boolean_abap_2_json( asyncmode ).
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `enabled`.
    temp391-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `design`.
    temp391-v = design.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `type`.
    temp391-v = type.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `style`.
    temp391-v = style.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `id`.
    temp391-v = id.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `class`.
    temp391-v = class.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `width`.
    temp391-v = width.
    INSERT temp391 INTO TABLE temp390.
    temp391-n = `height`.
    temp391-v = height.
    INSERT temp391 INTO TABLE temp390.
    result = _generic( name   = `OverflowToolbar`
                       t_prop = temp390 ).
  ENDMETHOD.

  METHOD overflow_toolbar_button.
    result = me.
    DATA temp392 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp392.
    DATA temp393 LIKE LINE OF temp392.
    temp393-n = `id`.
    temp393-v = id.
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `press`.
    temp393-v = press.
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `text`.
    temp393-v = text.
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `enabled`.
    temp393-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `icon`.
    temp393-v = icon.
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `type`.
    temp393-v = type.
    INSERT temp393 INTO TABLE temp392.
    temp393-n = `tooltip`.
    temp393-v = tooltip.
    INSERT temp393 INTO TABLE temp392.
    _generic( name   = `OverflowToolbarButton`
              t_prop = temp392 ).
  ENDMETHOD.

  METHOD overflow_toolbar_menu_button.
    DATA temp394 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp394.
    DATA temp395 LIKE LINE OF temp394.
    temp395-n = `buttonMode`.
    temp395-v = buttonmode.
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `defaultAction`.
    temp395-v = defaultaction.
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `text`.
    temp395-v = text.
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `enabled`.
    temp395-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `icon`.
    temp395-v = icon.
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `type`.
    temp395-v = type.
    INSERT temp395 INTO TABLE temp394.
    temp395-n = `tooltip`.
    temp395-v = tooltip.
    INSERT temp395 INTO TABLE temp394.
    result = _generic( name   = `OverflowToolbarMenuButton`
                       t_prop = temp394 ).
  ENDMETHOD.

  METHOD overflow_toolbar_toggle_button.
    result = me.
    DATA temp396 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp396.
    DATA temp397 LIKE LINE OF temp396.
    temp397-n = `press`.
    temp397-v = press.
    INSERT temp397 INTO TABLE temp396.
    temp397-n = `text`.
    temp397-v = text.
    INSERT temp397 INTO TABLE temp396.
    temp397-n = `enabled`.
    temp397-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp397 INTO TABLE temp396.
    temp397-n = `icon`.
    temp397-v = icon.
    INSERT temp397 INTO TABLE temp396.
    temp397-n = `type`.
    temp397-v = type.
    INSERT temp397 INTO TABLE temp396.
    temp397-n = `tooltip`.
    temp397-v = tooltip.
    INSERT temp397 INTO TABLE temp396.
    _generic( name   = `OverflowToolbarToggleButton`
              t_prop = temp396 ).
  ENDMETHOD.

  METHOD page.
    DATA temp398 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp398.
    DATA temp399 LIKE LINE OF temp398.
    temp399-n = `title`.
    temp399-v = title.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `showNavButton`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( shownavbutton ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `navButtonPress`.
    temp399-v = navbuttonpress.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `showHeader`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( showheader ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `class`.
    temp399-v = class.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `backgroundDesign`.
    temp399-v = backgrounddesign.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `navButtonTooltip`.
    temp399-v = navbuttontooltip.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `titleAlignment`.
    temp399-v = titlealignment.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `titleLevel`.
    temp399-v = titlelevel.
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `contentOnlyBusy`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( contentonlybusy ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `enableScrolling`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( enablescrolling ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `floatingFooter`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( floatingfooter ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `showFooter`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `showSubHeader`.
    temp399-v = z2ui5_cl_util=>boolean_abap_2_json( showsubheader ).
    INSERT temp399 INTO TABLE temp398.
    temp399-n = `id`.
    temp399-v = id.
    INSERT temp399 INTO TABLE temp398.
    result = _generic(
                 name   = `Page`
                 ns     = ns
                 t_prop = temp398 ).
  ENDMETHOD.

  METHOD pages.
    result = _generic( `pages` ).

  ENDMETHOD.

  METHOD paging_button.
    result = me.
    DATA temp400 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp400.
    DATA temp401 LIKE LINE OF temp400.
    temp401-n = `count`.
    temp401-v = count.
    INSERT temp401 INTO TABLE temp400.
    temp401-n = `nextButtonTooltip`.
    temp401-v = nextbuttontooltip.
    INSERT temp401 INTO TABLE temp400.
    temp401-n = `position`.
    temp401-v = position.
    INSERT temp401 INTO TABLE temp400.
    temp401-n = `previousButtonTooltip`.
    temp401-v = previousbuttontooltip.
    INSERT temp401 INTO TABLE temp400.
    _generic( name   = `PagingButton`
              t_prop = temp400 ).
  ENDMETHOD.

  METHOD panel.

    DATA temp402 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp402.
    DATA temp403 LIKE LINE OF temp402.
    temp403-n = `expandable`.
    temp403-v = z2ui5_cl_util=>boolean_abap_2_json( expandable ).
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `expanded`.
    temp403-v = z2ui5_cl_util=>boolean_abap_2_json( expanded ).
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `stickyHeader`.
    temp403-v = z2ui5_cl_util=>boolean_abap_2_json( stickyheader ).
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `expandAnimation`.
    temp403-v = z2ui5_cl_util=>boolean_abap_2_json( expandanimation ).
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `visible`.
    temp403-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `height`.
    temp403-v = height.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `backgroundDesign`.
    temp403-v = backgrounddesign.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `width`.
    temp403-v = width.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `id`.
    temp403-v = id.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `class`.
    temp403-v = class.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `expand`.
    temp403-v = expand.
    INSERT temp403 INTO TABLE temp402.
    temp403-n = `headerText`.
    temp403-v = headertext.
    INSERT temp403 INTO TABLE temp402.
    result = _generic(
                 name   = `Panel`
                 t_prop = temp402 ).

  ENDMETHOD.

  METHOD pane_container.
    DATA temp404 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp404.
    DATA temp405 LIKE LINE OF temp404.
    temp405-n = `resize`.
    temp405-v = resize.
    INSERT temp405 INTO TABLE temp404.
    temp405-n = `orientation`.
    temp405-v = orientation.
    INSERT temp405 INTO TABLE temp404.
    result = _generic( name   = `PaneContainer`
                       ns     = `layout`
                       t_prop = temp404 ).
  ENDMETHOD.

  METHOD planning_calendar.
    DATA temp406 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp406.
    DATA temp407 LIKE LINE OF temp406.
    temp407-n = `rows`.
    temp407-v = rows.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `startDate`.
    temp407-v = startdate.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `id`.
    temp407-v = id.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `class`.
    temp407-v = class.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `appointmentHeight`.
    temp407-v = appointmentheight.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `appointmentRoundWidth`.
    temp407-v = appointmentroundwidth.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `builtInViews`.
    temp407-v = builtinviews.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `calendarWeekNumbering`.
    temp407-v = calendarweeknumbering.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `firstDayOfWeek`.
    temp407-v = firstdayofweek.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `groupAppointmentsMode`.
    temp407-v = groupappointmentsmode.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `height`.
    temp407-v = height.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `iconShape`.
    temp407-v = iconshape.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `maxDate`.
    temp407-v = maxdate.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `minDate`.
    temp407-v = mindate.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `noDataText`.
    temp407-v = nodatatext.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `primaryCalendarType`.
    temp407-v = primarycalendartype.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `secondaryCalendarType`.
    temp407-v = secondarycalendartype.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `appointmentsVisualization`.
    temp407-v = appointmentsvisualization.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `appointmentSelect`.
    temp407-v = appointmentselect.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `intervalSelect`.
    temp407-v = intervalselect.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `rowHeaderPress`.
    temp407-v = rowheaderpress.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `rowSelectionChange`.
    temp407-v = rowselectionchange.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `startDateChange`.
    temp407-v = startdatechange.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `viewChange`.
    temp407-v = viewchange.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `stickyHeader`.
    temp407-v = stickyheader.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `viewKey`.
    temp407-v = viewkey.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `width`.
    temp407-v = width.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `singleSelection`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( singleselection ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `showRowHeaders`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( showrowheaders ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `multipleAppointmentsSelection`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( multipleappointmentsselection ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `showIntervalHeaders`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( showintervalheaders ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `showEmptyIntervalHeaders`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( showemptyintervalheaders ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `showWeekNumbers`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( showweeknumbers ).
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `legend`.
    temp407-v = legend.
    INSERT temp407 INTO TABLE temp406.
    temp407-n = `showDayNamesLine`.
    temp407-v = z2ui5_cl_util=>boolean_abap_2_json( showdaynamesline ).
    INSERT temp407 INTO TABLE temp406.
    result = _generic(
        name   = `PlanningCalendar`
        t_prop = temp406 ).
  ENDMETHOD.

  METHOD planning_calendar_legend.
    DATA temp408 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp408.
    DATA temp409 LIKE LINE OF temp408.
    temp409-n = `id`.
    temp409-v = id.
    INSERT temp409 INTO TABLE temp408.
    temp409-n = `items`.
    temp409-v = items.
    INSERT temp409 INTO TABLE temp408.
    temp409-n = `appointmentItems`.
    temp409-v = appointmentitems.
    INSERT temp409 INTO TABLE temp408.
    temp409-n = `columnWidth`.
    temp409-v = columnwidth.
    INSERT temp409 INTO TABLE temp408.
    temp409-n = `visible`.
    temp409-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp409 INTO TABLE temp408.
    temp409-n = `standardItems`.
    temp409-v = standarditems.
    INSERT temp409 INTO TABLE temp408.
    result = _generic(
                 name   = `PlanningCalendarLegend`
                 t_prop = temp408 ).

  ENDMETHOD.

  METHOD planning_calendar_row.
    DATA temp410 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp410.
    DATA temp411 LIKE LINE OF temp410.
    temp411-n = `appointments`.
    temp411-v = appointments.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `intervalHeaders`.
    temp411-v = intervalheaders.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `id`.
    temp411-v = id.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `class`.
    temp411-v = class.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `icon`.
    temp411-v = icon.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `title`.
    temp411-v = title.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `key`.
    temp411-v = key.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `noAppointmentsText`.
    temp411-v = noappointmentstext.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `nonWorkingHours`.
    temp411-v = nonworkinghours.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `rowHeaderDescription`.
    temp411-v = rowheaderdescription.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `nonworkingdays`.
    temp411-v = nonworkingdays.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `enableAppointmentsCreate`.
    temp411-v = z2ui5_cl_util=>boolean_abap_2_json( enableappointmentscreate ).
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `appointmentResize`.
    temp411-v = appointmentresize.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `appointmentDrop`.
    temp411-v = appointmentdrop.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `appointmentDragEnter`.
    temp411-v = appointmentdragenter.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `appointmentCreate`.
    temp411-v = appointmentcreate.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `selected`.
    temp411-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `nonWorkingDays`.
    temp411-v = nonworkingdays.
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `enableAppointmentsResize`.
    temp411-v = z2ui5_cl_util=>boolean_abap_2_json( enableappointmentsresize ).
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `enableAppointmentsDragAndDrop`.
    temp411-v = z2ui5_cl_util=>boolean_abap_2_json( enableappointmentsdraganddrop ).
    INSERT temp411 INTO TABLE temp410.
    temp411-n = `text`.
    temp411-v = text.
    INSERT temp411 INTO TABLE temp410.
    result = _generic(
        name   = `PlanningCalendarRow`
        t_prop = temp410 ).

  ENDMETHOD.

  METHOD planning_calendar_view.
    DATA temp412 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp412.
    DATA temp413 LIKE LINE OF temp412.
    temp413-n = `appointmentHeight`.
    temp413-v = appointmentheight.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `description`.
    temp413-v = description.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalLabelFormatter`.
    temp413-v = intervallabelformatter.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalSize`.
    temp413-v = intervalsize.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalsL`.
    temp413-v = intervalsl.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalsM`.
    temp413-v = intervalsm.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalsS`.
    temp413-v = intervalss.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `intervalType`.
    temp413-v = intervaltype.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `key`.
    temp413-v = key.
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `relative`.
    temp413-v = z2ui5_cl_util=>boolean_abap_2_json( relative ).
    INSERT temp413 INTO TABLE temp412.
    temp413-n = `showSubIntervals`.
    temp413-v = z2ui5_cl_util=>boolean_abap_2_json( showsubintervals ).
    INSERT temp413 INTO TABLE temp412.
    result = _generic(
        name   = `PlanningCalendarView`
        t_prop = temp412 ).
  ENDMETHOD.

  METHOD points.
    result = _generic( name = `points`
                       ns   = `mchart` ).
  ENDMETHOD.

  METHOD popover.
    DATA temp414 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp414.
    DATA temp415 LIKE LINE OF temp414.
    temp415-n = `id`.
    temp415-v = id.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `title`.
    temp415-v = title.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `class`.
    temp415-v = class.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `placement`.
    temp415-v = placement.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `initialFocus`.
    temp415-v = initialfocus.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `contentHeight`.
    temp415-v = contentheight.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `showHeader`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( showheader ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `showArrow`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( showarrow ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `resizable`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `modal`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( modal ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `horizontalScrolling`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( horizontalscrolling ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `verticalScrolling`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( verticalscrolling ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `visible`.
    temp415-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `offsetX`.
    temp415-v = offsetx.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `offsetY`.
    temp415-v = offsety.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `contentMinWidth`.
    temp415-v = contentminwidth.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `titleAlignment`.
    temp415-v = titlealignment.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `contentWidth`.
    temp415-v = contentwidth.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `afterClose`.
    temp415-v = afterclose.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `afterOpen`.
    temp415-v = afteropen.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `beforeClose`.
    temp415-v = beforeclose.
    INSERT temp415 INTO TABLE temp414.
    temp415-n = `beforeOpen`.
    temp415-v = beforeopen.
    INSERT temp415 INTO TABLE temp414.
    result = _generic(
        name   = `Popover`
        t_prop = temp414 ).
  ENDMETHOD.

  METHOD process_flow.
    DATA temp416 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp416.
    DATA temp417 LIKE LINE OF temp416.
    temp417-n = `id`.
    temp417-v = id.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `foldedCorners`.
    temp417-v = z2ui5_cl_util=>boolean_abap_2_json( foldedcorners ).
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `scrollable`.
    temp417-v = z2ui5_cl_util=>boolean_abap_2_json( scrollable ).
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `showLabels`.
    temp417-v = z2ui5_cl_util=>boolean_abap_2_json( showlabels ).
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `visible`.
    temp417-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `wheelZoomable`.
    temp417-v = z2ui5_cl_util=>boolean_abap_2_json( wheelzoomable ).
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `headerPress`.
    temp417-v = headerpress.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `labelPress`.
    temp417-v = labelpress.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `nodePress`.
    temp417-v = nodepress.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `onError`.
    temp417-v = onerror.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `lanes`.
    temp417-v = lanes.
    INSERT temp417 INTO TABLE temp416.
    temp417-n = `nodes`.
    temp417-v = nodes.
    INSERT temp417 INTO TABLE temp416.
    result = _generic(
                 name   = `ProcessFlow`
                 ns     = 'commons'
                 t_prop = temp416 ).
  ENDMETHOD.

  METHOD process_flow_lane_header.

    DATA temp418 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp418.
    DATA temp419 LIKE LINE OF temp418.
    temp419-n = `iconSrc`.
    temp419-v = iconsrc.
    INSERT temp419 INTO TABLE temp418.
    temp419-n = `laneId`.
    temp419-v = laneid.
    INSERT temp419 INTO TABLE temp418.
    temp419-n = `position`.
    temp419-v = position.
    INSERT temp419 INTO TABLE temp418.
    temp419-n = `state`.
    temp419-v = state.
    INSERT temp419 INTO TABLE temp418.
    temp419-n = `text`.
    temp419-v = text.
    INSERT temp419 INTO TABLE temp418.
    temp419-n = `zoomLevel`.
    temp419-v = zoomlevel.
    INSERT temp419 INTO TABLE temp418.
    result = _generic( name   = `ProcessFlowLaneHeader`
                       ns     = 'commons'
                       t_prop = temp418 ).
  ENDMETHOD.

  METHOD process_flow_node.
    DATA temp420 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp420.
    DATA temp421 LIKE LINE OF temp420.
    temp421-n = `laneId`.
    temp421-v = laneid.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `nodeId`.
    temp421-v = nodeid.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `title`.
    temp421-v = title.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `titleAbbreviation`.
    temp421-v = titleabbreviation.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `children`.
    temp421-v = children.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `state`.
    temp421-v = state.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `stateText`.
    temp421-v = statetext.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `texts`.
    temp421-v = texts.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `highlighted`.
    temp421-v = z2ui5_cl_util=>boolean_abap_2_json( highlighted ).
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `focused`.
    temp421-v = z2ui5_cl_util=>boolean_abap_2_json( focused ).
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `selected`.
    temp421-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `tag`.
    temp421-v = tag.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `texts`.
    temp421-v = texts.
    INSERT temp421 INTO TABLE temp420.
    temp421-n = `type`.
    temp421-v = type.
    INSERT temp421 INTO TABLE temp420.
    result = _generic(
                 name   = `ProcessFlowNode`
                 ns     = 'commons'
                 t_prop = temp420 ).
  ENDMETHOD.

  METHOD progress_indicator.
    result = me.
    DATA temp422 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp422.
    DATA temp423 LIKE LINE OF temp422.
    temp423-n = `class`.
    temp423-v = class.
    INSERT temp423 INTO TABLE temp422.
    temp423-n = `percentValue`.
    temp423-v = percentvalue.
    INSERT temp423 INTO TABLE temp422.
    temp423-n = `displayValue`.
    temp423-v = displayvalue.
    INSERT temp423 INTO TABLE temp422.
    temp423-n = `showValue`.
    temp423-v = z2ui5_cl_util=>boolean_abap_2_json( showvalue ).
    INSERT temp423 INTO TABLE temp422.
    temp423-n = `visible`.
    temp423-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp423 INTO TABLE temp422.
    temp423-n = `state`.
    temp423-v = state.
    INSERT temp423 INTO TABLE temp422.
    _generic( name   = `ProgressIndicator`
              t_prop = temp422 ).
  ENDMETHOD.

  METHOD property_threshold.
    DATA temp424 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp424.
    DATA temp425 LIKE LINE OF temp424.
    temp425-n = `id`.
    temp425-v = id.
    INSERT temp425 INTO TABLE temp424.
    temp425-n = `class`.
    temp425-v = class.
    INSERT temp425 INTO TABLE temp424.
    temp425-n = `ariaLabel`.
    temp425-v = arialabel.
    INSERT temp425 INTO TABLE temp424.
    temp425-n = `fillColor`.
    temp425-v = fillcolor.
    INSERT temp425 INTO TABLE temp424.
    temp425-n = `toValue`.
    temp425-v = tovalue.
    INSERT temp425 INTO TABLE temp424.
    temp425-n = `visible`.
    temp425-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp425 INTO TABLE temp424.
    result = _generic( name   = `PropertyThreshold`
                       ns     = `si`
                       t_prop = temp424 ).
  ENDMETHOD.

  METHOD property_thresholds.
    result = _generic( name = `propertyThresholds`
                       ns   = `si` ).
  ENDMETHOD.

  METHOD proportion_zoom_strategy.
    DATA temp426 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp426.
    DATA temp427 LIKE LINE OF temp426.
    temp427-n = `zoomLevel`.
    temp427-v = zoomlevel.
    INSERT temp427 INTO TABLE temp426.
    result = _generic( name   = `ProportionZoomStrategy`
                       ns     = `axistime`
                       t_prop = temp426 ).
  ENDMETHOD.

  METHOD quick_view.
    DATA temp428 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp428.
    DATA temp429 LIKE LINE OF temp428.
    temp429-n = `placement`.
    temp429-v = placement.
    INSERT temp429 INTO TABLE temp428.
    temp429-n = `width`.
    temp429-v = width.
    INSERT temp429 INTO TABLE temp428.
    temp429-n = `afterClose`.
    temp429-v = afterclose.
    INSERT temp429 INTO TABLE temp428.
    temp429-n = `afterOpen`.
    temp429-v = afteropen.
    INSERT temp429 INTO TABLE temp428.
    temp429-n = `beforeClose`.
    temp429-v = beforeclose.
    INSERT temp429 INTO TABLE temp428.
    temp429-n = `beforeOpen`.
    temp429-v = beforeopen.
    INSERT temp429 INTO TABLE temp428.
    result = _generic( name   = `QuickView`
                       t_prop = temp428 ).
  ENDMETHOD.

  METHOD quick_view_group.
    DATA temp430 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp430.
    DATA temp431 LIKE LINE OF temp430.
    temp431-n = `heading`.
    temp431-v = heading.
    INSERT temp431 INTO TABLE temp430.
    temp431-n = `visible`.
    temp431-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp431 INTO TABLE temp430.
    result = _generic( name   = `QuickViewGroup`
                       t_prop = temp430 ).
  ENDMETHOD.

  METHOD quick_view_group_element.
    DATA temp432 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp432.
    DATA temp433 LIKE LINE OF temp432.
    temp433-n = `emailSubject`.
    temp433-v = emailsubject.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `label`.
    temp433-v = label.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `pageLinkId`.
    temp433-v = pagelinkid.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `target`.
    temp433-v = target.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `type`.
    temp433-v = type.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `url`.
    temp433-v = url.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `value`.
    temp433-v = value.
    INSERT temp433 INTO TABLE temp432.
    temp433-n = `visible`.
    temp433-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp433 INTO TABLE temp432.
    result = _generic( name   = `QuickViewGroupElement`
                       t_prop = temp432 ).
  ENDMETHOD.

  METHOD quick_view_page.
    DATA temp434 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp434.
    DATA temp435 LIKE LINE OF temp434.
    temp435-n = `description`.
    temp435-v = description.
    INSERT temp435 INTO TABLE temp434.
    temp435-n = `header`.
    temp435-v = header.
    INSERT temp435 INTO TABLE temp434.
    temp435-n = `pageId`.
    temp435-v = pageid.
    INSERT temp435 INTO TABLE temp434.
    temp435-n = `title`.
    temp435-v = title.
    INSERT temp435 INTO TABLE temp434.
    temp435-n = `titleUrl`.
    temp435-v = titleurl.
    INSERT temp435 INTO TABLE temp434.
    result = _generic( name   = `QuickViewPage`
                       t_prop = temp434 ).
  ENDMETHOD.

  METHOD quick_view_page_avatar.
    result = _generic( `avatar` ).
  ENDMETHOD.

  METHOD radial_micro_chart.
    result = me.
    DATA temp436 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp436.
    DATA temp437 LIKE LINE OF temp436.
    temp437-n = `percentage`.
    temp437-v = percentage.
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `press`.
    temp437-v = press.
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `size`.
    temp437-v = size.
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `height`.
    temp437-v = height.
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `alignContent`.
    temp437-v = aligncontent.
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `hideOnNoData`.
    temp437-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp437 INTO TABLE temp436.
    temp437-n = `valueColor`.
    temp437-v = valuecolor.
    INSERT temp437 INTO TABLE temp436.
    _generic( name   = `RadialMicroChart`
              ns     = `mchart`
              t_prop = temp436 ).
  ENDMETHOD.

  METHOD radio_button.
    DATA temp438 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp438.
    DATA temp439 LIKE LINE OF temp438.
    temp439-n = `id`.
    temp439-v = id.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `activeHandling`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( activehandling ).
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `editable`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `enabled`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `selected`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `useEntireWidth`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( useentirewidth ).
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `text`.
    temp439-v = text.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `textDirection`.
    temp439-v = textdirection.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `textAlign`.
    temp439-v = textalign.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `groupName`.
    temp439-v = groupname.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `valueState`.
    temp439-v = valuestate.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `width`.
    temp439-v = width.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `select`.
    temp439-v = select.
    INSERT temp439 INTO TABLE temp438.
    temp439-n = `visible`.
    temp439-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp439 INTO TABLE temp438.
    result = _generic(
                 name   = `RadioButton`
                 t_prop = temp438 ).
  ENDMETHOD.

  METHOD radio_button_group.
    DATA temp440 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp440.
    DATA temp441 LIKE LINE OF temp440.
    temp441-n = `id`.
    temp441-v = id.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `columns`.
    temp441-v = columns.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `editable`.
    temp441-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `enabled`.
    temp441-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `selectedIndex`.
    temp441-v = selectedindex.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `textDirection`.
    temp441-v = textdirection.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `valueState`.
    temp441-v = valuestate.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `select`.
    temp441-v = select.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `width`.
    temp441-v = width.
    INSERT temp441 INTO TABLE temp440.
    temp441-n = `class`.
    temp441-v = class.
    INSERT temp441 INTO TABLE temp440.
    result = _generic( name   = `RadioButtonGroup`
                       t_prop = temp440 ).
  ENDMETHOD.

  METHOD range_slider.
    result = me.
    DATA temp442 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp442.
    DATA temp443 LIKE LINE OF temp442.
    temp443-n = `class`.
    temp443-v = class.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `endValue`.
    temp443-v = endvalue.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `id`.
    temp443-v = id.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `labelInterval`.
    temp443-v = labelinterval.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `max`.
    temp443-v = max.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `min`.
    temp443-v = min.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `showTickmarks`.
    temp443-v = z2ui5_cl_util=>boolean_abap_2_json( showtickmarks ).
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `startValue`.
    temp443-v = startvalue.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `step`.
    temp443-v = step.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `width`.
    temp443-v = width.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `value`.
    temp443-v = value.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `value2`.
    temp443-v = value2.
    INSERT temp443 INTO TABLE temp442.
    temp443-n = `change`.
    temp443-v = change.
    INSERT temp443 INTO TABLE temp442.
    _generic( name   = `RangeSlider`
*              ns     = `webc`
              t_prop = temp442 ).
  ENDMETHOD.

  METHOD rating_indicator.

    DATA temp444 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp444.
    DATA temp445 LIKE LINE OF temp444.
    temp445-n = `class`.
    temp445-v = class.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `maxValue`.
    temp445-v = maxvalue.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `displayOnly`.
    temp445-v = z2ui5_cl_util=>boolean_abap_2_json( displayonly ).
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `editable`.
    temp445-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `iconSize`.
    temp445-v = iconsize.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `value`.
    temp445-v = value.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `id`.
    temp445-v = id.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `change`.
    temp445-v = change.
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `enabled`.
    temp445-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp445 INTO TABLE temp444.
    temp445-n = `tooltip`.
    temp445-v = tooltip.
    INSERT temp445 INTO TABLE temp444.
    result = _generic( name   = `RatingIndicator`
                       t_prop = temp444 ).

  ENDMETHOD.

  METHOD relationship.

    DATA temp446 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp446.
    DATA temp447 LIKE LINE OF temp446.
    temp447-n = `shapeId`.
    temp447-v = shapeid.
    INSERT temp447 INTO TABLE temp446.
    temp447-n = `type`.
    temp447-v = type.
    INSERT temp447 INTO TABLE temp446.
    temp447-n = `successor`.
    temp447-v = successor.
    INSERT temp447 INTO TABLE temp446.
    temp447-n = `predecessor`.
    temp447-v = predecessor.
    INSERT temp447 INTO TABLE temp446.
    result = _generic( name   = `Relationship`
                       ns     = `gantt`
                       t_prop = temp446 ).

  ENDMETHOD.

  METHOD relationships.
    result = _generic( name = `relationships`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD responsive_scale.
    DATA temp448 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp448.
    DATA temp449 LIKE LINE OF temp448.
    temp449-n = `id`.
    temp449-v = id.
    INSERT temp449 INTO TABLE temp448.
    temp449-n = `class`.
    temp449-v = class.
    INSERT temp449 INTO TABLE temp448.
    temp449-n = `tickmarksBetweenLabels`.
    temp449-v = tickmarksbetweenlabels.
    INSERT temp449 INTO TABLE temp448.
    result = _generic( name   = `ResponsiveScale`
                       t_prop = temp448 ).
  ENDMETHOD.

  METHOD responsive_splitter.
    DATA temp450 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp450.
    DATA temp451 LIKE LINE OF temp450.
    temp451-n = `defaultPane`.
    temp451-v = defaultpane.
    INSERT temp451 INTO TABLE temp450.
    temp451-n = `height`.
    temp451-v = height.
    INSERT temp451 INTO TABLE temp450.
    temp451-n = `width`.
    temp451-v = width.
    INSERT temp451 INTO TABLE temp450.
    result = _generic( name   = `ResponsiveSplitter`
                       ns     = `layout`
                       t_prop = temp450 ).
  ENDMETHOD.

  METHOD rich_text_editor.
    DATA temp452 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp452.
    DATA temp453 LIKE LINE OF temp452.
    temp453-n = `buttonGroups`.
    temp453-v = buttongroups.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `customToolbar`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( customtoolbar ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `editable`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `height`.
    temp453-v = height.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `editorType`.
    temp453-v = editortype.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `plugins`.
    temp453-v = plugins.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `textDirection`.
    temp453-v = textdirection.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `value`.
    temp453-v = value.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `beforeEditorInit`.
    temp453-v = beforeeditorinit.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `change`.
    temp453-v = change.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `ready`.
    temp453-v = ready.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `readyRecurring`.
    temp453-v = readyrecurring.
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `required`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `sanitizeValue`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( sanitizevalue ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupClipboard`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupclipboard ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupFont`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupfont ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupFontStyle`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupfontstyle ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupInsert`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupinsert ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupLink`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgrouplink ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupStructure`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupstructure ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupTextAlign`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgrouptextalign ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `showGroupUndo`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( showgroupundo ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `useLegacyTheme`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( uselegacytheme ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `wrapping`.
    temp453-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp453 INTO TABLE temp452.
    temp453-n = `width`.
    temp453-v = width.
    INSERT temp453 INTO TABLE temp452.
    result = _generic(
        name   = `RichTextEditor`
        ns     = `text`
        t_prop = temp452 ).

  ENDMETHOD.

  METHOD route.

    result = me.
    DATA temp454 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp454.
    DATA temp455 LIKE LINE OF temp454.
    temp455-n = `id`.
    temp455-v = id.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `position`.
    temp455-v = position.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `routetype`.
    temp455-v = routetype.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `lineDash`.
    temp455-v = linedash.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `linewidth`.
    temp455-v = linewidth.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `color`.
    temp455-v = color.
    INSERT temp455 INTO TABLE temp454.
    temp455-n = `colorBorder`.
    temp455-v = colorborder.
    INSERT temp455 INTO TABLE temp454.
    _generic( name   = `Route`
              ns     = `vbm`
              t_prop = temp454 ).

  ENDMETHOD.

  METHOD routes.

    DATA temp456 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp456.
    DATA temp457 LIKE LINE OF temp456.
    temp457-n = `id`.
    temp457-v = id.
    INSERT temp457 INTO TABLE temp456.
    temp457-n = `items`.
    temp457-v = items.
    INSERT temp457 INTO TABLE temp456.
    result = _generic( name   = `Routes`
                       ns     = `vbm`
                       t_prop = temp456 ).

  ENDMETHOD.

  METHOD rows.
    result = _generic( `rows` ).
  ENDMETHOD.

  METHOD row_settings_template.
    result = _generic( name = `rowSettingsTemplate`
                       ns   = `table` ).
  ENDMETHOD.

  METHOD rules.
    result = _generic( `rules` ).
  ENDMETHOD.

  METHOD scroll_container.
    DATA temp458 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp458.
    DATA temp459 LIKE LINE OF temp458.
    temp459-n = `height`.
    temp459-v = height.
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `width`.
    temp459-v = width.
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `id`.
    temp459-v = id.
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `visible`.
    temp459-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `vertical`.
    temp459-v = z2ui5_cl_util=>boolean_abap_2_json( vertical ).
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `horizontal`.
    temp459-v = z2ui5_cl_util=>boolean_abap_2_json( horizontal ).
    INSERT temp459 INTO TABLE temp458.
    temp459-n = `focusable`.
    temp459-v = z2ui5_cl_util=>boolean_abap_2_json( focusable ).
    INSERT temp459 INTO TABLE temp458.
    result = _generic( name   = `ScrollContainer`
                       t_prop = temp458 ).
  ENDMETHOD.

  METHOD search_field.
    result = me.
    DATA temp460 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp460.
    DATA temp461 LIKE LINE OF temp460.
    temp461-n = `width`.
    temp461-v = width.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `search`.
    temp461-v = search.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `value`.
    temp461-v = value.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `id`.
    temp461-v = id.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `class`.
    temp461-v = class.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `change`.
    temp461-v = change.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `maxLength`.
    temp461-v = maxlength.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `placeholder`.
    temp461-v = placeholder.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `suggest`.
    temp461-v = suggest.
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `enableSuggestions`.
    temp461-v = z2ui5_cl_util=>boolean_abap_2_json( enablesuggestions ).
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `showRefreshButton`.
    temp461-v = z2ui5_cl_util=>boolean_abap_2_json( showrefreshbutton ).
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `showSearchButton`.
    temp461-v = z2ui5_cl_util=>boolean_abap_2_json( showsearchbutton ).
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `visible`.
    temp461-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `enabled`.
    temp461-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp461 INTO TABLE temp460.
    temp461-n = `liveChange`.
    temp461-v = livechange.
    INSERT temp461 INTO TABLE temp460.
    _generic( name   = `SearchField`
              t_prop = temp460 ).
  ENDMETHOD.

  METHOD second_status.
    result = _generic( `secondStatus` ).
  ENDMETHOD.

  METHOD sections.
    result = _generic( name = `sections`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD segmented_button.
    DATA temp462 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp462.
    DATA temp463 LIKE LINE OF temp462.
    temp463-n = `id`.
    temp463-v = id.
    INSERT temp463 INTO TABLE temp462.
    temp463-n = `selectedKey`.
    temp463-v = selected_key.
    INSERT temp463 INTO TABLE temp462.
    temp463-n = `visible`.
    temp463-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp463 INTO TABLE temp462.
    temp463-n = `enabled`.
    temp463-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp463 INTO TABLE temp462.
    temp463-n = `selectionChange`.
    temp463-v = selection_change.
    INSERT temp463 INTO TABLE temp462.
    result = _generic( name   = `SegmentedButton`
                       t_prop = temp462 ).
  ENDMETHOD.

  METHOD segmented_button_item.
    result = me.
    DATA temp464 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp464.
    DATA temp465 LIKE LINE OF temp464.
    temp465-n = `icon`.
    temp465-v = icon.
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `press`.
    temp465-v = press.
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `width`.
    temp465-v = width.
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `key`.
    temp465-v = key.
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `textDirection`.
    temp465-v = textdirection.
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `enabled`.
    temp465-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `visible`.
    temp465-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp465 INTO TABLE temp464.
    temp465-n = `text`.
    temp465-v = text.
    INSERT temp465 INTO TABLE temp464.
    _generic( name   = `SegmentedButtonItem`
              t_prop = temp464 ).
  ENDMETHOD.

  METHOD segments.
    result = _generic( name = `segments`
                       ns   = `mchart` ).
  ENDMETHOD.

  METHOD select.
    DATA temp466 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp466.
    DATA temp467 LIKE LINE OF temp466.
    temp467-n = `id`.
    temp467-v = id.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `class`.
    temp467-v = class.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `autoAdjustWidth`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( autoadjustwidth ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `columnRatio`.
    temp467-v = columnratio.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `editable`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `enabled`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `forceSelection`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( forceselection ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `icon`.
    temp467-v = icon.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `maxWidth`.
    temp467-v = maxwidth.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `name`.
    temp467-v = name.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `required`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `resetOnMissingKey`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( resetonmissingkey ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `selectedItemId`.
    temp467-v = selecteditemid.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `selectedKey`.
    temp467-v = selectedkey.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `showSecondaryValues`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( showsecondaryvalues ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `textAlign`.
    temp467-v = textalign.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `textDirection`.
    temp467-v = textdirection.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `type`.
    temp467-v = type.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `valueState`.
    temp467-v = valuestate.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `valueStateText`.
    temp467-v = valuestatetext.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `width`.
    temp467-v = width.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `wrapItemsText`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( wrapitemstext ).
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `items`.
    temp467-v = items.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `selectedItem`.
    temp467-v = selecteditem.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `change`.
    temp467-v = change.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `liveChange`.
    temp467-v = livechange.
    INSERT temp467 INTO TABLE temp466.
    temp467-n = `visible`.
    temp467-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp467 INTO TABLE temp466.
    result = _generic( name   = `Select`
                       t_prop = temp466 ).
  ENDMETHOD.

  METHOD shapes1.
    result = _generic( name = `shapes1`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD shapes2.
    result = _generic( name = `shapes2`
                       ns   = `gantt` ).
  ENDMETHOD.

  METHOD shape_group.
    result = _generic( name = `ShapeGroup`
                       ns   = `si` ).
  ENDMETHOD.

  METHOD shell.
    DATA temp468 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp468.
    DATA temp469 LIKE LINE OF temp468.
    temp469-n = `appWidthLimited`.
    temp469-v = z2ui5_cl_util=>boolean_abap_2_json( appwidthlimited ).
    INSERT temp469 INTO TABLE temp468.
    result = _generic(
        name   = `Shell`
        ns     = ns
        t_prop = temp468 ).
  ENDMETHOD.

  METHOD shell_bar.
    DATA temp470 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp470.
    DATA temp471 LIKE LINE OF temp470.
    temp471-n = `homeIcon`.
    temp471-v = homeicon.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `homeIconTooltip`.
    temp471-v = homeicontooltip.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `title`.
    temp471-v = title.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `secondTitle`.
    temp471-v = secondtitle.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showCopilot`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( showcopilot ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showMenuButton`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( showmenubutton ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showNavButton`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( shownavbutton ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showNotifications`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( shownotifications ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showProductSwitcher`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( showproductswitcher ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `showSearch`.
    temp471-v = z2ui5_cl_util=>boolean_abap_2_json( showsearch ).
    INSERT temp471 INTO TABLE temp470.
    temp471-n = `notificationsNumber`.
    temp471-v = notificationsnumber.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'avatarPressed'.
    temp471-v = avatarpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'copilotPressed'.
    temp471-v = copilotpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'homeIconPressed'.
    temp471-v = homeiconpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'menuButtonPressed'.
    temp471-v = menubuttonpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'navButtonPressed'.
    temp471-v = navbuttonpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'notificationsPressed'.
    temp471-v = notificationspressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'productSwitcherPressed'.
    temp471-v = productswitcherpressed.
    INSERT temp471 INTO TABLE temp470.
    temp471-n = 'searchButtonPressed'.
    temp471-v = searchbuttonpressed.
    INSERT temp471 INTO TABLE temp470.
    result = _generic( name   = `ShellBar`
                       ns     = `f`
                       t_prop = temp470 ).

  ENDMETHOD.

  METHOD side_content.
    DATA temp472 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp472.
    DATA temp473 LIKE LINE OF temp472.
    temp473-n = `width`.
    temp473-v = width.
    INSERT temp473 INTO TABLE temp472.
    result = _generic( name   = `sideContent`
                       ns     = 'layout'
                       t_prop = temp472 ).

  ENDMETHOD.

  METHOD side_panel.
    DATA temp474 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp474.
    DATA temp475 LIKE LINE OF temp474.
    temp475-n = `sidePanelWidth`.
    temp475-v = sidepanelwidth.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelResizeStep`.
    temp475-v = sidepanelresizestep.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelResizeLargerStep`.
    temp475-v = sidepanelresizelargerstep.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelPosition`.
    temp475-v = sidepanelposition.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelMinWidth`.
    temp475-v = sidepanelminwidth.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelMaxWidth`.
    temp475-v = sidepanelmaxwidth.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `sidePanelResizable`.
    temp475-v = z2ui5_cl_util=>boolean_abap_2_json( sidepanelresizable ).
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `actionBarExpanded`.
    temp475-v = z2ui5_cl_util=>boolean_abap_2_json( actionbarexpanded ).
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `toggle`.
    temp475-v = toggle.
    INSERT temp475 INTO TABLE temp474.
    temp475-n = `ariaLabel`.
    temp475-v = arialabel.
    INSERT temp475 INTO TABLE temp474.
    result = _generic(
        name   = `SidePanel`
        ns     = `f`
        t_prop = temp474 ).
  ENDMETHOD.

  METHOD side_panel_item.
    DATA temp476 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp476.
    DATA temp477 LIKE LINE OF temp476.
    temp477-n = `icon`.
    temp477-v = icon.
    INSERT temp477 INTO TABLE temp476.
    temp477-n = `enabled`.
    temp477-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp477 INTO TABLE temp476.
    temp477-n = `key`.
    temp477-v = key.
    INSERT temp477 INTO TABLE temp476.
    temp477-n = `text`.
    temp477-v = text.
    INSERT temp477 INTO TABLE temp476.
    result = _generic( name   = `SidePanelItem`
                       ns     = `f`
                       t_prop = temp476 ).
  ENDMETHOD.

  METHOD simple_form.
    DATA temp478 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp478.
    DATA temp479 LIKE LINE OF temp478.
    temp479-n = `title`.
    temp479-v = title.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `layout`.
    temp479-v = layout.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `class`.
    temp479-v = class.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `adjustLabelSpan`.
    temp479-v = adjustlabelspan.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `backgroundDesign`.
    temp479-v = backgrounddesign.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `breakpointL`.
    temp479-v = breakpointl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `breakpointM`.
    temp479-v = breakpointm.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `breakpointXL`.
    temp479-v = breakpointxl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `emptySpanL`.
    temp479-v = emptyspanl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `emptySpanM`.
    temp479-v = emptyspanm.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `emptySpanS`.
    temp479-v = emptyspans.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `emptySpanXL`.
    temp479-v = emptyspanxl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `labelSpanL`.
    temp479-v = labelspanl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `labelSpanM`.
    temp479-v = labelspanm.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `labelSpanS`.
    temp479-v = labelspans.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `labelSpanXL`.
    temp479-v = labelspanxl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `maxContainerCols`.
    temp479-v = maxcontainercols.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `minWidth`.
    temp479-v = minwidth.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `singleContainerFullSize`.
    temp479-v = z2ui5_cl_util=>boolean_abap_2_json( singlecontainerfullsize ).
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `visible`.
    temp479-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `width`.
    temp479-v = width.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `id`.
    temp479-v = id.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `columnsXL`.
    temp479-v = columnsxl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `columnsL`.
    temp479-v = columnsl.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `columnsM`.
    temp479-v = columnsm.
    INSERT temp479 INTO TABLE temp478.
    temp479-n = `editable`.
    temp479-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp479 INTO TABLE temp478.
    result = _generic(
        name   = `SimpleForm`
        ns     = `form`
        t_prop = temp478 ).
  ENDMETHOD.

  METHOD slider.
    result = me.
    DATA temp480 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp480.
    DATA temp481 LIKE LINE OF temp480.
    temp481-n = `class`.
    temp481-v = class.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `id`.
    temp481-v = id.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `max`.
    temp481-v = max.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `min`.
    temp481-v = min.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `enableTickmarks`.
    temp481-v = z2ui5_cl_util=>boolean_abap_2_json( enabletickmarks ).
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `enabled`.
    temp481-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `value`.
    temp481-v = value.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `step`.
    temp481-v = step.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `change`.
    temp481-v = change.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `width`.
    temp481-v = width.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `inputsAsTooltips`.
    temp481-v = inputsastooltips.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `showAdvancedTooltip`.
    temp481-v = showadvancedtooltip.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `showHandleTooltip`.
    temp481-v = showhandletooltip.
    INSERT temp481 INTO TABLE temp480.
    temp481-n = `liveChange`.
    temp481-v = liveChange.
    INSERT temp481 INTO TABLE temp480.
    _generic( name   = `Slider`
              t_prop = temp480 ).
  ENDMETHOD.

  METHOD slide_tile.

    DATA temp482 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp482.
    DATA temp483 LIKE LINE OF temp482.
    temp483-n = `displayTime`.
    temp483-v = displaytime.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `height`.
    temp483-v = height.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `scope`.
    temp483-v = scope.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `sizeBehavior`.
    temp483-v = sizebehavior.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `transitionTime`.
    temp483-v = transitiontime.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `width`.
    temp483-v = width.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `press`.
    temp483-v = press.
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `visible`.
    temp483-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp483 INTO TABLE temp482.
    temp483-n = `class`.
    temp483-v = class.
    INSERT temp483 INTO TABLE temp482.
    result = _generic( name   = `SlideTile`
                       t_prop = temp482 ).
  ENDMETHOD.

  METHOD smart_variant_management.
    result = me.
    DATA temp484 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp484.
    DATA temp485 LIKE LINE OF temp484.
    temp485-n = `id`.
    temp485-v = id.
    INSERT temp485 INTO TABLE temp484.
    temp485-n = `showExecuteOnSelection`.
    temp485-v = z2ui5_cl_util=>boolean_abap_2_json( showexecuteonselection ).
    INSERT temp485 INTO TABLE temp484.
    temp485-n = `persistencyKey`.
    temp485-v = persistencyKey.
    INSERT temp485 INTO TABLE temp484.
    _generic(
        name   = `SmartVariantManagement`
        ns     = `smartVariantManagement`
        t_prop = temp484 ).

  ENDMETHOD.

  METHOD snapped_content.
    result = _generic( name = `snappedContent`
                       ns   = ns ).
  ENDMETHOD.

  METHOD snapped_heading.
    result = me.
    result = _generic( name = `snappedHeading`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD snapped_title_on_mobile.
    result = _generic( name = `snappedTitleOnMobile`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD sort_items.
    result = _generic( `sortItems` ).
  ENDMETHOD.

  METHOD splitter_layout_data.
    DATA temp486 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp486.
    DATA temp487 LIKE LINE OF temp486.
    temp487-n = `size`.
    temp487-v = size.
    INSERT temp487 INTO TABLE temp486.
    temp487-n = `minSize`.
    temp487-v = minsize.
    INSERT temp487 INTO TABLE temp486.
    temp487-n = `resizable`.
    temp487-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp487 INTO TABLE temp486.
    result = _generic( name   = `SplitterLayoutData`
                       ns     = `layout`
                       t_prop = temp486 ).
  ENDMETHOD.

  METHOD split_container.

    result = me.
    DATA temp488 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp488.
    DATA temp489 LIKE LINE OF temp488.
    temp489-n = `id`.
    temp489-v = id.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `initialDetail`.
    temp489-v = initialdetail.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `initialMaster`.
    temp489-v = initialmaster.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `backgroundColor`.
    temp489-v = backgroundcolor.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `backgroundImage`.
    temp489-v = backgroundimage.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `backgroundOpacity`.
    temp489-v = backgroundopacity.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `backgroundRepeat`.
    temp489-v = backgroundrepeat.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `defaultTransitionNameDetail`.
    temp489-v = defaulttransitionnamedetail.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `defaultTransitionNameMaster`.
    temp489-v = defaulttransitionnamemaster.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `masterButtonText`.
    temp489-v = masterbuttontext.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `masterButtonTooltip`.
    temp489-v = masterbuttontooltip.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `afterDetailNavigate`.
    temp489-v = afterdetailnavigate.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `afterMasterClose`.
    temp489-v = aftermasterclose.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `afterMasterNavigate`.
    temp489-v = aftermasternavigate.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `afterMasterOpen`.
    temp489-v = aftermasteropen.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `beforeMasterClose`.
    temp489-v = beforemasterclose.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `beforeMasterOpen`.
    temp489-v = beforemasteropen.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `detailNavigate`.
    temp489-v = detailnavigate.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `masterButton`.
    temp489-v = masterbutton.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `masterNavigate`.
    temp489-v = masternavigate.
    INSERT temp489 INTO TABLE temp488.
    temp489-n = `mode`.
    temp489-v = mode.
    INSERT temp489 INTO TABLE temp488.
    _generic( name   = `SplitContainer`
              t_prop = temp488 ).

  ENDMETHOD.

  METHOD split_pane.
    DATA temp490 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp490.
    DATA temp491 LIKE LINE OF temp490.
    temp491-n = `id`.
    temp491-v = id.
    INSERT temp491 INTO TABLE temp490.
    temp491-n = `requiredParentWidth`.
    temp491-v = requiredparentwidth.
    INSERT temp491 INTO TABLE temp490.
    result = _generic( name   = `SplitPane`
                       ns     = `layout`
                       t_prop = temp490 ).
  ENDMETHOD.

  METHOD spot.

    result = me.
    DATA temp492 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp492.
    DATA temp493 LIKE LINE OF temp492.
    temp493-n = `id`.
    temp493-v = id.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `position`.
    temp493-v = position.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `contentOffset`.
    temp493-v = contentoffset.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `type`.
    temp493-v = type.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `scale`.
    temp493-v = scale.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `tooltip`.
    temp493-v = tooltip.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `image`.
    temp493-v = image.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `icon`.
    temp493-v = icon.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `text`.
    temp493-v = text.
    INSERT temp493 INTO TABLE temp492.
    temp493-n = `click`.
    temp493-v = click.
    INSERT temp493 INTO TABLE temp492.
    _generic( name   = `Spot`
              ns     = `vbm`
              t_prop = temp492 ).

  ENDMETHOD.

  METHOD spots.

    DATA temp494 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp494.
    DATA temp495 LIKE LINE OF temp494.
    temp495-n = `id`.
    temp495-v = id.
    INSERT temp495 INTO TABLE temp494.
    temp495-n = `items`.
    temp495-v = items.
    INSERT temp495 INTO TABLE temp494.
    result = _generic( name   = `Spots`
                       ns     = `vbm`
                       t_prop = temp494 ).

  ENDMETHOD.

  METHOD stacked_bar_micro_chart.

    result = me.
    DATA temp496 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp496.
    DATA temp497 LIKE LINE OF temp496.
    temp497-n = `height`.
    temp497-v = height.
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `press`.
    temp497-v = press.
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `maxValue`.
    temp497-v = maxvalue.
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `precision`.
    temp497-v = precision.
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `size`.
    temp497-v = size.
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `hideOnNoData`.
    temp497-v = z2ui5_cl_util=>boolean_abap_2_json( hideonnodata ).
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `displayZeroValue`.
    temp497-v = z2ui5_cl_util=>boolean_abap_2_json( displayzerovalue ).
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `showLabels`.
    temp497-v = z2ui5_cl_util=>boolean_abap_2_json( showlabels ).
    INSERT temp497 INTO TABLE temp496.
    temp497-n = `width`.
    temp497-v = width.
    INSERT temp497 INTO TABLE temp496.
    _generic( name   = `StackedBarMicroChart`
              ns     = `mchart`
              t_prop = temp496 ).
  ENDMETHOD.

  METHOD standard_list_item.
    result = me.
    DATA temp498 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp498.
    DATA temp499 LIKE LINE OF temp498.
    temp499-n = `title`.
    temp499-v = title.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `description`.
    temp499-v = description.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `icon`.
    temp499-v = icon.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `info`.
    temp499-v = info.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `press`.
    temp499-v = press.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `type`.
    temp499-v = type.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `counter`.
    temp499-v = counter.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `activeIcon`.
    temp499-v = activeicon.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `adaptTitleSize`.
    temp499-v = z2ui5_cl_util=>boolean_abap_2_json( adapttitlesize ).
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `unread`.
    temp499-v = z2ui5_cl_util=>boolean_abap_2_json( unread ).
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `iconInset`.
    temp499-v = z2ui5_cl_util=>boolean_abap_2_json( iconinset ).
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `infoStateInverted`.
    temp499-v = z2ui5_cl_util=>boolean_abap_2_json( infostateinverted ).
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `wrapping`.
    temp499-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `infoState`.
    temp499-v = infostate.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `highlight`.
    temp499-v = highlight.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `wrapCharLimit`.
    temp499-v = wrapcharlimit.
    INSERT temp499 INTO TABLE temp498.
    temp499-n = `selected`.
    temp499-v = selected.
    INSERT temp499 INTO TABLE temp498.
    _generic(
        name   = `StandardListItem`
        t_prop = temp498 ).
  ENDMETHOD.

  METHOD standard_tree_item.
    result = me.
    DATA temp500 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp500.
    DATA temp501 LIKE LINE OF temp500.
    temp501-n = `title`.
    temp501-v = title.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `icon`.
    temp501-v = icon.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `press`.
    temp501-v = press.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `detailPress`.
    temp501-v = detailpress.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `type`.
    temp501-v = type.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `counter`.
    temp501-v = counter.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `selected`.
    temp501-v = selected.
    INSERT temp501 INTO TABLE temp500.
    temp501-n = `tooltip`.
    temp501-v = tooltip.
    INSERT temp501 INTO TABLE temp500.
    _generic( name   = `StandardTreeItem`
              t_prop = temp500 ).

  ENDMETHOD.

  METHOD status.

    DATA temp502 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp502.
    DATA temp503 LIKE LINE OF temp502.
    temp503-n = `id`.
    temp503-v = id.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `class`.
    temp503-v = class.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `backgroundColor`.
    temp503-v = backgroundcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `borderColor`.
    temp503-v = bordercolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `borderStyle`.
    temp503-v = borderstyle.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `borderWidth`.
    temp503-v = borderwidth.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `contentColor`.
    temp503-v = contentcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `headerContentColor`.
    temp503-v = headercontentcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `hoverBackgroundColor`.
    temp503-v = hoverbackgroundcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `hoverBorderColor`.
    temp503-v = hoverbordercolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `hoverContentColor`.
    temp503-v = hovercontentcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `key`.
    temp503-v = key.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `legendColor`.
    temp503-v = legendcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `selectedBackgroundColor`.
    temp503-v = selectedbackgroundcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `selectedBorderColor`.
    temp503-v = selectedbordercolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `selectedContentColor`.
    temp503-v = selectedcontentcolor.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `title`.
    temp503-v = title.
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `useFocusColorAsContentColor`.
    temp503-v = z2ui5_cl_util=>boolean_abap_2_json( usefocuscolorascontentcolor ).
    INSERT temp503 INTO TABLE temp502.
    temp503-n = `visible`.
    temp503-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp503 INTO TABLE temp502.
    result = _generic(
                 name   = `Status`
                 ns     = `networkgraph`
                 t_prop = temp502 ).

  ENDMETHOD.

  METHOD statuses.
    DATA temp504 TYPE string.
    CASE ns.
      WHEN ''.
        temp504 = `networkgraph`.
      WHEN OTHERS.
        temp504 = ns.
    ENDCASE.
    result = _generic( name = `statuses`
                       ns   = temp504 ).
  ENDMETHOD.

  METHOD status_indicator.
    DATA temp505 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp505.
    DATA temp506 LIKE LINE OF temp505.
    temp506-n = `id`.
    temp506-v = id.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `class`.
    temp506-v = class.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `height`.
    temp506-v = height.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `labelPosition`.
    temp506-v = labelposition.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `showLabel`.
    temp506-v = z2ui5_cl_util=>boolean_abap_2_json( showlabel ).
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `size`.
    temp506-v = size.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `value`.
    temp506-v = value.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `viewBox`.
    temp506-v = viewbox.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `width`.
    temp506-v = width.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `press`.
    temp506-v = press.
    INSERT temp506 INTO TABLE temp505.
    temp506-n = `visible`.
    temp506-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp506 INTO TABLE temp505.
    result = _generic( name   = `StatusIndicator`
                       ns     = `si`
                       t_prop = temp505 ).
  ENDMETHOD.

  METHOD step_input.
    result = me.
    DATA temp507 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp507.
    DATA temp508 LIKE LINE OF temp507.
    temp508-n = `id`.
    temp508-v = id.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `max`.
    temp508-v = max.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `min`.
    temp508-v = min.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `step`.
    temp508-v = step.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `width`.
    temp508-v = width.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `value`.
    temp508-v = value.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `valueState`.
    temp508-v = valuestate.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `enabled`.
    temp508-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `description`.
    temp508-v = description.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `displayValuePrecision`.
    temp508-v = displayvalueprecision.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `largerStep`.
    temp508-v = largerstep.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `stepMode`.
    temp508-v = stepmode.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `editable`.
    temp508-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `fieldWidth`.
    temp508-v = fieldwidth.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `textalign`.
    temp508-v = textalign.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `validationMode`.
    temp508-v = validationmode.
    INSERT temp508 INTO TABLE temp507.
    temp508-n = `change`.
    temp508-v = change.
    INSERT temp508 INTO TABLE temp507.
    _generic( name   = `StepInput`
              t_prop = temp507 ).
  ENDMETHOD.

  METHOD stringify.

    result = get_root( )->xml_get( ).

  ENDMETHOD.

  METHOD sub_header.

    result = _generic( name = `subHeader`
                       ns   = ns ).

  ENDMETHOD.

  METHOD sub_sections.
    result = me.
    result = _generic( name = `subSections`
                       ns   = `uxap` ).
  ENDMETHOD.

  METHOD suggestion_columns.
    result = _generic( `suggestionColumns` ).
  ENDMETHOD.

  METHOD suggestion_item.
    result = me.
    DATA temp509 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp509.
    DATA temp510 LIKE LINE OF temp509.
    temp510-n = `description`.
    temp510-v = description.
    INSERT temp510 INTO TABLE temp509.
    temp510-n = `icon`.
    temp510-v = icon.
    INSERT temp510 INTO TABLE temp509.
    temp510-n = `key`.
    temp510-v = key.
    INSERT temp510 INTO TABLE temp509.
    temp510-n = `text`.
    temp510-v = text.
    INSERT temp510 INTO TABLE temp509.
    temp510-n = `textDirection`.
    temp510-v = textdirection.
    INSERT temp510 INTO TABLE temp509.
    _generic( name   = `SuggestionItem`
              t_prop = temp509 ).
  ENDMETHOD.

  METHOD suggestion_items.
    result = _generic( `suggestionItems` ).
  ENDMETHOD.

  METHOD suggestion_rows.
    result = _generic( `suggestionRows` ).
  ENDMETHOD.

  METHOD swim_lane_chain_layout.
    result = _generic( name = `SwimLaneChainLayout`
                       ns   = `nglayout` ).
  ENDMETHOD.

  METHOD switch.
    result = me.
    DATA temp511 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp511.
    DATA temp512 LIKE LINE OF temp511.
    temp512-n = `type`.
    temp512-v = type.
    INSERT temp512 INTO TABLE temp511.
    temp512-n = `enabled`.
    temp512-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp512 INTO TABLE temp511.
    temp512-n = `state`.
    temp512-v = state.
    INSERT temp512 INTO TABLE temp511.
    temp512-n = `change`.
    temp512-v = change.
    INSERT temp512 INTO TABLE temp511.
    temp512-n = `customTextOff`.
    temp512-v = customtextoff.
    INSERT temp512 INTO TABLE temp511.
    temp512-n = `customTextOn`.
    temp512-v = customtexton.
    INSERT temp512 INTO TABLE temp511.
    _generic( name   = `Switch`
              t_prop = temp511 ).
  ENDMETHOD.

  METHOD tab.
    DATA temp513 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp513.
    DATA temp514 LIKE LINE OF temp513.
    temp514-n = `text`.
    temp514-v = text.
    INSERT temp514 INTO TABLE temp513.
    temp514-n = `selected`.
    temp514-v = selected.
    INSERT temp514 INTO TABLE temp513.
    result = _generic( name   = `Tab`
                       ns     = `webc`
                       t_prop = temp513 ).
  ENDMETHOD.

  METHOD table.
    DATA temp515 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp515.
    DATA temp516 LIKE LINE OF temp515.
    temp516-n = `items`.
    temp516-v = items.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `headerText`.
    temp516-v = headertext.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `class`.
    temp516-v = class.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `growing`.
    temp516-v = growing.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `growingThreshold`.
    temp516-v = growingthreshold.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `growingScrollToLoad`.
    temp516-v = growingscrolltoload.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `sticky`.
    temp516-v = sticky.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `showSeparators`.
    temp516-v = showseparators.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `mode`.
    temp516-v = mode.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `inset`.
    temp516-v = inset.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `width`.
    temp516-v = width.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `id`.
    temp516-v = id.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `hiddenInPopin`.
    temp516-v = hiddeninpopin.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `popinLayout`.
    temp516-v = popinlayout.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `selectionChange`.
    temp516-v = selectionchange.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `backgroundDesign`.
    temp516-v = backgrounddesign.
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `visible`.
    temp516-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `alternateRowColors`.
    temp516-v = z2ui5_cl_util=>boolean_abap_2_json( alternaterowcolors ).
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `fixedLayout`.
    temp516-v = z2ui5_cl_util=>boolean_abap_2_json( fixedlayout ).
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `showOverlay`.
    temp516-v = z2ui5_cl_util=>boolean_abap_2_json( showoverlay ).
    INSERT temp516 INTO TABLE temp515.
    temp516-n = `autoPopinMode`.
    temp516-v = z2ui5_cl_util=>boolean_abap_2_json( autopopinmode ).
    INSERT temp516 INTO TABLE temp515.
    result = _generic( name   = `Table`
                       t_prop = temp515 ).
  ENDMETHOD.

  METHOD table_select_dialog.

    DATA temp517 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp517.
    DATA temp518 LIKE LINE OF temp517.
    temp518-n = `confirmButtonText`.
    temp518-v = confirmbuttontext.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `contentHeight`.
    temp518-v = contentheight.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `contentWidth`.
    temp518-v = contentwidth.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `draggable`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( draggable ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `growing`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `growingThreshold`.
    temp518-v = growingthreshold.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `multiSelect`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( multiselect ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `noDataText`.
    temp518-v = nodatatext.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `rememberSelections`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( rememberselections ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `resizable`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `searchPlaceholder`.
    temp518-v = searchplaceholder.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `showClearButton`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( showclearbutton ).
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `title`.
    temp518-v = title.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `titleAlignment`.
    temp518-v = titlealignment.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `items`.
    temp518-v = items.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `search`.
    temp518-v = search.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `confirm`.
    temp518-v = confirm.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `cancel`.
    temp518-v = cancel.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `liveChange`.
    temp518-v = livechange.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `selectionChange`.
    temp518-v = selectionchange.
    INSERT temp518 INTO TABLE temp517.
    temp518-n = `visible`.
    temp518-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp518 INTO TABLE temp517.
    result = _generic( name   = `TableSelectDialog`
                       t_prop = temp517 ).
  ENDMETHOD.

  METHOD tab_container.
    result = _generic( name = `TabContainer`
                       ns   = `webc` ).
  ENDMETHOD.

  METHOD task.
    DATA temp519 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp519.
    DATA temp520 LIKE LINE OF temp519.
    temp520-n = `time`.
    temp520-v = time.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `endTime`.
    temp520-v = endtime.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `id`.
    temp520-v = id.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `type`.
    temp520-v = type.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `connectable`.
    temp520-v = connectable.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `title`.
    temp520-v = title.
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `showTitle`.
    temp520-v = z2ui5_cl_util=>boolean_abap_2_json( showtitle ).
    INSERT temp520 INTO TABLE temp519.
    temp520-n = `color`.
    temp520-v = color.
    INSERT temp520 INTO TABLE temp519.
    result = _generic( name   = `Task`
                       ns     = `shapes`
                       t_prop = temp519 ).
  ENDMETHOD.

  METHOD template_else.

    result = _generic( name = `else`
                       ns   = `template` ).

  ENDMETHOD.

  METHOD template_elseif.

    DATA temp521 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp521.
    DATA temp522 LIKE LINE OF temp521.
    temp522-n = `test`.
    temp522-v = test.
    INSERT temp522 INTO TABLE temp521.
    result = _generic( name   = `elseif`
                       ns     = `template`
                       t_prop = temp521 ).

  ENDMETHOD.

  METHOD template_if.

    DATA temp523 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp523.
    DATA temp524 LIKE LINE OF temp523.
    temp524-n = `test`.
    temp524-v = test.
    INSERT temp524 INTO TABLE temp523.
    result = _generic( name   = `if`
                       ns     = `template`
                       t_prop = temp523 ).

  ENDMETHOD.

  METHOD template_repeat.

    DATA temp525 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp525.
    DATA temp526 LIKE LINE OF temp525.
    temp526-n = `list`.
    temp526-v = list.
    INSERT temp526 INTO TABLE temp525.
    temp526-n = `var`.
    temp526-v = var.
    INSERT temp526 INTO TABLE temp525.
    result = _generic( name   = `repeat`
                       ns     = `template`
                       t_prop = temp525 ).

  ENDMETHOD.

  METHOD template_then.

    result = _generic( name = `then`
                       ns   = `template` ).

  ENDMETHOD.

  METHOD template_with.

    DATA temp527 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp527.
    DATA temp528 LIKE LINE OF temp527.
    temp528-n = `path`.
    temp528-v = path.
    INSERT temp528 INTO TABLE temp527.
    temp528-n = `helper`.
    temp528-v = helper.
    INSERT temp528 INTO TABLE temp527.
    temp528-n = `var`.
    temp528-v = var.
    INSERT temp528 INTO TABLE temp527.
    result = _generic( name   = `with`
                       ns     = `template`
                       t_prop = temp527 ).

  ENDMETHOD.

  METHOD text.
    result = me.
    DATA temp529 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp529.
    DATA temp530 LIKE LINE OF temp529.
    temp530-n = `text`.
    temp530-v = text.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `emptyIndicatorMode`.
    temp530-v = emptyindicatormode.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `maxLines`.
    temp530-v = maxlines.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `renderWhitespace`.
    temp530-v = renderwhitespace.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `textAlign`.
    temp530-v = textalign.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `visible`.
    temp530-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `textDirection`.
    temp530-v = textdirection.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `width`.
    temp530-v = width.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `id`.
    temp530-v = id.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `wrapping`.
    temp530-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `wrappingType`.
    temp530-v = wrappingtype.
    INSERT temp530 INTO TABLE temp529.
    temp530-n = `class`.
    temp530-v = class.
    INSERT temp530 INTO TABLE temp529.
    _generic( name   = `Text`
              ns     = ns
              t_prop = temp529 ).
  ENDMETHOD.

  METHOD text_area.
    result = me.
    DATA temp531 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp531.
    DATA temp532 LIKE LINE OF temp531.
    temp532-n = `value`.
    temp532-v = value.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `rows`.
    temp532-v = rows.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `cols`.
    temp532-v = cols.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `height`.
    temp532-v = height.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `width`.
    temp532-v = width.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `wrapping`.
    temp532-v = wrapping.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `maxLength`.
    temp532-v = maxlength.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `textAlign`.
    temp532-v = textalign.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `textDirection`.
    temp532-v = textdirection.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `showValueStateMessage`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `showExceededText`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( showexceededtext ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `valueLiveUpdate`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( valueliveupdate ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `editable`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `class`.
    temp532-v = class.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `enabled`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `id`.
    temp532-v = id.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `growing`.
    temp532-v = z2ui5_cl_util=>boolean_abap_2_json( growing ).
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `growingMaxLines`.
    temp532-v = growingmaxlines.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `required`.
    temp532-v = required.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `valueState`.
    temp532-v = valuestate.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `placeholder`.
    temp532-v = placeholder.
    INSERT temp532 INTO TABLE temp531.
    temp532-n = `valueStateText`.
    temp532-v = valuestatetext.
    INSERT temp532 INTO TABLE temp531.
    _generic( name   = `TextArea`
              t_prop = temp531 ).
  ENDMETHOD.

  METHOD tile_content.

    DATA temp533 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp533.
    DATA temp534 LIKE LINE OF temp533.
    temp534-n = `unit`.
    temp534-v = unit.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `footerColor`.
    temp534-v = footercolor.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `blocked`.
    temp534-v = z2ui5_cl_util=>boolean_abap_2_json( blocked ).
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `frameType`.
    temp534-v = frametype.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `priority`.
    temp534-v = priority.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `priorityText`.
    temp534-v = prioritytext.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `state`.
    temp534-v = state.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `disabled`.
    temp534-v = z2ui5_cl_util=>boolean_abap_2_json( disabled ).
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `visible`.
    temp534-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `footer`.
    temp534-v = footer.
    INSERT temp534 INTO TABLE temp533.
    temp534-n = `class`.
    temp534-v = class.
    INSERT temp534 INTO TABLE temp533.
    result = _generic( name   = `TileContent`
                       ns     = ``
                       t_prop = temp533 ).

  ENDMETHOD.

  METHOD tile_info.
    DATA temp535 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp535.
    DATA temp536 LIKE LINE OF temp535.
    temp536-n = `id`.
    temp536-v = id.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `class`.
    temp536-v = class.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `backgroundColor`.
    temp536-v = backgroundcolor.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `borderColor`.
    temp536-v = bordercolor.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `src`.
    temp536-v = src.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `text`.
    temp536-v = text.
    INSERT temp536 INTO TABLE temp535.
    temp536-n = `textColor`.
    temp536-v = textcolor.
    INSERT temp536 INTO TABLE temp535.
    result = _generic( name   = `TileInfo`
                       t_prop = temp535 ).

  ENDMETHOD.

  METHOD timeline.

    DATA temp537 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp537.
    DATA temp538 LIKE LINE OF temp537.
    temp538-n = 'id'.
    temp538-v = id.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'enableDoubleSided'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( enabledoublesided ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'groupBy'.
    temp538-v = groupby.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'growingThreshold'.
    temp538-v = growingthreshold.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'filterTitle'.
    temp538-v = filtertitle.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'sortOldestFirst'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( sortoldestfirst ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'enableModelFilter'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( enablemodelfilter ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'enableScroll'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( enablescroll ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'forceGrowing'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( forcegrowing ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'group'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( group ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'lazyLoading'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( lazyloading ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showHeaderBar'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showheaderbar ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showIcons'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showicons ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showItemFilter'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showitemfilter ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showSearch'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showsearch ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showSort'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showsort ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'showTimeFilter'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( showtimefilter ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'sort'.
    temp538-v = z2ui5_cl_util=>boolean_abap_2_json( sort ).
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'groupByType'.
    temp538-v = groupbytype.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'textHeight'.
    temp538-v = textheight.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'width'.
    temp538-v = width.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'height'.
    temp538-v = height.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'noDataText'.
    temp538-v = nodatatext.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'alignment'.
    temp538-v = alignment.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'axisOrientation'.
    temp538-v = axisorientation.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'filterList'.
    temp538-v = filterlist.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'customFilter'.
    temp538-v = customfilter.
    INSERT temp538 INTO TABLE temp537.
    temp538-n = 'content'.
    temp538-v = content.
    INSERT temp538 INTO TABLE temp537.
    result = _generic(
        name   = `Timeline`
        ns     = 'commons'
        t_prop = temp537 ).
  ENDMETHOD.

  METHOD timeline_item.

    DATA temp539 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp539.
    DATA temp540 LIKE LINE OF temp539.
    temp540-n = 'id'.
    temp540-v = id.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'dateTime'.
    temp540-v = datetime.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'title'.
    temp540-v = title.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'userNameClickable'.
    temp540-v = z2ui5_cl_util=>boolean_abap_2_json( usernameclickable ).
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'useIconTooltip'.
    temp540-v = z2ui5_cl_util=>boolean_abap_2_json( useicontooltip ).
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'userNameClicked'.
    temp540-v = usernameclicked.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'userPicture'.
    temp540-v = userpicture.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'select'.
    temp540-v = select.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'text'.
    temp540-v = text.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'userName'.
    temp540-v = username.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'filterValue'.
    temp540-v = filtervalue.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'iconDisplayShape'.
    temp540-v = icondisplayshape.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'iconInitials'.
    temp540-v = iconinitials.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'iconSize'.
    temp540-v = iconsize.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'iconTooltip'.
    temp540-v = icontooltip.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'maxCharacters'.
    temp540-v = maxcharacters.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'replyCount'.
    temp540-v = replycount.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'status'.
    temp540-v = status.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'customActionClicked'.
    temp540-v = customactionclicked.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'press'.
    temp540-v = press.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'replyListOpen'.
    temp540-v = replylistopen.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'replyPost'.
    temp540-v = replypost.
    INSERT temp540 INTO TABLE temp539.
    temp540-n = 'icon'.
    temp540-v = icon.
    INSERT temp540 INTO TABLE temp539.
    result = _generic(
        name   = `TimelineItem`
        ns     = 'commons'
        t_prop = temp539 ).
  ENDMETHOD.

  METHOD time_horizon.
    DATA temp541 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp541.
    DATA temp542 LIKE LINE OF temp541.
    temp542-n = `startTime`.
    temp542-v = starttime.
    INSERT temp542 INTO TABLE temp541.
    temp542-n = `endTime`.
    temp542-v = endtime.
    INSERT temp542 INTO TABLE temp541.
    result = _generic( name   = `TimeHorizon`
                       ns     = `config`
                       t_prop = temp541 ).
  ENDMETHOD.

  METHOD time_picker.
    result = me.
    DATA temp543 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp543.
    DATA temp544 LIKE LINE OF temp543.
    temp544-n = `value`.
    temp544-v = value.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `dateValue`.
    temp544-v = datevalue.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `localeId`.
    temp544-v = localeid.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `placeholder`.
    temp544-v = placeholder.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `mask`.
    temp544-v = mask.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `maskMode`.
    temp544-v = maskmode.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `minutesStep`.
    temp544-v = minutesstep.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `name`.
    temp544-v = name.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `placeholderSymbol`.
    temp544-v = placeholdersymbol.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `secondsStep`.
    temp544-v = secondsstep.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `textAlign`.
    temp544-v = textalign.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `textDirection`.
    temp544-v = textdirection.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `title`.
    temp544-v = title.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `showCurrentTimeButton`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( showcurrenttimebutton ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `showValueStateMessage`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `support2400`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( support2400 ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `initialFocusedDateValue`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( initialfocuseddatevalue ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `hideInput`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( hideinput ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `editable`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `enabled`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `required`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `visible`.
    temp544-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `width`.
    temp544-v = width.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `valueState`.
    temp544-v = valuestate.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `valueStateText`.
    temp544-v = valuestatetext.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `displayFormat`.
    temp544-v = displayformat.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `afterValueHelpClose`.
    temp544-v = aftervaluehelpclose.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `afterValueHelpOpen`.
    temp544-v = aftervaluehelpopen.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `change`.
    temp544-v = change.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `liveChange`.
    temp544-v = livechange.
    INSERT temp544 INTO TABLE temp543.
    temp544-n = `valueFormat`.
    temp544-v = valueformat.
    INSERT temp544 INTO TABLE temp543.
    _generic( name   = `TimePicker`
              t_prop = temp543 ).
  ENDMETHOD.

  METHOD title.
    DATA lv_name TYPE c LENGTH 5.
    DATA temp2 LIKE lv_name.
    IF ns = 'f'.
      temp2 = 'title'.
    ELSE.
      temp2 = `Title`.
    ENDIF.
    lv_name = temp2.

    result = me.
    DATA temp546 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp546.
    DATA temp547 LIKE LINE OF temp546.
    temp547-n = `text`.
    temp547-v = text.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `class`.
    temp547-v = class.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `id`.
    temp547-v = id.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `wrappingType`.
    temp547-v = wrappingtype.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `textAlign`.
    temp547-v = textalign.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `textDirection`.
    temp547-v = textdirection.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `titleStyle`.
    temp547-v = titlestyle.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `width`.
    temp547-v = width.
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `wrapping`.
    temp547-v = z2ui5_cl_util=>boolean_abap_2_json( wrapping ).
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `visible`.
    temp547-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp547 INTO TABLE temp546.
    temp547-n = `level`.
    temp547-v = level.
    INSERT temp547 INTO TABLE temp546.
    _generic( ns     = ns
              name   = lv_name
              t_prop = temp546 ).
  ENDMETHOD.

  METHOD toggle_button.

    result = me.
    DATA temp548 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp548.
    DATA temp549 LIKE LINE OF temp548.
    temp549-n = `press`.
    temp549-v = press.
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `text`.
    temp549-v = text.
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `enabled`.
    temp549-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `icon`.
    temp549-v = icon.
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `type`.
    temp549-v = type.
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `class`.
    temp549-v = class.
    INSERT temp549 INTO TABLE temp548.
    temp549-n = `pressed`.
    temp549-v = z2ui5_cl_util=>boolean_abap_2_json( pressed ).
    INSERT temp549 INTO TABLE temp548.
    _generic( name   = `ToggleButton`
              t_prop = temp548 ).
  ENDMETHOD.

  METHOD token.

    result = me.
    DATA temp550 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp550.
    DATA temp551 LIKE LINE OF temp550.
    temp551-n = `key`.
    temp551-v = key.
    INSERT temp551 INTO TABLE temp550.
    temp551-n = `text`.
    temp551-v = text.
    INSERT temp551 INTO TABLE temp550.
    temp551-n = `selected`.
    temp551-v = selected.
    INSERT temp551 INTO TABLE temp550.
    temp551-n = `visible`.
    temp551-v = visible.
    INSERT temp551 INTO TABLE temp550.
    temp551-n = `editable`.
    temp551-v = editable.
    INSERT temp551 INTO TABLE temp550.
    _generic( name   = `Token`
              t_prop = temp550 ).
  ENDMETHOD.

  METHOD tokens.

    result = _generic( name = `tokens`
                       ns   = ns ).

  ENDMETHOD.

  METHOD toolbar.
    DATA lv_name TYPE c LENGTH 7.
    DATA temp3 LIKE lv_name.
    IF ns = 'table'.
      temp3 = 'toolbar'.
    ELSEIF ns = 'form'.
      temp3 = 'toolbar'.
    ELSE.
      temp3 = `Toolbar`.
    ENDIF.
    lv_name = temp3.
    DATA temp553 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp553.
    DATA temp554 LIKE LINE OF temp553.
    temp554-n = `active`.
    temp554-v = z2ui5_cl_util=>boolean_abap_2_json( active ).
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `ariaHasPopup`.
    temp554-v = ariahaspopup.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `design`.
    temp554-v = design.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `enabled`.
    temp554-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `visible`.
    temp554-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `height`.
    temp554-v = height.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `style`.
    temp554-v = style.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `width`.
    temp554-v = width.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `id`.
    temp554-v = id.
    INSERT temp554 INTO TABLE temp553.
    temp554-n = `press`.
    temp554-v = press.
    INSERT temp554 INTO TABLE temp553.
    result = _generic( name   = lv_name
                       ns     = ns
                       t_prop = temp553 ).

  ENDMETHOD.

  METHOD toolbar_spacer.

    result = me.
    DATA temp555 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp555.
    DATA temp556 LIKE LINE OF temp555.
    temp556-n = `width`.
    temp556-v = width.
    INSERT temp556 INTO TABLE temp555.
    _generic( name   = `ToolbarSpacer`
              ns     = ns
              t_prop = temp555 ).
  ENDMETHOD.

  METHOD tool_header.

    result = _generic( name = `ToolHeader`
                       ns   = `tnt` ).

  ENDMETHOD.

  METHOD tool_page.
    result = _generic( name = `ToolPage`
                       ns   = `tnt` ).
  ENDMETHOD.

  METHOD total_horizon.
    result = _generic( name = `totalHorizon`
                       ns   = `axistime` ).
  ENDMETHOD.

  METHOD tree.
    DATA temp557 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp557.
    DATA temp558 LIKE LINE OF temp557.
    temp558-n = `id`.
    temp558-v = id.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `items`.
    temp558-v = items.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `headerText`.
    temp558-v = headertext.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `footerText`.
    temp558-v = footertext.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `mode`.
    temp558-v = mode.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `toggleOpenState`.
    temp558-v = toggleopenstate.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `width`.
    temp558-v = width.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `selectionChange`.
    temp558-v = selectionchange.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `itemPress`.
    temp558-v = itempress.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `select`.
    temp558-v = select.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `multiSelectMode`.
    temp558-v = multiselectmode.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `noDataText`.
    temp558-v = nodatatext.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `headerLevel`.
    temp558-v = headerlevel.
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `includeItemInSelection`.
    temp558-v = z2ui5_cl_util=>boolean_abap_2_json( includeiteminselection ).
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `showNoData`.
    temp558-v = z2ui5_cl_util=>boolean_abap_2_json( shownodata ).
    INSERT temp558 INTO TABLE temp557.
    temp558-n = `inset`.
    temp558-v = z2ui5_cl_util=>boolean_abap_2_json( inset ).
    INSERT temp558 INTO TABLE temp557.
    result = _generic(
                 name   = `Tree`
                 t_prop = temp557 ).

  ENDMETHOD.

  METHOD tree_column.

    DATA temp559 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp559.
    DATA temp560 LIKE LINE OF temp559.
    temp560-n = `label`.
    temp560-v = label.
    INSERT temp560 INTO TABLE temp559.
    temp560-n = `template`.
    temp560-v = template.
    INSERT temp560 INTO TABLE temp559.
    temp560-n = `hAlign`.
    temp560-v = halign.
    INSERT temp560 INTO TABLE temp559.
    result = _generic( name   = `Column`
                       ns     = `table`
                       t_prop = temp559 ).

  ENDMETHOD.

  METHOD tree_columns.

    result = _generic( name = `columns`
                       ns   = `table` ).

  ENDMETHOD.

  METHOD tree_table.

    DATA temp561 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp561.
    DATA temp562 LIKE LINE OF temp561.
    temp562-n = `rows`.
    temp562-v = rows.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `selectionMode`.
    temp562-v = selectionmode.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `enableColumnReordering`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( enablecolumnreordering ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `expandFirstLevel`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( expandfirstlevel ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `columnSelect`.
    temp562-v = columnselect.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `rowSelectionChange`.
    temp562-v = rowselectionchange.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `selectionBehavior`.
    temp562-v = selectionbehavior.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `id`.
    temp562-v = id.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `alternateRowColors`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( alternaterowcolors ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `columnHeaderVisible`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( columnheadervisible ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `enableCellFilter`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( enablecellfilter ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `enableColumnFreeze`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( enablecolumnfreeze ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `enableCustomFilter`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( enablecustomfilter ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `enableSelectAll`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( enableselectall ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `showNoData`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( shownodata ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `showOverlay`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( showoverlay ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `visible`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `columnHeaderHeight`.
    temp562-v = columnheaderheight.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `firstVisibleRow`.
    temp562-v = firstvisiblerow.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `fixedColumnCount`.
    temp562-v = fixedcolumncount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `threshold`.
    temp562-v = threshold.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `width`.
    temp562-v = width.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `useGroupMode`.
    temp562-v = z2ui5_cl_util=>boolean_abap_2_json( usegroupmode ).
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `groupHeaderProperty`.
    temp562-v = groupheaderproperty.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `rowActionCount`.
    temp562-v = rowactioncount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `selectedIndex`.
    temp562-v = selectedindex.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `rowHeight`.
    temp562-v = rowheight.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `fixedRowCount`.
    temp562-v = fixedrowcount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `fixedBottomRowCount`.
    temp562-v = fixedbottomrowcount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `minAutoRowCount`.
    temp562-v = minautorowcount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `visibleRowCount`.
    temp562-v = visiblerowcount.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `toggleOpenState`.
    temp562-v = toggleopenstate.
    INSERT temp562 INTO TABLE temp561.
    temp562-n = `visibleRowCountMode`.
    temp562-v = visiblerowcountmode.
    INSERT temp562 INTO TABLE temp561.
    result = _generic(
                 name   = `TreeTable`
                 ns     = `table`
                 t_prop = temp561 ).

  ENDMETHOD.

  METHOD tree_template.

    result = _generic( name = `template`
                       ns   = `table` ).

  ENDMETHOD.

  METHOD two_columns_layout.
    result = _generic( name = `TwoColumnsLayout`
                       ns   = `nglayout` ).
  ENDMETHOD.

  METHOD ui_column.
    DATA temp563 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp563.
    DATA temp564 LIKE LINE OF temp563.
    temp564-n = `id`.
    temp564-v = id.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `width`.
    temp564-v = width.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `showSortMenuEntry`.
    temp564-v = showsortmenuentry.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `sortProperty`.
    temp564-v = sortproperty.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `showFilterMenuEntry`.
    temp564-v = showfiltermenuentry.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `autoresizable`.
    temp564-v = z2ui5_cl_util=>boolean_abap_2_json( autoresizable ).
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `defaultFilterOperator`.
    temp564-v = defaultfilteroperator.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `filterProperty`.
    temp564-v = filterproperty.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `filterType`.
    temp564-v = filtertype.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `hAlign`.
    temp564-v = halign.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `minWidth`.
    temp564-v = minwidth.
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `resizable`.
    temp564-v = z2ui5_cl_util=>boolean_abap_2_json( resizable ).
    INSERT temp564 INTO TABLE temp563.
    temp564-n = `visible`.
    temp564-v = visible.
    INSERT temp564 INTO TABLE temp563.
    result = _generic( name   = `Column`
                       ns     = 'table'
                       t_prop = temp563 ).
  ENDMETHOD.

  METHOD ui_columns.
    result = _generic( name = `columns`
                       ns   = 'table' ).
  ENDMETHOD.

  METHOD ui_custom_data.
    result = _generic( name = `customData`
                       ns   = 'table' ).
  ENDMETHOD.

  METHOD ui_extension.

    result = _generic( name = `extension`
                       ns   = 'table' ).
  ENDMETHOD.

  METHOD ui_row_action.
    result = _generic( name = `RowAction`
                       ns   = `table` ).
  ENDMETHOD.

  METHOD ui_row_action_item.
    DATA temp565 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp565.
    DATA temp566 LIKE LINE OF temp565.
    temp566-n = `icon`.
    temp566-v = icon.
    INSERT temp566 INTO TABLE temp565.
    temp566-n = `text`.
    temp566-v = text.
    INSERT temp566 INTO TABLE temp565.
    temp566-n = `type`.
    temp566-v = type.
    INSERT temp566 INTO TABLE temp565.
    temp566-n = `press`.
    temp566-v = press.
    INSERT temp566 INTO TABLE temp565.
    temp566-n = `visible`.
    temp566-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp566 INTO TABLE temp565.
    result = _generic( name   = `RowActionItem`
                       ns     = `table`
                       t_prop = temp565 ).
  ENDMETHOD.

  METHOD ui_row_action_template.
    result = _generic( name = `rowActionTemplate`
                       ns   = `table` ).
  ENDMETHOD.

  METHOD ui_table.

    DATA temp567 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp567.
    DATA temp568 LIKE LINE OF temp567.
    temp568-n = `rows`.
    temp568-v = rows.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `alternateRowColors`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( alternaterowcolors ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `columnHeaderVisible`.
    temp568-v = columnheadervisible.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `editable`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `class`.
    temp568-v = class.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `enableCellFilter`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( enablecellfilter ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `enableGrouping`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( enablegrouping ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `enableSelectAll`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( enableselectall ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `firstVisibleRow`.
    temp568-v = firstvisiblerow.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `fixedBottomRowCount`.
    temp568-v = fixedbottomrowcount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `fixedColumnCount`.
    temp568-v = fixedcolumncount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `rowActionCount`.
    temp568-v = rowactioncount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `fixedRowCount`.
    temp568-v = fixedrowcount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `minAutoRowCount`.
    temp568-v = minautorowcount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `rowHeight`.
    temp568-v = rowheight.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `selectedIndex`.
    temp568-v = selectedindex.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `selectionMode`.
    temp568-v = selectionmode.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `selectionBehavior`.
    temp568-v = selectionbehavior.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `showColumnVisibilityMenu`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( showcolumnvisibilitymenu ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `showNoData`.
    temp568-v = z2ui5_cl_util=>boolean_abap_2_json( shownodata ).
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `threshold`.
    temp568-v = threshold.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `visibleRowCount`.
    temp568-v = visiblerowcount.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `visibleRowCountMode`.
    temp568-v = visiblerowcountmode.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `footer`.
    temp568-v = footer.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `filter`.
    temp568-v = filter.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `sort`.
    temp568-v = sort.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `customFilter`.
    temp568-v = customfilter.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `id`.
    temp568-v = id.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `fl:flexibility`.
    temp568-v = flex.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `rowSelectionChange`.
    temp568-v = rowselectionchange.
    INSERT temp568 INTO TABLE temp567.
    temp568-n = `rowMode`.
    temp568-v = rowmode.
    INSERT temp568 INTO TABLE temp567.
    result = _generic(
        name   = `Table`
        ns     = `table`
        t_prop = temp567 ).

  ENDMETHOD.

  METHOD ui_template.

    result = _generic( name = `template`
                       ns   = 'table' ).

  ENDMETHOD.

  METHOD upload_set.
    DATA temp569 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp569.
    DATA temp570 LIKE LINE OF temp569.
    temp570-n = `id`.
    temp570-v = id.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `instantUpload`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( instantupload ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `showIcons`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( showicons ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `uploadEnabled`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( uploadenabled ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `terminationEnabled`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( terminationenabled ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `uploadButtonInvisible`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( uploadbuttoninvisible ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `fileTypes`.
    temp570-v = filetypes.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `maxFileNameLength`.
    temp570-v = maxfilenamelength.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `maxFileSize`.
    temp570-v = maxfilesize.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `mediaTypes`.
    temp570-v = mediatypes.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `items`.
    temp570-v = items.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `uploadUrl`.
    temp570-v = uploadurl.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `mode`.
    temp570-v = mode.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `fileRenamed`.
    temp570-v = filerenamed.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `directory`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( directory ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `multiple`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( multiple ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `dragDropDescription`.
    temp570-v = dragdropdescription.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `dragDropText`.
    temp570-v = dragdroptext.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `noDataText`.
    temp570-v = nodatatext.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `noDataDescription`.
    temp570-v = nodatadescription.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `noDataIllustrationType`.
    temp570-v = nodataillustrationtype.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `afterItemEdited`.
    temp570-v = afteritemedited.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `afterItemRemoved`.
    temp570-v = afteritemremoved.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `beforeItemAdded`.
    temp570-v = beforeitemadded.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `beforeItemEdited`.
    temp570-v = beforeitemedited.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `beforeItemRemoved`.
    temp570-v = beforeitemremoved.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `beforeUploadStarts`.
    temp570-v = beforeuploadstarts.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `beforeUploadTermination`.
    temp570-v = beforeuploadtermination.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `fileNameLengthExceeded`.
    temp570-v = filenamelengthexceeded.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `fileSizeExceeded`.
    temp570-v = filesizeexceeded.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `fileTypeMismatch`.
    temp570-v = filetypemismatch.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `itemDragStart`.
    temp570-v = itemdragstart.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `itemDrop`.
    temp570-v = itemdrop.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `mediaTypeMismatch`.
    temp570-v = mediatypemismatch.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `uploadTerminated`.
    temp570-v = uploadterminated.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `uploadCompleted`.
    temp570-v = uploadcompleted.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `afterItemAdded`.
    temp570-v = afteritemadded.
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `sameFilenameAllowed`.
    temp570-v = z2ui5_cl_util=>boolean_abap_2_json( samefilenameallowed ).
    INSERT temp570 INTO TABLE temp569.
    temp570-n = `selectionChanged`.
    temp570-v = selectionchanged.
    INSERT temp570 INTO TABLE temp569.
    result = _generic(
                 name   = `UploadSet`
                 ns     = 'upload'
                 t_prop = temp569 ).
  ENDMETHOD.

  METHOD upload_set_item.
    DATA temp571 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp571.
    DATA temp572 LIKE LINE OF temp571.
    temp572-n = `fileName`.
    temp572-v = filename.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `mediaType`.
    temp572-v = mediatype.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `url`.
    temp572-v = url.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `thumbnailUrl`.
    temp572-v = thumbnailurl.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `markers`.
    temp572-v = markers.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `enabledEdit`.
    temp572-v = z2ui5_cl_util=>boolean_abap_2_json( enablededit ).
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `enabledRemove`.
    temp572-v = z2ui5_cl_util=>boolean_abap_2_json( enabledremove ).
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `selected`.
    temp572-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `visibleEdit`.
    temp572-v = z2ui5_cl_util=>boolean_abap_2_json( visibleedit ).
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `visibleRemove`.
    temp572-v = z2ui5_cl_util=>boolean_abap_2_json( visibleremove ).
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `uploadState`.
    temp572-v = uploadstate.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `uploadUrl`.
    temp572-v = uploadurl.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `openPressed`.
    temp572-v = openpressed.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `removePressed`.
    temp572-v = removepressed.
    INSERT temp572 INTO TABLE temp571.
    temp572-n = `statuses`.
    temp572-v = statuses.
    INSERT temp572 INTO TABLE temp571.
    result = _generic( name   = `UploadSetItem`
                       ns     = 'upload'
                       t_prop = temp571 ).
  ENDMETHOD.

  METHOD upload_set_toolbar_placeholder.
    result = _generic( name = `UploadSetToolbarPlaceholder`
                       ns   = `upload` ).
  ENDMETHOD.

  METHOD variant_item.

    DATA temp573 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp573.
    DATA temp574 LIKE LINE OF temp573.
    temp574-n = `executeOnSelection`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( executeonselection ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `global`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( global ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `labelReadOnly`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( labelreadonly ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `lifecyclePackage`.
    temp574-v = lifecyclepackage.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `lifecycleTransportId`.
    temp574-v = lifecycletransportid.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `namespace`.
    temp574-v = namespace.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `readOnly`.
    temp574-v = readonly.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `executeOnSelect`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( executeonselect ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `author`.
    temp574-v = author.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `changeable`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( changeable ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `enabled`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `favorite`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( favorite ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `key`.
    temp574-v = key.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `text`.
    temp574-v = text.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `title`.
    temp574-v = title.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `textDirection`.
    temp574-v = textdirection.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `originalTitle`.
    temp574-v = originaltitle.
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `originalExecuteOnSelect`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( originalexecuteonselect ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `remove`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( remove ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `rename`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( rename ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `originalFavorite`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( originalfavorite ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `sharing`.
    temp574-v = z2ui5_cl_util=>boolean_abap_2_json( sharing ).
    INSERT temp574 INTO TABLE temp573.
    temp574-n = `change`.
    temp574-v = change.
    INSERT temp574 INTO TABLE temp573.
    result = _generic(
                 name   = `VariantItem`
                 ns     = `vm`
                 t_prop = temp573 ).

  ENDMETHOD.

  METHOD variant_items.

    result = _generic( name = `variantItems`
                       ns   = `vm` ).

  ENDMETHOD.

  METHOD variant_item_sapm.
    DATA temp575 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp575.
    DATA temp576 LIKE LINE OF temp575.
    temp576-n = `id`.
    temp576-v = id.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `author`.
    temp576-v = author.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `changeable`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( changeable ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `enabled`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `favorite`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( favorite ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `remove`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( remove ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `rename`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( rename ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `visible`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `contexts`.
    temp576-v = contexts.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `key`.
    temp576-v = key.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `sharing`.
    temp576-v = sharing.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `text`.
    temp576-v = text.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `textDirection`.
    temp576-v = textdirection.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `title`.
    temp576-v = title.
    INSERT temp576 INTO TABLE temp575.
    temp576-n = `executeOnSelect`.
    temp576-v = z2ui5_cl_util=>boolean_abap_2_json( executeonselect ).
    INSERT temp576 INTO TABLE temp575.
    result = _generic(
        name   = `VariantItem`
        t_prop = temp575 ).
  ENDMETHOD.

  METHOD variant_management.

    DATA temp577 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp577.
    DATA temp578 LIKE LINE OF temp577.
    temp578-n = `defaultVariantKey`.
    temp578-v = defaultvariantkey.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `enabled`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `inErrorState`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( inerrorstate ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `initialSelectionKey`.
    temp578-v = initialselectionkey.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `lifecycleSupport`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( lifecyclesupport ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `selectionKey`.
    temp578-v = selectionkey.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `showCreateTile`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( showcreatetile ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `showExecuteOnSelection`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( showexecuteonselection ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `showSetAsDefault`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( showsetasdefault ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `showShare`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( showshare ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `standardItemAuthor`.
    temp578-v = standarditemauthor.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `standardItemText`.
    temp578-v = standarditemtext.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `useFavorites`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( usefavorites ).
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `variantItems`.
    temp578-v = variantitems.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `manage`.
    temp578-v = manage.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `save`.
    temp578-v = save.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `select`.
    temp578-v = select.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `id`.
    temp578-v = id.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `variantCreationByUserAllowed`.
    temp578-v = uservarcreate.
    INSERT temp578 INTO TABLE temp577.
    temp578-n = `visible`.
    temp578-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp578 INTO TABLE temp577.
    result = _generic(
                 name   = `VariantManagement`
                 ns     = `vm`
                 t_prop = temp577 ).

  ENDMETHOD.

  METHOD variant_management_fl.
    DATA temp579 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp579.
    DATA temp580 LIKE LINE OF temp579.
    temp580-n = `displayTextForExecuteOnSelectionForStandardVariant`.
    temp580-v = displaytextfsv.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `editable`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `executeOnSelectionForStandardDefault`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( executeonselectionforstandflt ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `headerLevel`.
    temp580-v = headerlevel.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `inErrorState`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( inerrorstate ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `maxWidth`.
    temp580-v = maxwidth.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `modelName`.
    temp580-v = modelname.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `resetOnContextChange`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( resetoncontextchange ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `showSetAsDefault`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( showsetasdefault ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `titleStyle`.
    temp580-v = titlestyle.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `updateVariantInURL`.
    temp580-v = z2ui5_cl_util=>boolean_abap_2_json( updatevariantinurl ).
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `cancel`.
    temp580-v = cancel.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `initialized`.
    temp580-v = initialized.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `manage`.
    temp580-v = manage.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `save`.
    temp580-v = save.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `select`.
    temp580-v = select.
    INSERT temp580 INTO TABLE temp579.
    temp580-n = `for`.
    temp580-v = for.
    INSERT temp580 INTO TABLE temp579.
    result = _generic(
                 name   = `VariantManagement`
                 ns     = `flvm`
                 t_prop = temp579 ).
  ENDMETHOD.

  METHOD variant_management_sapm.
    DATA temp581 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp581.
    DATA temp582 LIKE LINE OF temp581.
    temp582-n = `id`.
    temp582-v = id.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `defaultKey`.
    temp582-v = defaultkey.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `level`.
    temp582-v = level.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `maxWidth`.
    temp582-v = maxwidth.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `popoverTitle`.
    temp582-v = popovertitle.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `selectedKey`.
    temp582-v = selectedkey.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `titleStyle`.
    temp582-v = titlestyle.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `cancel`.
    temp582-v = cancel.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `manage`.
    temp582-v = manage.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `manageCancel`.
    temp582-v = managecancel.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `save`.
    temp582-v = save.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `select`.
    temp582-v = select.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `items`.
    temp582-v = items.
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `creationAllowed`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( creationallowed ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `inErrorState`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( inerrorstate ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `modified`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( modified ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `showFooter`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `showSaveAs`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( showsaveas ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `supportApplyAutomatically`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( supportapplyautomatically ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `supportContexts`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( supportcontexts ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `supportDefault`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( supportdefault ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `supportFavorites`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( supportfavorites ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `supportPublic`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( supportpublic ).
    INSERT temp582 INTO TABLE temp581.
    temp582-n = `visible`.
    temp582-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp582 INTO TABLE temp581.
    result = _generic(
        name   = `VariantManagement`
        t_prop = temp581 ).

  ENDMETHOD.

  METHOD vbox.

    DATA temp583 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp583.
    DATA temp584 LIKE LINE OF temp583.
    temp584-n = `height`.
    temp584-v = height.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `id`.
    temp584-v = id.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `justifyContent`.
    temp584-v = justifycontent.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `renderType`.
    temp584-v = rendertype.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `alignContent`.
    temp584-v = aligncontent.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `alignItems`.
    temp584-v = alignitems.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `width`.
    temp584-v = width.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `wrap`.
    temp584-v = wrap.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `backgroundDesign`.
    temp584-v = backgrounddesign.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `direction`.
    temp584-v = direction.
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `displayInline`.
    temp584-v = z2ui5_cl_util=>boolean_abap_2_json( displayinline ).
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `visible`.
    temp584-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `fitContainer`.
    temp584-v = z2ui5_cl_util=>boolean_abap_2_json( fitcontainer ).
    INSERT temp584 INTO TABLE temp583.
    temp584-n = `class`.
    temp584-v = class.
    INSERT temp584 INTO TABLE temp583.
    result = _generic(
        name   = `VBox`
        t_prop = temp583 ).

  ENDMETHOD.

  METHOD vertical_layout.

    DATA temp585 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp585.
    DATA temp586 LIKE LINE OF temp585.
    temp586-n = `id`.
    temp586-v = id.
    INSERT temp586 INTO TABLE temp585.
    temp586-n = `visible`.
    temp586-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp586 INTO TABLE temp585.
    temp586-n = `enabled`.
    temp586-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp586 INTO TABLE temp585.
    temp586-n = `class`.
    temp586-v = class.
    INSERT temp586 INTO TABLE temp585.
    temp586-n = `width`.
    temp586-v = width.
    INSERT temp586 INTO TABLE temp585.
    result = _generic( name   = `VerticalLayout`
                       ns     = `layout`
                       t_prop = temp585 ).
  ENDMETHOD.

  METHOD view_settings_dialog.

    DATA temp587 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp587.
    DATA temp588 LIKE LINE OF temp587.
    temp588-n = `confirm`.
    temp588-v = confirm.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `cancel`.
    temp588-v = cancel.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `filterDetailPageOpened`.
    temp588-v = filterdetailpageopened.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `reset`.
    temp588-v = reset.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `resetFilters`.
    temp588-v = resetfilters.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `filterSearchOperator`.
    temp588-v = filtersearchoperator.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `groupDescending`.
    temp588-v = z2ui5_cl_util=>boolean_abap_2_json( groupdescending ).
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `sortDescending`.
    temp588-v = z2ui5_cl_util=>boolean_abap_2_json( sortdescending ).
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `title`.
    temp588-v = title.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `selectedGroupItem`.
    temp588-v = selectedgroupitem.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `selectedPresetFilterItem`.
    temp588-v = selectedpresetfilteritem.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `selectedSortItem`.
    temp588-v = selectedsortitem.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `selectedSortItem`.
    temp588-v = selectedsortitem.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `filterItems`.
    temp588-v = filteritems.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `sortItems`.
    temp588-v = sortitems.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `groupItems`.
    temp588-v = groupitems.
    INSERT temp588 INTO TABLE temp587.
    temp588-n = `titleAlignment`.
    temp588-v = titlealignment.
    INSERT temp588 INTO TABLE temp587.
    result = _generic( name   = `ViewSettingsDialog`
                       t_prop = temp587 ).

  ENDMETHOD.

  METHOD view_settings_filter_item.
    DATA temp589 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp589.
    DATA temp590 LIKE LINE OF temp589.
    temp590-n = `enabled`.
    temp590-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp590 INTO TABLE temp589.
    temp590-n = `key`.
    temp590-v = key.
    INSERT temp590 INTO TABLE temp589.
    temp590-n = `selected`.
    temp590-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp590 INTO TABLE temp589.
    temp590-n = `text`.
    temp590-v = text.
    INSERT temp590 INTO TABLE temp589.
    temp590-n = `textDirection`.
    temp590-v = textdirection.
    INSERT temp590 INTO TABLE temp589.
    temp590-n = `multiSelect`.
    temp590-v = z2ui5_cl_util=>boolean_abap_2_json( multiselect ).
    INSERT temp590 INTO TABLE temp589.
    result = _generic(
                 name   = `ViewSettingsFilterItem`
                 t_prop = temp589 ).
  ENDMETHOD.

  METHOD view_settings_item.
    DATA temp591 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp591.
    DATA temp592 LIKE LINE OF temp591.
    temp592-n = `enabled`.
    temp592-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp592 INTO TABLE temp591.
    temp592-n = `key`.
    temp592-v = key.
    INSERT temp592 INTO TABLE temp591.
    temp592-n = `selected`.
    temp592-v = z2ui5_cl_util=>boolean_abap_2_json( selected ).
    INSERT temp592 INTO TABLE temp591.
    temp592-n = `text`.
    temp592-v = text.
    INSERT temp592 INTO TABLE temp591.
    temp592-n = `textDirection`.
    temp592-v = textdirection.
    INSERT temp592 INTO TABLE temp591.
    result = _generic( name   = `ViewSettingsItem`
                       t_prop = temp591 ).

  ENDMETHOD.

  METHOD visible_horizon.
    result = _generic( name = `visibleHorizon`
                       ns   = `axistime` ).
  ENDMETHOD.

  METHOD vos.

    result = _generic( name = `vos`
                       ns   = `vbm` ).

  ENDMETHOD.

  METHOD wizard.
    DATA temp593 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp593.
    DATA temp594 LIKE LINE OF temp593.
    temp594-n = `id`.
    temp594-v = id.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `class`.
    temp594-v = class.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `backgroundDesign`.
    temp594-v = backgrounddesign.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `busy`.
    temp594-v = z2ui5_cl_util=>boolean_abap_2_json( busy ).
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `busyIndicatorDelay`.
    temp594-v = busyindicatordelay.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `busyIndicatorSize`.
    temp594-v = busyindicatorsize.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `enableBranching`.
    temp594-v = z2ui5_cl_util=>boolean_abap_2_json( enablebranching ).
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `fieldGroupIds`.
    temp594-v = fieldgroupids.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `finishButtonText`.
    temp594-v = finishbuttontext.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `height`.
    temp594-v = height.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `renderMode`.
    temp594-v = rendermode.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `showNextButton`.
    temp594-v = z2ui5_cl_util=>boolean_abap_2_json( shownextbutton ).
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `stepTitleLevel`.
    temp594-v = steptitlelevel.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `visible`.
    temp594-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `width`.
    temp594-v = width.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `complete`.
    temp594-v = complete.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `navigationChange`.
    temp594-v = navigationchange.
    INSERT temp594 INTO TABLE temp593.
    temp594-n = `stepActivate`.
    temp594-v = stepactivate.
    INSERT temp594 INTO TABLE temp593.
    result = _generic( name   = `Wizard`
                       t_prop = temp593 ).

  ENDMETHOD.

  METHOD wizard_step.

    DATA temp595 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp595.
    DATA temp596 LIKE LINE OF temp595.
    temp596-n = `id`.
    temp596-v = id.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `busy`.
    temp596-v = z2ui5_cl_util=>boolean_abap_2_json( busy ).
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `busyIndicatorDelay`.
    temp596-v = busyindicatordelay.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `busyIndicatorSize`.
    temp596-v = busyindicatorsize.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `fieldGroupIds`.
    temp596-v = fieldgroupids.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `icon`.
    temp596-v = icon.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `optional`.
    temp596-v = z2ui5_cl_util=>boolean_abap_2_json( optional ).
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `title`.
    temp596-v = title.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `validated`.
    temp596-v = z2ui5_cl_util=>boolean_abap_2_json( validated ).
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `visible`.
    temp596-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `activate`.
    temp596-v = activate.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `complete`.
    temp596-v = complete.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `nextStep`.
    temp596-v = nextstep.
    INSERT temp596 INTO TABLE temp595.
    temp596-n = `subsequentSteps`.
    temp596-v = subsequentsteps.
    INSERT temp596 INTO TABLE temp595.
    result = _generic( name   = `WizardStep`
                       t_prop = temp595 ).
  ENDMETHOD.

  METHOD xml_get.

    CASE mv_name.
      WHEN `ZZPLAIN`.
        DATA temp597 LIKE LINE OF mt_prop.
        DATA temp598 LIKE sy-tabix.
        temp598 = sy-tabix.
        READ TABLE mt_prop WITH KEY n = `VALUE` INTO temp597.
        sy-tabix = temp598.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        result = temp597-v.
        RETURN.
      WHEN OTHERS.
    ENDCASE.

    IF me = mo_root.

      TYPES temp7 TYPE HASHED TABLE OF z2ui5_if_types=>ty_s_name_value WITH UNIQUE KEY n.
DATA lt_prop TYPE temp7.
      DATA temp599 LIKE lt_prop.
      CLEAR temp599.
      DATA temp600 LIKE LINE OF temp599.
      temp600-n = `z2ui5`.
      temp600-v = `z2ui5`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `layout`.
      temp600-v = `sap.ui.layout`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `networkgraph`.
      temp600-v = `sap.suite.ui.commons.networkgraph`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `nglayout`.
      temp600-v = `sap.suite.ui.commons.networkgraph.layout`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `ngcustom`.
      temp600-v = `sap.suite.ui.commons.sample.NetworkGraphCustomRendering`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `table`.
      temp600-v = `sap.ui.table`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `template`.
      temp600-v = `http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `customData`.
      temp600-v = `http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `f`.
      temp600-v = `sap.f`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `columnmenu`.
      temp600-v = `sap.m.table.columnmenu`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `card`.
      temp600-v = `sap.f.cards`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `dnd`.
      temp600-v = `sap.ui.core.dnd`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `dnd-grid`.
      temp600-v = `sap.f.dnd`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `grid`.
      temp600-v = `sap.ui.layout.cssgrid`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `form`.
      temp600-v = `sap.ui.layout.form`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `editor`.
      temp600-v = `sap.ui.codeeditor`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `mchart`.
      temp600-v = `sap.suite.ui.microchart`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `smartFilterBar`.
      temp600-v = `sap.ui.comp.smartfilterbar`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `smartVariantManagement`.
      temp600-v = `sap.ui.comp.smartvariants`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `smartTable`.
      temp600-v = `sap.ui.comp.smarttable`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `webc`.
      temp600-v = `sap.ui.webc.main`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `uxap`.
      temp600-v = `sap.uxap`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `sap`.
      temp600-v = `sap`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `text`.
      temp600-v = `sap.ui.richtexteditor`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `html`.
      temp600-v = `http://www.w3.org/1999/xhtml`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `fb`.
      temp600-v = `sap.ui.comp.filterbar`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `u`.
      temp600-v = `sap.ui.unified`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `gantt`.
      temp600-v = `sap.gantt.simple`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `axistime`.
      temp600-v = `sap.gantt.axistime`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `config`.
      temp600-v = `sap.gantt.config`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `shapes`.
      temp600-v = `sap.gantt.simple.shapes`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `commons`.
      temp600-v = `sap.suite.ui.commons`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `si`.
      temp600-v = `sap.suite.ui.commons.statusindicator`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `vm`.
      temp600-v = `sap.ui.comp.variants`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `viz`.
      temp600-v = `sap.viz.ui5.controls`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `viz.data`.
      temp600-v = `sap.viz.ui5.data`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `viz.feeds`.
      temp600-v = `sap.viz.ui5.controls.common.feeds`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `vk`.
      temp600-v = `sap.ui.vk`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `vbm`.
      temp600-v = `sap.ui.vbm`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `ndc`.
      temp600-v = `sap.ndc`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `svm`.
      temp600-v = `sap.ui.comp.smartvariants`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `flvm`.
      temp600-v = `sap.ui.fl.variants`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `p13n`.
      temp600-v = `sap.m.p13n`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `upload`.
      temp600-v = `sap.m.upload`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `fl`.
      temp600-v = `sap.ui.fl`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `plugins`.
      temp600-v = `sap.m.plugins`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `tnt`.
      temp600-v = `sap.tnt`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `mdc`.
      temp600-v = `sap.ui.mdc`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `trm`.
      temp600-v = `sap.ui.table.rowmodes`.
      INSERT temp600 INTO TABLE temp599.
      temp600-n = `smi`.
      temp600-v = `sap.ui.comp.smartmultiinput`.
      INSERT temp600 INTO TABLE temp599.
      lt_prop = temp599.

      DATA temp601 LIKE LINE OF mt_ns.
      DATA lr_ns LIKE REF TO temp601.
      LOOP AT mt_ns REFERENCE INTO lr_ns WHERE     table_line IS NOT INITIAL
                                                     AND table_line <> `mvc`
                                                     AND table_line <> `core`.
        TRY.
            DATA ls_prop LIKE LINE OF lt_prop.
            DATA temp4 LIKE LINE OF lt_prop.
            DATA temp5 LIKE sy-tabix.
            temp5 = sy-tabix.
            READ TABLE lt_prop WITH KEY n = lr_ns->* INTO temp4.
            sy-tabix = temp5.
            IF sy-subrc <> 0.
              ASSERT 1 = 0.
            ENDIF.
            ls_prop = temp4.
            DATA temp602 TYPE z2ui5_if_types=>ty_s_name_value.
            CLEAR temp602.
            temp602-n = |xmlns:{ ls_prop-n }|.
            temp602-v = ls_prop-v.
            INSERT temp602 INTO TABLE mt_prop.
          CATCH cx_root.
            z2ui5_cl_util=>x_raise( |XML_VIEW_ERROR_NO_NAMESPACE_FOUND_FOR:  { lr_ns->* }| ).
        ENDTRY.
      ENDLOOP.

    ENDIF.

    DATA temp603 TYPE string.
    IF mv_ns <> ``.
      temp603 = |{ mv_ns }:|.
    ELSE.
      CLEAR temp603.
    ENDIF.
    DATA lv_tmp2 LIKE temp603.
    lv_tmp2 = temp603.
    DATA temp604 TYPE string.
    DATA val TYPE string.
    val = ``.
    DATA row LIKE LINE OF mt_prop.
    LOOP AT mt_prop INTO row WHERE v <> ``.
      DATA temp6 TYPE string.
      IF row-v = abap_true.
        temp6 = `true`.
      ELSE.
        temp6 = row-v.
      ENDIF.
      val = |{ val } { row-n }="{ escape( val = temp6 format = cl_abap_format=>e_xml_attr ) }"|.
    ENDLOOP.
    temp604 = val.
    DATA lv_tmp3 LIKE temp604.
    lv_tmp3 = temp604.

    result = |{ result } <{ lv_tmp2 }{ mv_name }{ lv_tmp3 }|.

    IF mt_child IS INITIAL.
      result = |{ result }/>|.
      RETURN.
    ENDIF.

    result = |{ result }>|.

    DATA lr_child LIKE LINE OF mt_child.
    LOOP AT mt_child INTO lr_child.
      DATA temp605 TYPE REF TO z2ui5_cl_xml_view.
      temp605 ?= lr_child.
      result = result && temp605->xml_get( ).
    ENDLOOP.

    DATA temp606 TYPE string.
    IF mv_ns <> ||.
      temp606 = |{ mv_ns }:|.
    ELSE.
      CLEAR temp606.
    ENDIF.
    DATA lv_ns LIKE temp606.
    lv_ns = temp606.
    result = |{ result }</{ lv_ns }{ mv_name }>|.

  ENDMETHOD.

  METHOD _cc_plain_xml.

    result = me.
    DATA temp607 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp607.
    DATA temp608 LIKE LINE OF temp607.
    temp608-n = `VALUE`.
    temp608-v = val.
    INSERT temp608 INTO TABLE temp607.
    _generic( name   = `ZZPLAIN`
              t_prop = temp607 ).

  ENDMETHOD.

  METHOD _generic.

    TRY.
        DATA temp609 TYPE string.
        temp609 = ns.
        INSERT temp609 INTO TABLE mo_root->mt_ns.
      CATCH cx_root.
    ENDTRY.

    DATA result2 TYPE REF TO z2ui5_cl_xml_view.
    CREATE OBJECT result2 TYPE z2ui5_cl_xml_view.
    result2->mv_name   = name.
    result2->mv_ns     = ns.
    result2->mt_prop   = t_prop.
    result2->mo_parent = me.
    result2->mo_root   = mo_root.
    INSERT result2 INTO TABLE mt_child.

    mo_root->mo_previous = result2.
    result = result2.

  ENDMETHOD.

  METHOD _generic_property.

    INSERT val INTO TABLE mt_prop.
    result = me.

  ENDMETHOD.

  METHOD _z2ui5.

    CREATE OBJECT result EXPORTING VIEW = me.

  ENDMETHOD.

  METHOD p_cell_selector.

    result = me.
    DATA temp610 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp610.
    DATA temp611 LIKE LINE OF temp610.
    temp611-n = `id`.
    temp611-v = id.
    INSERT temp611 INTO TABLE temp610.
    _generic( name   = `CellSelector`
              ns     = `plugins`
              t_prop = temp610 ).

  ENDMETHOD.

  METHOD p_copy_provider.

    result = me.
    DATA temp612 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp612.
    DATA temp613 LIKE LINE OF temp612.
    temp613-n = `id`.
    temp613-v = id.
    INSERT temp613 INTO TABLE temp612.
    temp613-n = `copy`.
    temp613-v = copy.
    INSERT temp613 INTO TABLE temp612.
    temp613-n = `extractData`.
    temp613-v = extract_data.
    INSERT temp613 INTO TABLE temp612.
    _generic( name   = `CopyProvider`
              ns     = `plugins`
              t_prop = temp612 ).

  ENDMETHOD.

  METHOD date_range_selection.
    result = me.
    DATA temp614 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp614.
    DATA temp615 LIKE LINE OF temp614.
    temp615-n = `value`.
    temp615-v = value.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `displayFormat`.
    temp615-v = displayformat.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `displayFormatType`.
    temp615-v = displayformattype.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `valueFormat`.
    temp615-v = valueformat.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `required`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( required ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `valueState`.
    temp615-v = valuestate.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `valueStateText`.
    temp615-v = valuestatetext.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `placeholder`.
    temp615-v = placeholder.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `textAlign`.
    temp615-v = textalign.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `textDirection`.
    temp615-v = textdirection.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `change`.
    temp615-v = change.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `maxDate`.
    temp615-v = maxdate.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `minDate`.
    temp615-v = mindate.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `width`.
    temp615-v = width.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `id`.
    temp615-v = id.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `dateValue`.
    temp615-v = datevalue.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `secondDateValue`.
    temp615-v = seconddatevalue.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `name`.
    temp615-v = name.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `class`.
    temp615-v = class.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `calendarWeekNumbering`.
    temp615-v = calendarweeknumbering.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `initialFocusedDateValue`.
    temp615-v = initialfocuseddatevalue.
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `enabled`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( enabled ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `visible`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `editable`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `hideInput`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( hideinput ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `showFooter`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( showfooter ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `showValueStateMessage`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( showvaluestatemessage ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `showCurrentDateButton`.
    temp615-v = z2ui5_cl_util=>boolean_abap_2_json( showcurrentdatebutton ).
    INSERT temp615 INTO TABLE temp614.
    temp615-n = `delimiter`.
    temp615-v = delimiter.
    INSERT temp615 INTO TABLE temp614.
    _generic( name   = `DateRangeSelection`
              t_prop = temp614 ).
  ENDMETHOD.

  METHOD toolbar_layout_data.
    DATA temp616 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp616.
    DATA temp617 LIKE LINE OF temp616.
    temp617-n = `id`.
    temp617-v = id.
    INSERT temp617 INTO TABLE temp616.
    temp617-n = `maxWidth`.
    temp617-v = maxwidth.
    INSERT temp617 INTO TABLE temp616.
    temp617-n = `minWidth`.
    temp617-v = minwidth.
    INSERT temp617 INTO TABLE temp616.
    temp617-n = `shrinkable`.
    temp617-v = z2ui5_cl_util=>boolean_abap_2_json( shrinkable ).
    INSERT temp617 INTO TABLE temp616.
    result = _generic(
                 name   = `ToolbarLayoutData`
                 t_prop = temp616 ).
  ENDMETHOD.

  METHOD feed_content.
    DATA temp618 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp618.
    DATA temp619 LIKE LINE OF temp618.
    temp619-n = `contentText`.
    temp619-v = contenttext.
    INSERT temp619 INTO TABLE temp618.
    temp619-n = `subheader`.
    temp619-v = subheader.
    INSERT temp619 INTO TABLE temp618.
    temp619-n = `value`.
    temp619-v = value.
    INSERT temp619 INTO TABLE temp618.
    temp619-n = `class`.
    temp619-v = class.
    INSERT temp619 INTO TABLE temp618.
    temp619-n = `press`.
    temp619-v = press.
    INSERT temp619 INTO TABLE temp618.
    result = _generic( name   = `FeedContent`
                       t_prop = temp618 ).

  ENDMETHOD.

  METHOD news_content.
    DATA temp620 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp620.
    DATA temp621 LIKE LINE OF temp620.
    temp621-n = `contentText`.
    temp621-v = contenttext.
    INSERT temp621 INTO TABLE temp620.
    temp621-n = `subheader`.
    temp621-v = subheader.
    INSERT temp621 INTO TABLE temp620.
    temp621-n = `press`.
    temp621-v = press.
    INSERT temp621 INTO TABLE temp620.
    result = _generic( name   = `NewsContent`
                       t_prop = temp620 ).

  ENDMETHOD.

  METHOD splitter.
    DATA temp622 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp622.
    DATA temp623 LIKE LINE OF temp622.
    temp623-n = `height`.
    temp623-v = height.
    INSERT temp623 INTO TABLE temp622.
    temp623-n = `orientation`.
    temp623-v = orientation.
    INSERT temp623 INTO TABLE temp622.
    temp623-n = `width`.
    temp623-v = width.
    INSERT temp623 INTO TABLE temp622.
    result = _generic( name   = `Splitter`
                       ns     = `layout`
                       t_prop = temp622 ).
  ENDMETHOD.

  METHOD invisible_text.
    DATA temp624 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp624.
    DATA temp625 LIKE LINE OF temp624.
    temp625-n = `id`.
    temp625-v = id.
    INSERT temp625 INTO TABLE temp624.
    temp625-n = `text`.
    temp625-v = text.
    INSERT temp625 INTO TABLE temp624.
    result = _generic( ns     = ns
                       name   = `InvisibleText`
                       t_prop = temp624 ).
  ENDMETHOD.

  METHOD fix_content.
    result = _generic( ns   = ns
                       name = `fixContent` ).
  ENDMETHOD.

  METHOD fix_flex.

    DATA temp626 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp626.
    DATA temp627 LIKE LINE OF temp626.
    temp627-n = `class`.
    temp627-v = class.
    INSERT temp627 INTO TABLE temp626.
    temp627-n = `fixContentSize`.
    temp627-v = fixcontentsize.
    INSERT temp627 INTO TABLE temp626.
    result = _generic( ns     = ns
                       name   = `FixFlex`
                       t_prop = temp626 ).
  ENDMETHOD.

  METHOD flex_content.
    result = _generic( ns   = ns
                       name = `flexContent` ).
  ENDMETHOD.

  METHOD side_navigation.

    DATA temp628 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp628.
    DATA temp629 LIKE LINE OF temp628.
    temp629-n = `id`.
    temp629-v = id.
    INSERT temp629 INTO TABLE temp628.
    temp629-n = `class`.
    temp629-v = class.
    INSERT temp629 INTO TABLE temp628.
    temp629-n = `selectedKey`.
    temp629-v = selectedkey.
    INSERT temp629 INTO TABLE temp628.
    result = _generic( name   = `SideNavigation`
                       ns     = `tnt`
                       t_prop = temp628 ).

  ENDMETHOD.

  METHOD navigation_list.

    result = _generic( name = `NavigationList`
                       ns   = `tnt` ).

  ENDMETHOD.

  METHOD navigation_list_item.

    result = me.
    DATA temp630 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp630.
    DATA temp631 LIKE LINE OF temp630.
    temp631-n = `text`.
    temp631-v = text.
    INSERT temp631 INTO TABLE temp630.
    temp631-n = `icon`.
    temp631-v = icon.
    INSERT temp631 INTO TABLE temp630.
    temp631-n = `href`.
    temp631-v = href.
    INSERT temp631 INTO TABLE temp630.
    temp631-n = `key`.
    temp631-v = key.
    INSERT temp631 INTO TABLE temp630.
    temp631-n = `select`.
    temp631-v = select.
    INSERT temp631 INTO TABLE temp630.
    _generic( name   = `NavigationListItem`
              ns     = `tnt`
              t_prop = temp630 ).

  ENDMETHOD.

  METHOD fixed_item.

    result = _generic( name = `fixedItem`
                       ns   = `tnt` ).

  ENDMETHOD.

  METHOD content_areas.
    result = _generic( name = `contentAreas`
                       ns   = ns ).
  ENDMETHOD.

  METHOD field.
    DATA temp632 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp632.
    DATA temp633 LIKE LINE OF temp632.
    temp633-n = `id`.
    temp633-v = id.
    INSERT temp633 INTO TABLE temp632.
    temp633-n = `value`.
    temp633-v = value.
    INSERT temp633 INTO TABLE temp632.
    temp633-n = `editMode`.
    temp633-v = editmode.
    INSERT temp633 INTO TABLE temp632.
    temp633-n = `showEmptyIndicator`.
    temp633-v = z2ui5_cl_util=>boolean_abap_2_json( showemptyindicator ).
    INSERT temp633 INTO TABLE temp632.
    result = _generic(
        name   = `Field`
        ns     = ns
        t_prop = temp632 ).
  ENDMETHOD.

  METHOD color_picker.

    result = me.
    DATA temp634 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp634.
    DATA temp635 LIKE LINE OF temp634.
    temp635-n = `colorString`.
    temp635-v = colorstring.
    INSERT temp635 INTO TABLE temp634.
    temp635-n = `displayMode`.
    temp635-v = displaymode.
    INSERT temp635 INTO TABLE temp634.
    temp635-n = `change`.
    temp635-v = change.
    INSERT temp635 INTO TABLE temp634.
    temp635-n = `liveChange`.
    temp635-v = livechange.
    INSERT temp635 INTO TABLE temp634.
    _generic( ns     = `u`
              name   = `ColorPicker`
              t_prop = temp634 ).

  ENDMETHOD.

  METHOD tiles.
    result = _generic( `tiles` ).
  ENDMETHOD.

  METHOD analytical_column.
    result = _generic( ns   = ns
                       name = `AnalyticalColumn` ).
  ENDMETHOD.

  METHOD analytical_table.
    DATA temp636 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp636.
    DATA temp637 LIKE LINE OF temp636.
    temp637-n = `selectionMode`.
    temp637-v = selectionmode.
    INSERT temp637 INTO TABLE temp636.
    temp637-n = `rowMode`.
    temp637-v = rowmode.
    INSERT temp637 INTO TABLE temp636.
    temp637-n = `toolbar`.
    temp637-v = toolbar.
    INSERT temp637 INTO TABLE temp636.
    temp637-n = `columns`.
    temp637-v = columns.
    INSERT temp637 INTO TABLE temp636.
    result = _generic( name   = `AnalyticalTable`
                       ns     = ns
                       t_prop = temp636 ).
  ENDMETHOD.

  METHOD auto.
    DATA temp638 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp638.
    DATA temp639 LIKE LINE OF temp638.
    temp639-n = `rowContentHeight`.
    temp639-v = rowcontentheight.
    INSERT temp639 INTO TABLE temp638.
    result = _generic( ns     = ns
                       name   = `Auto`
                       t_prop = temp638 ).
  ENDMETHOD.

  METHOD rowmode.
    result = _generic( name = `rowMode`
                       ns   = ns ).
  ENDMETHOD.

  METHOD breadcrumbs.
    DATA temp640 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp640.
    DATA temp641 LIKE LINE OF temp640.
    temp641-n = `link`.
    temp641-v = link.
    INSERT temp641 INTO TABLE temp640.
    temp641-n = `id`.
    temp641-v = id.
    INSERT temp641 INTO TABLE temp640.
    temp641-n = `class`.
    temp641-v = class.
    INSERT temp641 INTO TABLE temp640.
    temp641-n = `currentLocationText`.
    temp641-v = currentlocationtext.
    INSERT temp641 INTO TABLE temp640.
    temp641-n = `separatorStyle`.
    temp641-v = separatorStyle.
    INSERT temp641 INTO TABLE temp640.
    temp641-n = `visible`.
    temp641-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp641 INTO TABLE temp640.
    result = _generic( ns     = ns
                       name   = `Breadcrumbs`
                       t_prop = temp640 ).
  ENDMETHOD.

  METHOD current_location.
    DATA temp642 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp642.
    DATA temp643 LIKE LINE OF temp642.
    temp643-n = `link`.
    temp643-v = link.
    INSERT temp643 INTO TABLE temp642.
    result = _generic( ns     = ns
                       name   = `currentLocation`
                       t_prop = temp642 ).
  ENDMETHOD.

  METHOD color_palette.
    DATA temp644 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp644.
    DATA temp645 LIKE LINE OF temp644.
    temp645-n = `colorSelect`.
    temp645-v = colorselect.
    INSERT temp645 INTO TABLE temp644.
    result = _generic( ns     = ns
                       name   = `ColorPalette`
                       t_prop = temp644 ).
  ENDMETHOD.

  METHOD HarveyBallMicroChartItem.

    DATA temp646 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp646.
    DATA temp647 LIKE LINE OF temp646.
    temp647-n = `id`.
    temp647-v = id.
    INSERT temp647 INTO TABLE temp646.
    temp647-n = `class`.
    temp647-v = class.
    INSERT temp647 INTO TABLE temp646.
    temp647-n = `fraction`.
    temp647-v = fraction.
    INSERT temp647 INTO TABLE temp646.
    temp647-n = `color`.
    temp647-v = color.
    INSERT temp647 INTO TABLE temp646.
    temp647-n = `fractionScale`.
    temp647-v = fractionScale.
    INSERT temp647 INTO TABLE temp646.
    result = _generic( name   = `HarveyBallMicroChartItem`
                       ns     = `mchart`
                       t_prop = temp646 ).
  ENDMETHOD.

  METHOD smart_filter_bar.

    DATA temp648 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp648.
    DATA temp649 LIKE LINE OF temp648.
    temp649-n = `id`.
    temp649-v = id.
    INSERT temp649 INTO TABLE temp648.
    temp649-n = `entitySet`.
    temp649-v = entitySet.
    INSERT temp649 INTO TABLE temp648.
    temp649-n = `persistencyKey`.
    temp649-v = persistencyKey.
    INSERT temp649 INTO TABLE temp648.
    result = _generic( name   = `SmartFilterBar`
                       ns     = `smartFilterBar`
                       t_prop = temp648 ).

  ENDMETHOD.

  METHOD control_configuration.

    result = me.
    DATA temp650 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp650.
    DATA temp651 LIKE LINE OF temp650.
    temp651-n = `id`.
    temp651-v = id.
    INSERT temp651 INTO TABLE temp650.
    temp651-n = `key`.
    temp651-v = key.
    INSERT temp651 INTO TABLE temp650.
    temp651-n = `visibleInAdvancedArea`.
    temp651-v = z2ui5_cl_util=>boolean_abap_2_json( visibleInAdvancedArea ).
    INSERT temp651 INTO TABLE temp650.
    temp651-n = `preventInitialDataFetchInValueHelpDialog`.
    temp651-v = z2ui5_cl_util=>boolean_abap_2_json( prevInitDataFetchInValHelpDia ).
    INSERT temp651 INTO TABLE temp650.
    _generic( name   = `ControlConfiguration`
                        ns     = `smartFilterBar`
                        t_prop = temp650 ).

  ENDMETHOD.

  METHOD smart_table.

    DATA temp652 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp652.
    DATA temp653 LIKE LINE OF temp652.
    temp653-n = `id`.
    temp653-v = id.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `smartFilterId`.
    temp653-v = smartFilterId.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `tableType`.
    temp653-v = tableType.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `editable`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( editable ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `initiallyVisibleFields`.
    temp653-v = initiallyVisibleFields.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `entitySet`.
    temp653-v = entitySet.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `useVariantManagement`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( useVariantManagement ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `useExportToExcel`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( useExportToExcel ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `useTablePersonalisation`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( useTablePersonalisation ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `header`.
    temp653-v = header.
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `showRowCount`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( showRowCount ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `enableExport`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( enableExport ).
    INSERT temp653 INTO TABLE temp652.
    temp653-n = `enableAutoBinding`.
    temp653-v = z2ui5_cl_util=>boolean_abap_2_json( enableAutoBinding ).
    INSERT temp653 INTO TABLE temp652.
    result = _generic( name   = `SmartTable`
                        ns     = `smartTable`
                        t_prop = temp652 ).

  ENDMETHOD.

  METHOD _control_configuration.

    result = _generic( name   = `controlConfiguration`
                        ns     = `smartFilterBar`
                      ).

  ENDMETHOD.

  METHOD viz_dataset.
    result = _generic( name   = 'dataset'
                       ns     = 'viz' ).
  ENDMETHOD.
  METHOD viz_dimensions.
    result = _generic( name   = 'dimensions'
                       ns     = 'viz.data' ).
  ENDMETHOD.
  METHOD viz_dimension_definition.
    DATA temp654 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp654.
    DATA temp655 LIKE LINE OF temp654.
    temp655-n = `axis`.
    temp655-v = axis.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `dataType`.
    temp655-v = datatype.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `displayValue`.
    temp655-v = displayvalue.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `identity`.
    temp655-v = identity.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `name`.
    temp655-v = name.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `sorter`.
    temp655-v = sorter.
    INSERT temp655 INTO TABLE temp654.
    temp655-n = `value`.
    temp655-v = value.
    INSERT temp655 INTO TABLE temp654.
    result = _generic( name   = 'DimensionDefinition'
                       ns     = 'viz.data'
                       t_prop = temp654 ).
  ENDMETHOD.
  METHOD viz_feeds.
    result = _generic( name   = 'feeds'
                       ns     = 'viz' ).
  ENDMETHOD.
  METHOD viz_feed_item.
    DATA temp656 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp656.
    DATA temp657 LIKE LINE OF temp656.
    temp657-n = `id`.
    temp657-v = id.
    INSERT temp657 INTO TABLE temp656.
    temp657-n = `uid`.
    temp657-v = uid.
    INSERT temp657 INTO TABLE temp656.
    temp657-n = `type`.
    temp657-v = type.
    INSERT temp657 INTO TABLE temp656.
    temp657-n = `values `.
    temp657-v = values.
    INSERT temp657 INTO TABLE temp656.
    result = _generic( name   = 'FeedItem'
                       ns     = 'viz.feeds'
                       t_prop = temp656 ).
  ENDMETHOD.
  METHOD viz_flattened_dataset.
    DATA temp658 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp658.
    DATA temp659 LIKE LINE OF temp658.
    temp659-n = `data`.
    temp659-v = data.
    INSERT temp659 INTO TABLE temp658.
    result = _generic( name   = 'FlattenedDataset'
                       ns     = 'viz.data'
                       t_prop = temp658 ).
  ENDMETHOD.
  METHOD viz_frame.
    DATA lv_vizproperties TYPE string.
    lv_vizproperties = ``.
    IF vizproperties IS INITIAL.
      lv_vizproperties = `{` && |\n|  &&
      `"plotArea": {` && |\n|  &&
          `"dataLabel": {` && |\n|  &&
              `"formatString": "",` && |\n|  &&
              `"visible": false` && |\n|  &&
          `}` && |\n|  &&
      `},` && |\n|  &&
      `"valueAxis": {` && |\n|  &&
          `"label": {` && |\n|  &&
              `"formatString": ""` && |\n|  &&
          `},` && |\n|  &&
          `"title": {` && |\n|  &&
              `"visible": false` && |\n|  &&
          `}` && |\n|  &&
      `},` && |\n|  &&
      `"categoryAxis": {` && |\n|  &&
          `"title": {` && |\n|  &&
              `"visible": false` && |\n|  &&
          `}` && |\n|  &&
      `},` && |\n|  &&
      `"title": {` && |\n|  &&
          `"visible": false,` && |\n|  &&
          `"text": ""` && |\n|  &&
      `}` && |\n|  &&
  `}`.
    ELSE.
      lv_vizproperties = vizproperties.
    ENDIF.

    DATA temp660 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp660.
    DATA temp661 LIKE LINE OF temp660.
    temp661-n = `id`.
    temp661-v = id.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `legendVisible`.
    temp661-v = legendvisible.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `vizCustomizations`.
    temp661-v = vizcustomizations.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `vizProperties`.
    temp661-v = lv_vizproperties.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `vizScales`.
    temp661-v = vizscales.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `vizType`.
    temp661-v = viztype.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `height`.
    temp661-v = height.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `width`.
    temp661-v = width.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `uiConfig`.
    temp661-v = uiconfig.
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `visible`.
    temp661-v = z2ui5_cl_util=>boolean_abap_2_json( visible ).
    INSERT temp661 INTO TABLE temp660.
    temp661-n = `selectData`.
    temp661-v = selectdata.
    INSERT temp661 INTO TABLE temp660.
    result = _generic(  name   = 'VizFrame'
                        ns     = 'viz'
                        t_prop = temp660 ).

  ENDMETHOD.
  METHOD viz_measures.
    result = _generic( name   = 'measures'
                       ns     = 'viz.data' ).
  ENDMETHOD.

  METHOD viz_measure_definition.
    DATA temp662 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp662.
    DATA temp663 LIKE LINE OF temp662.
    temp663-n = `format`.
    temp663-v = format.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `group`.
    temp663-v = group.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `identity`.
    temp663-v = identity.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `name`.
    temp663-v = name.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `range`.
    temp663-v = range.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `unit`.
    temp663-v = unit.
    INSERT temp663 INTO TABLE temp662.
    temp663-n = `value`.
    temp663-v = value.
    INSERT temp663 INTO TABLE temp662.
    result = _generic( name   = 'MeasureDefinition'
                       ns     = 'viz.data'
                       t_prop = temp662 ).
  ENDMETHOD.

  METHOD smart_multi_input.

    DATA temp664 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp664.
    DATA temp665 LIKE LINE OF temp664.
    temp665-n = 'id'.
    temp665-v = id.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'value'.
    temp665-v = value.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'entitySet'.
    temp665-v = entityset.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'supportRanges'.
    temp665-v = supportranges.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'enableODataSelect'.
    temp665-v = enableodataselect.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'requestAtLeastFields'.
    temp665-v = requestatleastfields.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'singleTokenMode'.
    temp665-v = singletokenmode.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'supportMultiSelect'.
    temp665-v = supportmultiselect.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'textSeparator'.
    temp665-v = textseparator.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'textLabel'.
    temp665-v = textlabel.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'tooltipLabel'.
    temp665-v = tooltiplabel.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'textInEditModeSource'.
    temp665-v = textineditmodesource.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'mandatory'.
    temp665-v = mandatory.
    INSERT temp665 INTO TABLE temp664.
    temp665-n = 'maxLength'.
    temp665-v = maxlength.
    INSERT temp665 INTO TABLE temp664.
    result = _generic( name   = 'SmartMultiInput'
                       ns     = 'smi'
                       t_prop = temp664 ).

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_http_handler IMPLEMENTATION.

  METHOD main.

    ms_config = s_config.

    set_request( ).

    CASE ms_req-method.
      WHEN `HEAD`.
        mo_server->set_session_stateful( 0 ).
        RETURN.
      WHEN OTHERS.
        ms_res = _main( is_req    = ms_req
                        is_config = ms_config ).
    ENDCASE.

    set_response( ).

  ENDMETHOD.

  METHOD factory.

    CREATE OBJECT result.

    IF server IS BOUND.
      result->mo_server = z2ui5_cl_util_abap_http=>factory( server ).
    ELSEIF req IS BOUND AND res IS BOUND.
      result = factory_cloud( req = req
                              res = res ).
    ELSE.
      ASSERT 1 = `EMPTY_HTTP_HANDLER_CALL_ERROR`.
    ENDIF.

  ENDMETHOD.

  METHOD factory_cloud.

    CREATE OBJECT result.
    result->mo_server = z2ui5_cl_util_abap_http=>factory_cloud( req = req
                                                               res = res ).

  ENDMETHOD.

  METHOD _http_get.

    IF is_config-title IS INITIAL.
      is_config-title = `abap2UI5`.
    ENDIF.

    IF is_config-theme IS INITIAL.
      is_config-theme = `sap_horizon`.
    ENDIF.

    IF is_config-src IS INITIAL.
      is_config-src = `https://sdk.openui5.org/resources/sap-ui-cachebuster/sap-ui-core.js`.
*      ms_req_config-src     = `https://sdk.openui5.org/1.71.67/resources/sap-ui-core.js`.
*      ms_req_config-src     = `https://sdk.openui5.org/nightly/2/resources/sap-ui-core.js`.
    ENDIF.

    IF is_config-content_security_policy IS INITIAL.
      is_config-content_security_policy = |<meta http-equiv="Content-Security-Policy" content="default-src 'self' 'unsafe-inline' 'unsafe-eval' data: | &&
     |ui5.sap.com *.ui5.sap.com sapui5.hana.ondemand.com *.sapui5.hana.ondemand.com openui5.hana.ondemand.com *.openui5.hana.ondemand.com | &&
     |sdk.openui5.org *.sdk.openui5.org cdn.jsdelivr.net *.cdn.jsdelivr.net cdnjs.cloudflare.com *.cdnjs.cloudflare.com schemas *.schemas; worker-src 'self' blob:; "/>|.
    ENDIF.

    IF is_config-styles_css IS INITIAL.
      DATA lv_style_css TYPE string.
      lv_style_css = z2ui5_cl_app_style_css=>get( ).
    ELSE.
      lv_style_css = is_config-styles_css.
    ENDIF.

    result = |<!DOCTYPE html>| && |\n| &&
               |<html lang="en">| && |\n| &&
               |<head>| && |\n| &&
                  |{ is_config-content_security_policy }\n| &&
               |    <meta charset="UTF-8">| && |\n| &&
               |    <meta name="viewport" content="width=device-width, initial-scale=1.0">| && |\n| &&
               |    <meta http-equiv="X-UA-Compatible" content="IE=edge">| && |\n| &&
                | <title> { is_config-title }</title> \n| &&
                | <style>        html, body, body > div, #container, #container-uiarea \{\n| &
                |            height: 100%;\n| &
                |        \}</style> \n| &&
                |<script>| && |\n| &&
             |  function onInitComponent()\{| && |\n| &&
             |    sap.ui.require.preload(\{| && |\n| &&
             |      "z2ui5/css/style.css": '{ lv_style_css }',| && |\n| &&
             |      "z2ui5/manifest.json": '{ z2ui5_cl_app_manifest_json=>get( ) }',| && |\n| &&
             |      "z2ui5/Component.js": function()\{{ z2ui5_cl_app_component_js=>get( ) }{ is_config-custom_js }\},| && |\n| &&
             |      "z2ui5/model/models.js": function()\{{  z2ui5_cl_app_models_js=>get( ) }\},| && |\n| &&
             |      "z2ui5/view/App.view.xml": '{ z2ui5_cl_app_app_xml=>get( ) }',| && |\n| &&
             |      "z2ui5/controller/App.controller.js": function()\{{ z2ui5_cl_app_app_js=>get( ) }\},| && |\n| &&
             |      "z2ui5/view/View1.view.xml": '{ z2ui5_cl_app_view1_xml=>get( ) }',| && |\n| &&
             |      "z2ui5/controller/View1.controller.js": function()\{{ z2ui5_cl_app_view1_js=>get( ) }\},| && |\n| &&
             |      "z2ui5/cc/Server.js": function()\{{ z2ui5_cl_app_server_js=>get( ) }\},| && |\n| &&
             |      "z2ui5/cc/DebugTool.fragment.xml": '{ z2ui5_cl_app_debugtool_xml=>get( ) }',| && |\n| &&
             |      "z2ui5/cc/DebugTool.js": function()\{{ z2ui5_cl_app_debugtool_js=>get( ) }\},| && |\n| &&
             |    \});| && |\n| &&
             |    sap.ui.require(["sap/ui/core/ComponentSupport"], function(ComponentSupport)\{| && |\n| &&
             |     window.z2ui5 = \{ checkLocal : true \}; ComponentSupport.run();| && |\n| &&
             |    \});| && |\n| &&
             |  \}| && |\n| &&
             |</script>| && |\n| &&
                |<script id="sap-ui-bootstrap" data-sap-ui-resourceroots='\{ "z2ui5": "./" \}' data-sap-ui-oninit="onInitComponent" | && |\n| &&
                 |data-sap-ui-compatVersion="edge" data-sap-ui-async="true" data-sap-ui-frameOptions="trusted" data-sap-ui-bindingSyntax="complex"| && |\n| &&
                 |data-sap-ui-theme="{ is_config-theme  }" src=" { is_config-src }"   |.

    DATA temp666 LIKE LINE OF is_config-t_add_config.
    DATA lr_config LIKE REF TO temp666.
    LOOP AT is_config-t_add_config REFERENCE INTO lr_config.
      result = |{ result } { lr_config->n }='{ lr_config->v }'|.
    ENDLOOP.

    result = result &&
        | ></script></head>| && |\n| &&
        |<body class="sapUiBody sapUiSizeCompact" id="content">| && |\n| &&
        |    <div data-sap-ui-component data-name="z2ui5" data-id="container" data-settings='\{"id" : "z2ui5"\}' data-handle-validation="true"></div>| && |\n| &&
        | </body></html>|.

  ENDMETHOD.

  METHOD run.

    DATA lo_handler TYPE REF TO z2ui5_cl_http_handler.
    lo_handler = factory( server = server
                                req    = req
                                res    = res
         ).

    lo_handler->main( config ).

  ENDMETHOD.

  METHOD set_request.

    ms_req-body   = mo_server->get_cdata( ).
    ms_req-method = mo_server->get_method( ).

  ENDMETHOD.

  METHOD set_response.

    mo_server->set_cdata( ms_res-body ).
    mo_server->set_header_field( n = `cache-control`
                                 v = `no-cache` ).
    mo_server->set_status( code   = 200
                           reason = `success` ).

    " transform cookie to header based contextid handling
    IF ms_res-s_stateful-switched = abap_true.
      mo_server->set_session_stateful( ms_res-s_stateful-active  ).
      IF mo_server->get_header_field( 'sap-contextid-accept' ) = 'header'.
        DATA lv_contextid TYPE string.
        lv_contextid = mo_server->get_response_cookie( 'sap-contextid' ).
        IF lv_contextid IS NOT INITIAL.
          mo_server->delete_response_cookie( 'sap-contextid' ).
          mo_server->set_header_field( n = 'sap-contextid'
                                       v = lv_contextid ).
        ENDIF.
      ENDIF.
    ELSE.
      lv_contextid = mo_server->get_header_field( 'sap-contextid' ).
      IF lv_contextid IS NOT INITIAL.
        mo_server->set_header_field( n = 'sap-contextid'
                                     v = lv_contextid ).
      ENDIF.
    ENDIF.

  ENDMETHOD.

  METHOD _http_post.

    IF so_sticky_handler IS NOT BOUND.
      DATA lo_post TYPE REF TO z2ui5_cl_core_handler.
      CREATE OBJECT lo_post TYPE z2ui5_cl_core_handler EXPORTING VAL = is_req-body.
    ELSE.
      lo_post = so_sticky_handler.
      lo_post->mv_request_json = is_req-body.
    ENDIF.

    result = lo_post->main( ).

    TRY.
        IF lo_post IS BOUND.
          DATA temp667 TYPE REF TO z2ui5_if_app.
          temp667 ?= lo_post->mo_action->mo_app->mo_app.
          DATA li_app LIKE temp667.
          li_app = temp667.
          IF li_app->check_sticky = abap_true.
            so_sticky_handler = lo_post.
          ELSE.
            CLEAR so_sticky_handler.
          ENDIF.
        ENDIF.
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD _main.

    CASE is_req-method.
      WHEN `GET`.
        result-body = _http_get( is_config ).
      WHEN `POST`.
        result = _http_post( is_req ).
    ENDCASE.

  ENDMETHOD.

  METHOD get_request.

    DATA lo_handler TYPE REF TO z2ui5_cl_http_handler.
    lo_handler = factory( server = server
                                req    = req
                                res    = res
     ).

    result-body   = lo_handler->mo_server->get_cdata( ).
    result-method = lo_handler->mo_server->get_method( ).

  ENDMETHOD.

  METHOD get_response.

    DATA lo_handler TYPE REF TO z2ui5_cl_http_handler.
    lo_handler = factory( server = server
                                req    = req
                                res    = res
     ).

    lo_handler->mo_server->set_cdata( is_res-body ).
    lo_handler->mo_server->set_header_field( n = `cache-control`
                                             v = `no-cache` ).
    lo_handler->mo_server->set_status( code   = 200
                                       reason = `success` ).

    " transform cookie to header based contextid handling
    IF is_res-s_stateful-switched = abap_true.
      lo_handler->mo_server->set_session_stateful( is_res-s_stateful-active  ).
      IF lo_handler->mo_server->get_header_field( 'sap-contextid-accept' ) = 'header'.
        DATA lv_contextid TYPE string.
        lv_contextid = lo_handler->mo_server->get_response_cookie( 'sap-contextid' ).
        IF lv_contextid IS NOT INITIAL.
          lo_handler->mo_server->delete_response_cookie( 'sap-contextid' ).
          lo_handler->mo_server->set_header_field( n = 'sap-contextid'
                                                   v = lv_contextid ).
        ENDIF.
      ENDIF.
    ELSE.
      lv_contextid = lo_handler->mo_server->get_header_field( 'sap-contextid' ).
      IF lv_contextid IS NOT INITIAL.
        lo_handler->mo_server->set_header_field( n = 'sap-contextid'
                                                 v = lv_contextid ).
      ENDIF.
    ENDIF.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_startup IMPLEMENTATION.

  METHOD factory.

    CREATE OBJECT result.

  ENDMETHOD.

  METHOD on_event_check.
    " TODO: variable is assigned but never used (ABAP cleaner)
    DATA li_app_test TYPE REF TO z2ui5_if_app.

    TRY.
        ms_home-classname = z2ui5_cl_util=>c_trim_upper( ms_home-classname ).
        CREATE OBJECT li_app_test TYPE (ms_home-classname).

        client->message_toast_display( `App is ready to start!` ).
        ms_home-btn_text          = `edit`.
        ms_home-btn_event_id      = `BUTTON_CHANGE`.
        ms_home-btn_icon          = `sap-icon://edit`.
        ms_home-class_value_state = `Success`.
        ms_home-class_editable    = abap_false.

        ms_home-url               = z2ui5_cl_core_srv_util=>app_get_url( client    = client
                                                                         classname = ms_home-classname ).

        DATA lx TYPE REF TO cx_root.
      CATCH cx_root INTO lx.
        ms_home-class_value_state_text = lx->get_text( ).
        ms_home-class_value_state      = `Warning`.
        client->message_box_display( text = ms_home-class_value_state_text
                                     type = `error` ).
    ENDTRY.

  ENDMETHOD.

  METHOD view_display_start.

    DATA page TYPE REF TO z2ui5_cl_xml_view.
    page = z2ui5_cl_xml_view=>factory( )->shell( )->page(
                     title         = `abap2UI5 - Developing UI5 Apps Purely in ABAP`
                     shownavbutton = abap_false ).

    page->header_content(
      )->toolbar_spacer(
      )->button( text  = `Debugging Tools`
                 icon  = `sap-icon://enablement`
                 press = client->_event( `OPEN_DEBUG` )
      )->button( text  = `System`
                 icon  = `sap-icon://information`
                 press = client->_event( `OPEN_INFO` ) ).

    DATA simple_form TYPE REF TO z2ui5_cl_xml_view.
    simple_form = page->simple_form( editable                = abap_true
                                           layout                  = `ResponsiveGridLayout`
                                           labelspanxl             = `4`
                                           labelspanl              = `3`
                                           labelspanm              = `4`
                                           labelspans              = `12`
                                           adjustlabelspan         = abap_false
                                           emptyspanxl             = `0`
                                           emptyspanl              = `4`
                                           emptyspanm              = `0`
                                           emptyspans              = `0`
                                           columnsxl               = `1`
                                           columnsl                = `1`
                                           columnsm                = `1`
                                           singlecontainerfullsize = abap_false
      )->content( `form` ).

    simple_form->toolbar( )->title( `Quickstart` ).
    simple_form->label( `Step 1`
      )->text( `Create a new class in your ABAP system`
      )->label( `Step 2`
      )->text( `Add the interface: Z2UI5_IF_APP`
      )->label( `Step 3`
      )->text( `Define the view, implement behavior`
      )->label(
      )->link( text   = `(Example)`
               target = `_blank`
               href   = `https://github.com/abap2UI5/abap2UI5/blob/main/src/02/z2ui5_cl_app_hello_world.clas.abap`
      )->label( `Step 4` ).

    IF ms_home-class_editable = abap_true.

      simple_form->input( placeholder      = `fill in the class name and press 'check'`
                          enabled          = client->_bind( ms_home-class_editable )
                          value            = client->_bind_edit( ms_home-classname )
                          submit           = client->_event( ms_home-btn_event_id )
                          valuehelprequest = client->_event( 'VALUE_HELP' )
                          showvaluehelp    = abap_true
                          width            = `70%` ).

    ELSE.
      simple_form->text( ms_home-classname ).
    ENDIF.

    simple_form->label( ).
    simple_form->button( press = client->_event( ms_home-btn_event_id )
                         text  = client->_bind( ms_home-btn_text )
                         icon  = client->_bind( ms_home-btn_icon )
                         width = `70%` ).
    simple_form->label( `Step 5`
      )->link( text    = `Link to the Application`
               target  = `_blank`
               href    = client->_bind( ms_home-url )
               enabled = |\{= ${ client->_bind( val = ms_home-class_editable ) } === false \}| ).

    DATA lv_url_samples2 TYPE string.
    lv_url_samples2 = z2ui5_cl_core_srv_util=>app_get_url( client    = client
                                                                 classname = 'z2ui5_cl_demo_app_000' ).

    simple_form->toolbar( )->title( `What's next?` ).

    IF z2ui5_cl_util=>rtti_check_class_exists( `z2ui5_cl_demo_app_000` ) IS NOT INITIAL.
      simple_form->label( `Start Developing` ).
      DATA temp668 TYPE string_table.
      CLEAR temp668.
      INSERT lv_url_samples2 INTO TABLE temp668.
      simple_form->button( text  = `Explore Code Samples`
                           press = client->_event_client( val   = client->cs_event-open_new_tab
                                                          t_arg = temp668 )
                           width = `70%` ).

    ELSE.
      simple_form->label( `Install the sample repository` ).
      simple_form->link( text   = `And explore more than 200 sample apps...`
                         target = `_blank`
                         href   = `https://github.com/abap2UI5/abap2UI5-samples` ).
    ENDIF.

    simple_form->toolbar( )->title( `Contribution` ).

    simple_form->label( `Open an issue` ).
    simple_form->link( text   = `You have problems, comments or wishes?`
                       target = `_blank`
                       href   = `https://github.com/abap2UI5/abap2UI5/issues` ).

    simple_form->label( `Open a Pull Request` ).
    simple_form->link( text   = `You added a new feature or fixed a bug?`
                       target = `_blank`
                       href   = `https://github.com/abap2UI5/abap2UI5/pulls` ).
    simple_form->toolbar( )->title( `More` ).
    simple_form->label( ).
    simple_form->link( text   = `www.abap2UI5.org`
                       target = `_blank`
                       href   = `http://www.abap2UI5.org` ).

    client->view_display( page->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF mv_check_initialized = abap_false.
      mv_check_initialized = abap_true.
      z2ui5_on_init( ).
      view_display_start( ).
      RETURN.
    ENDIF.

    IF client->get( )-check_on_navigated = abap_true.
      TRY.
          DATA temp670 TYPE REF TO z2ui5_cl_pop_to_select.
          temp670 ?= client->get_app( client->get( )-s_draft-id_prev_app ).
          DATA lo_f4 LIKE temp670.
          lo_f4 = temp670.
          DATA ls_result TYPE z2ui5_cl_pop_to_select=>ty_s_result.
          ls_result = lo_f4->result( ).
          IF ls_result-check_confirmed = abap_true.

            FIELD-SYMBOLS <class> TYPE data.
            ASSIGN ls_result-row->* TO <class>.
            ms_home = ms_home.
MOVE-CORRESPONDING <class> TO ms_home.
            view_display_start( ).
            RETURN.
          ENDIF.
        CATCH cx_root.
      ENDTRY.
    ENDIF.

    z2ui5_on_event( ).

  ENDMETHOD.

  METHOD view_display_popup.

    DATA page2 TYPE REF TO z2ui5_cl_xml_view.
    page2 = z2ui5_cl_xml_view=>factory_popup(
         )->dialog( title      = `abap2UI5 - System Information`
                    afterclose = client->_event( `CLOSE` ) ).

    DATA content TYPE REF TO z2ui5_cl_xml_view.
    content = page2->content( ).
    content->_z2ui5( )->info_frontend( ui5_version = client->_bind( mv_ui5_version ) ).

    DATA simple_form2 TYPE REF TO z2ui5_cl_xml_view.
    simple_form2 = content->simple_form( editable                = abap_true
                                               layout                  = `ResponsiveGridLayout`
                                               labelspanxl             = `4`
                                               labelspanl              = `3`
                                               labelspanm              = `4`
                                               labelspans              = `12`
                                               adjustlabelspan         = abap_false
                                               emptyspanxl             = `0`
                                               emptyspanl              = `4`
                                               emptyspanm              = `0`
                                               emptyspans              = `0`
                                               columnsxl               = `1`
                                               columnsl                = `1`
                                               columnsm                = `1`
                                               singlecontainerfullsize = abap_false
      )->content( `form` ).

    simple_form2->toolbar( )->title( `Frontend` ).

    simple_form2->label( `UI5 Version` ).
    simple_form2->text( client->_bind( mv_ui5_version ) ).
    simple_form2->label( `Launchpad active` ).
    simple_form2->checkbox( enabled  = abap_false
                            selected = client->get( )-check_launchpad_active ).

    simple_form2->toolbar( )->title( `Backend` ).

    simple_form2->label( `ABAP for Cloud` ).
    simple_form2->checkbox( enabled  = abap_false
                            selected = z2ui5_cl_util=>context_check_abap_cloud( ) ).

    DATA temp671 TYPE string.
    DATA temp7 TYPE REF TO z2ui5_cl_core_srv_draft.
    CREATE OBJECT temp7 TYPE z2ui5_cl_core_srv_draft.
    temp671 = temp7->count_entries( ).
    DATA lv_count LIKE temp671.
    lv_count = temp671.
    simple_form2->toolbar( )->title( `abap2UI5` ).
    simple_form2->label( `Version ` ).
    simple_form2->text( z2ui5_if_app=>version ).
    simple_form2->label( `Draft Entries ` ).
    simple_form2->text( lv_count ).

    page2->end_button( )->button( text  = 'close'
                                  press = client->_event( 'CLOSE' )
                                  type  = 'Emphasized' ).

    client->popup_display( page2->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_on_event.

    DATA li_app TYPE REF TO z2ui5_if_app.

    CASE client->get( )-event.

      WHEN `CLOSE`.
        client->popup_destroy( ).

      WHEN `OPEN_DEBUG`.
        client->message_box_display( `Press CTRL+F12 to open the debugging tools` ).
      WHEN `OPEN_INFO`.
        view_display_popup( ).
*        client->nav_app_call( z2ui5_cl_core_app_info=>factory( ) ).
        RETURN.

      WHEN `BUTTON_CHECK`.
        IF ms_home-class_editable = abap_false.
          ms_home-btn_text       = `check`.
          ms_home-btn_event_id   = `BUTTON_CHECK`.
          ms_home-btn_icon       = `sap-icon://validate`.
          ms_home-class_editable = abap_true.

        ELSE.
          on_event_check( ).
        ENDIF.
        client->view_model_update( ).

      WHEN 'VALUE_HELP'.
        TRY.
            mt_classes = z2ui5_cl_util=>rtti_get_classes_impl_intf( z2ui5_cl_util=>rtti_get_intfname_by_ref( li_app ) ).
          CATCH cx_root.
            client->message_box_display( `Unfortunately the value help is not available on your ABAP release!` ).
            RETURN.
        ENDTRY.
        client->nav_app_call( z2ui5_cl_pop_to_select=>factory( mt_classes ) ).
    ENDCASE.

  ENDMETHOD.

  METHOD z2ui5_on_init.

    ms_home-btn_text       = `check`.
    ms_home-btn_event_id   = `BUTTON_CHECK`.
    ms_home-class_editable = abap_true.
    ms_home-btn_icon       = `sap-icon://validate`.
    DATA temp672 TYPE REF TO z2ui5_cl_app_hello_world.
    CREATE OBJECT temp672 TYPE z2ui5_cl_app_hello_world.
    ms_home-classname      = z2ui5_cl_util=>rtti_get_classname_by_ref( temp672 ).

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_hello_world IMPLEMENTATION.

  METHOD z2ui5_if_app~main.

    IF check_initialized = abap_false.
      check_initialized = abap_true.

      client->view_display( z2ui5_cl_xml_view=>factory(
        )->shell(
        )->page( title = 'abap2UI5 - Hello World'
        )->simple_form( editable = abap_true
            )->content( ns = `form`
                )->title( 'Make an input here and send it to the server...'
                )->label( 'Name'
                )->input( client->_bind_edit( name )
                )->button( text  = 'post'
                           press = client->_event( 'BUTTON_POST' )
        )->stringify( ) ).

    ENDIF.

    CASE client->get( )-event.
      WHEN 'BUTTON_POST'.
        client->message_box_display( |Your name is { name }| ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_pop_to_select IMPLEMENTATION.

  METHOD factory.

    CREATE OBJECT r_result.
    IF i_title IS INITIAL.
      DATA temp673 TYPE string.
      IF i_multiselect = abap_true.
        temp673 = `Multi select`.
      ELSE.
        temp673 = `Single select`.
      ENDIF.
      r_result->title = temp673.
    ELSE.
      r_result->title = i_title.
    ENDIF.

    r_result->sort_field        = i_sort_field.
    r_result->descending        = i_descending.
    r_result->content_height    = i_contentheight.
    r_result->content_width     = i_contentwidth.
    r_result->growing_threshold = i_growingthreshold.
    r_result->multiselect       = i_multiselect.
    r_result->event_confirmed   = i_event_confirmed.
    r_result->event_canceled    = i_event_canceled.

    r_result->mr_tab            = z2ui5_cl_util=>conv_copy_ref_data( i_tab ).
    CREATE DATA r_result->ms_result-row LIKE LINE OF i_tab.
    CREATE DATA r_result->ms_result-table LIKE i_tab.

  ENDMETHOD.

  METHOD display.

    FIELD-SYMBOLS <tab_out> TYPE STANDARD TABLE.

    ASSIGN mr_tab_popup->* TO <tab_out>.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( ).
    DATA temp674 TYPE string_table.
    CLEAR temp674.
    INSERT `${$parameters>/value}` INTO TABLE temp674.
    INSERT `${$parameters>/clearButtonPressed}` INTO TABLE temp674.
    DATA temp8 TYPE string_table.
    CLEAR temp8.
    INSERT `${$parameters>/selectedContexts[0]/sPath}` INTO TABLE temp8.
    DATA tab TYPE REF TO z2ui5_cl_xml_view.
    tab = popup->table_select_dialog(
        items            = |\{path:'|
                          && client->_bind_edit( val  = <tab_out>
                                                 path = abap_true )
                          && |', sorter : \{ path : '{ to_upper( sort_field ) }', descending : |
                          && z2ui5_cl_util=>boolean_abap_2_json( me->descending )
                          && | \} \}|
        cancel           = client->_event( 'CANCEL' )
        search           = client->_event(
                               val   = 'SEARCH'
                               t_arg = temp674 )
        confirm          = client->_event( val   = 'CONFIRM'
                                           t_arg = temp8 )
        growing          = abap_true
        contentwidth     = content_width
        contentheight    = content_height
        growingthreshold = growing_threshold
        title            = title
        multiselect      = multiselect ).

    DATA lt_comp TYPE abap_component_tab.
    lt_comp = z2ui5_cl_util=>rtti_get_t_attri_by_any( <tab_out> ).
    DELETE lt_comp WHERE name = 'ZZSELKZ'.

    DATA list TYPE REF TO z2ui5_cl_xml_view.
    list = tab->column_list_item( valign   = `Top`
                                        selected = `{ZZSELKZ}` ).
    DATA cells TYPE REF TO z2ui5_cl_xml_view.
    cells = list->cells( ).

    DATA ls_comp LIKE LINE OF lt_comp.
    LOOP AT lt_comp INTO ls_comp.
      cells->text( |\{{ ls_comp-name }\}| ).
    ENDLOOP.

    DATA columns TYPE REF TO z2ui5_cl_xml_view.
    columns = tab->columns( ).
    LOOP AT lt_comp INTO ls_comp.
      DATA temp676 TYPE REF TO cl_abap_elemdescr.
      temp676 ?= ls_comp-type.
      DATA temp10 TYPE z2ui5_cl_util_abap=>ty_s_data_element_text-medium.
      DATA data_element_name TYPE string.
      data_element_name = substring_after( val = temp676->absolute_name sub = '\TYPE=' ).
      DATA medium_label TYPE z2ui5_cl_util_abap=>ty_s_data_element_text-medium.
      medium_label = z2ui5_cl_util=>rtti_get_data_element_texts( data_element_name )-medium.
      IF medium_label IS NOT INITIAL.
        temp10 = medium_label.
      ELSE.
        temp10 = ls_comp-name.
      ENDIF.
      DATA text LIKE temp10.
      text = temp10.
      columns->column( '8rem' )->header( `` )->text( text ).
    ENDLOOP.

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      set_output_table( ).
      display( ).
      RETURN.
    ENDIF.

    on_event( ).

  ENDMETHOD.

  METHOD on_event.

    CASE client->get( )-event.

      WHEN 'CONFIRM'.
        ms_result-check_confirmed = abap_true.
        on_event_confirm( ).

      WHEN 'CANCEL'.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
        client->follow_up_action( client->_event( event_canceled ) ).

      WHEN 'SEARCH'.
        on_event_search( ).

    ENDCASE.

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD set_output_table.

    FIELD-SYMBOLS <row>      TYPE any.
    FIELD-SYMBOLS <row2>     TYPE any.
    FIELD-SYMBOLS <tab>      TYPE STANDARD TABLE.
    FIELD-SYMBOLS <tab_out>  TYPE STANDARD TABLE.
    FIELD-SYMBOLS <tab_out2> TYPE STANDARD TABLE.
    FIELD-SYMBOLS <field>    TYPE any.
    DATA lr_row TYPE REF TO data.

    ASSIGN mr_tab->* TO <tab>.

    DATA lo_type TYPE REF TO cl_abap_typedescr.
    lo_type = cl_abap_structdescr=>describe_by_data( <tab> ).
    DATA temp677 TYPE REF TO cl_abap_tabledescr.
    temp677 ?= lo_type.
    DATA lo_table LIKE temp677.
    lo_table = temp677.
    TRY.
        DATA temp678 TYPE REF TO cl_abap_structdescr.
        temp678 ?= lo_table->get_table_line_type( ).
        DATA lo_struct LIKE temp678.
        lo_struct = temp678.
        DATA lt_comp TYPE abap_component_tab.
        lt_comp = lo_struct->get_components( ).
      CATCH cx_root.
        check_table_line = abap_true.
        DATA temp679 TYPE REF TO cl_abap_elemdescr.
        temp679 ?= lo_table->get_table_line_type( ).
        DATA lo_elem LIKE temp679.
        lo_elem = temp679.
        DATA temp680 TYPE abap_componentdescr.
        CLEAR temp680.
        temp680-name = 'TAB_LINE'.
        DATA temp11 TYPE REF TO cl_abap_datadescr.
        temp11 ?= lo_elem.
        temp680-type = temp11.
        INSERT temp680 INTO TABLE lt_comp.
    ENDTRY.

    DATA temp681 LIKE sy-subrc.
    READ TABLE lt_comp WITH KEY name = `ZZSELKZ` TRANSPORTING NO FIELDS.
    temp681 = sy-subrc.
    IF NOT temp681 = 0.
      DATA lo_type_bool TYPE REF TO cl_abap_typedescr.
      lo_type_bool = cl_abap_structdescr=>describe_by_name( 'ABAP_BOOL' ).
      DATA temp682 TYPE abap_componentdescr.
      CLEAR temp682.
      temp682-name = `ZZSELKZ`.
      DATA temp12 TYPE REF TO cl_abap_datadescr.
      temp12 ?= lo_type_bool.
      temp682-type = temp12.
      INSERT temp682 INTO TABLE lt_comp.
    ENDIF.

    DATA lo_line_type TYPE REF TO cl_abap_structdescr.
    lo_line_type = cl_abap_structdescr=>create( lt_comp ).
    DATA lo_tab_type TYPE REF TO cl_abap_tabledescr.
    lo_tab_type = cl_abap_tabledescr=>create( lo_line_type ).

    CREATE DATA mr_tab_popup TYPE HANDLE lo_tab_type.
    CREATE DATA mr_tab_popup_backup TYPE HANDLE lo_tab_type.

    ASSIGN mr_tab_popup->* TO <tab_out>.
    ASSIGN mr_tab_popup_backup->* TO <tab_out2>.
    LOOP AT <tab> ASSIGNING <row>.

      CREATE DATA lr_row LIKE LINE OF <tab_out>.
      ASSIGN lr_row->* TO <row2>.
      IF check_table_line = abap_true.
        ASSIGN lr_row->('TAB_LINE') TO <field>.
        ASSERT sy-subrc = 0.
        <field> = <row>.
      ELSE.
        MOVE-CORRESPONDING <row> TO <row2>.
      ENDIF.
      INSERT <row2> INTO TABLE <tab_out>.

    ENDLOOP.

    <tab_out2> = <tab_out>.

  ENDMETHOD.

  METHOD on_event_confirm.

    FIELD-SYMBOLS <tab>                 TYPE STANDARD TABLE.
    FIELD-SYMBOLS <row_selected>        TYPE any.
    FIELD-SYMBOLS <selkz>               TYPE any.
    FIELD-SYMBOLS <row_result>          TYPE any.
    FIELD-SYMBOLS <table_result>        TYPE ANY TABLE.
    FIELD-SYMBOLS <table_line_selected> TYPE any.

    ASSIGN mr_tab_popup->* TO <tab>.
    ASSIGN ms_result-table->* TO <table_result>.

    LOOP AT <tab> ASSIGNING <row_selected>.

      ASSIGN ('<ROW_SELECTED>-ZZSELKZ') TO <selkz>.
      ASSERT sy-subrc = 0.
      IF <selkz> = abap_false.
        CONTINUE.
      ENDIF.

      ASSIGN ms_result-row->* TO <row_result>.
      IF check_table_line = abap_true.
        ASSIGN ('<ROW_SELECTED>-TAB_LINE') TO <table_line_selected>.
        ASSERT sy-subrc = 0.
        <row_result> = <table_line_selected>.
      ELSE.
        MOVE-CORRESPONDING <row_selected> TO <row_result>.
      ENDIF.

      INSERT <row_result> INTO TABLE <table_result>.
      IF multiselect = abap_false.
        EXIT.
      ELSE.
        CLEAR <row_result>.
      ENDIF.

    ENDLOOP.

    client->popup_destroy( ).
    client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
    client->follow_up_action( client->_event( val    = event_confirmed
                                              r_data = <table_result> ) ).

  ENDMETHOD.

  METHOD on_event_search.

    FIELD-SYMBOLS <tab_out>        TYPE STANDARD TABLE.
    FIELD-SYMBOLS <tab_out_backup> TYPE STANDARD TABLE.
    FIELD-SYMBOLS <row2>           TYPE any.
    FIELD-SYMBOLS <field2>         TYPE any.

    DATA lt_arg TYPE string_table.
    lt_arg = client->get( )-t_event_arg.
    DATA ls_arg TYPE string.
    READ TABLE lt_arg INTO ls_arg INDEX 1.
    ASSERT sy-subrc = 0.

    ASSIGN mr_tab_popup->* TO <tab_out>.
    ASSIGN mr_tab_popup_backup->* TO <tab_out_backup>.

    <tab_out> = <tab_out_backup>.

    DATA lt_comp TYPE abap_component_tab.
    lt_comp = z2ui5_cl_util=>rtti_get_t_attri_by_any( <tab_out> ).
    LOOP AT <tab_out> ASSIGNING <row2>.
      DATA lv_check_continue LIKE abap_false.
      lv_check_continue = abap_false.
      DATA ls_comp LIKE LINE OF lt_comp.
      LOOP AT lt_comp INTO ls_comp.
        DATA lv_assign TYPE string.
        lv_assign = |<ROW2>-{ ls_comp-name }|.
        ASSIGN (lv_assign) TO <field2>.
        ASSERT sy-subrc = 0.
        IF to_upper( <field2> ) CS to_upper( ls_arg ).
          lv_check_continue = abap_true.
          EXIT.
        ENDIF.
      ENDLOOP.
      IF lv_check_continue = abap_true.
        CONTINUE.
      ENDIF.
      DELETE <tab_out>.
    ENDLOOP.
    client->popup_model_update( ).

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_pop_to_inform IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = i_title.
    r_result->icon                = i_icon.
    r_result->question_text       = i_text.
    r_result->button_text_confirm = i_button_text.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CONFIRM' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                      )->text( question_text
              )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_confirm
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONFIRM`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_to_confirm IMPLEMENTATION.
  METHOD result.

    result = check_result_confirmed.

  ENDMETHOD.

  METHOD factory.

    CREATE OBJECT r_result.

    r_result->title               = i_title.
    r_result->icon                = i_icon.
    r_result->question_text       = i_question_text.
    r_result->button_text_confirm = i_button_text_confirm.
    r_result->button_text_cancel  = i_button_text_cancel.
    r_result->event_confirm       = i_event_confirm.
    r_result->event_canceled      = i_event_cancel.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CANCEL' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                      )->text( question_text
              )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_cancel
                             press = client->_event( 'BUTTON_CANCEL' )
                  )->button( text  = button_text_confirm
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONFIRM`.
        check_result_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app_prev( ) ).
        client->follow_up_action( client->_event( event_confirm ) ).

      WHEN `BUTTON_CANCEL`.
        client->follow_up_action( client->_event( event_canceled ) ).
        check_result_confirmed = abap_false.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app_prev( ) ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_textedit IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->mv_stretch_active = i_stretch_active.
    r_result->ms_result-text = i_textarea.
    r_result->mv_title          = i_title.
    r_result->mv_check_editable = i_check_editable.

  ENDMETHOD.

  METHOD display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( afterclose = client->_event( 'BUTTON_TEXTAREA_CANCEL' )
                                                               stretch    = mv_stretch_active
                                                               title      = mv_title
                                                               icon       = 'sap-icon://edit'
          )->content(
              )->text_area( growing  = abap_true
                            editable = mv_check_editable
                            value    = client->_bind_edit( ms_result-text )
          )->get_parent(
          )->buttons(
              )->button( text  = 'Cancel'
                         press = client->_event( 'BUTTON_TEXTAREA_CANCEL' )
              )->button( text  = 'Confirm'
                         press = client->_event( 'BUTTON_TEXTAREA_CONFIRM' )
                         type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_TEXTAREA_CONFIRM`.
        ms_result-check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `BUTTON_TEXTAREA_CANCEL`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

    ENDCASE.

  ENDMETHOD.

  METHOD result.
    result = ms_result.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_table IMPLEMENTATION.
  METHOD display.

    FIELD-SYMBOLS <tab_out> TYPE STANDARD TABLE.

    ASSIGN mr_tab->* TO <tab_out>.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( afterclose = client->_event( 'BUTTON_CONFIRM' )
                                                               stretch    = abap_true
                                                               title      = title
*                                                               icon       = 'sap-icon://edit'
          )->content( ).

    DATA tab TYPE REF TO z2ui5_cl_xml_view.
    tab = popup->table( client->_bind( <tab_out> ) ).

    DATA lt_comp TYPE abap_component_tab.
    lt_comp = z2ui5_cl_util=>rtti_get_t_attri_by_any( <tab_out> ).

    DATA list TYPE REF TO z2ui5_cl_xml_view.
    list = tab->column_list_item( valign = `Top` ).
    DATA cells TYPE REF TO z2ui5_cl_xml_view.
    cells = list->cells( ).

    DATA ls_comp LIKE LINE OF lt_comp.
    LOOP AT lt_comp INTO ls_comp.
      cells->text( |\{{ ls_comp-name }\}| ).
    ENDLOOP.

    DATA columns TYPE REF TO z2ui5_cl_xml_view.
    columns = tab->columns( ).
    LOOP AT lt_comp INTO ls_comp.
      columns->column( '8rem' )->header( `` )->text( ls_comp-name ).
    ENDLOOP.

    popup->get_parent(
        )->buttons(
            )->button( text  = 'OK'
                       press = client->_event( 'BUTTON_CONFIRM' )
                       type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD factory.
    FIELD-SYMBOLS <tab> TYPE any.

    CREATE OBJECT r_result.
    IF i_title IS NOT INITIAL.
      r_result->title = i_title.
    ENDIF.
    CREATE DATA r_result->mr_tab LIKE i_tab.
    CREATE DATA r_result->ms_result-row LIKE LINE OF i_tab.

    ASSIGN r_result->mr_tab->* TO <tab>.
    <tab> = i_tab.

  ENDMETHOD.

  METHOD on_event.

    CASE client->get( )-event.

      WHEN 'BUTTON_CONFIRM'.
        ms_result-check_confirmed = abap_true.
        on_event_confirm( ).

      WHEN 'CANCEL'.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

    ENDCASE.

  ENDMETHOD.

  METHOD on_event_confirm.

    client->popup_destroy( ).
    client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      display( ).
      RETURN.
    ENDIF.

    on_event( ).

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_pdf IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = i_title.
    r_result->button_text_confirm = i_button_text_confirm.
    r_result->button_text_cancel  = i_button_text_cancel.
    r_result->mv_pdf              = i_pdf.

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD view_display.

    DATA temp683 TYPE z2ui5_if_types=>ty_t_name_value.
    CLEAR temp683.
    DATA temp684 LIKE LINE OF temp683.
    temp684-n = `src`.
    temp684-v = mv_pdf.
    INSERT temp684 INTO TABLE temp683.
    temp684-n = `height`.
    temp684-v = `800px`.
    INSERT temp684 INTO TABLE temp683.
    temp684-n = `width`.
    temp684-v = `99%`.
    INSERT temp684 INTO TABLE temp683.
    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               stretch    = abap_true
                                                               afterclose = client->_event( 'BUTTON_CANCEL' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                  )->label( question_text
                  )->_generic( ns     = `html`
                               name   = `iframe`
                               t_prop = temp683
              )->get_parent( )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_cancel
                             press = client->_event( 'BUTTON_CANCEL' )
                  )->button( text  = button_text_confirm
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.

      WHEN `BUTTON_CONFIRM`.
        check_result_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN `BUTTON_CANCEL`.
        check_result_confirmed = abap_false.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_messages IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    DATA lt_msg TYPE z2ui5_cl_util=>ty_t_msg.
    lt_msg = z2ui5_cl_util=>msg_get( i_messages ).

    DATA temp685 LIKE LINE OF lt_msg.
    DATA lr_row LIKE REF TO temp685.
    LOOP AT lt_msg REFERENCE INTO lr_row.

      DATA temp686 TYPE ty_s_msg.
      CLEAR temp686.
      DATA ls_row LIKE temp686.
      ls_row = temp686.
      ls_row-type     = z2ui5_cl_util=>ui5_get_msg_type( lr_row->type ).
      ls_row-title    = lr_row->text.
*      lr_row->title = `title`.
*      lr_row->message = `message`.
      ls_row-subtitle = |{ lr_row->id } { lr_row->no }|.
*      lr_row->group = `001`.

      INSERT ls_row INTO TABLE r_result->mt_msg.
    ENDLOOP.

    r_result->title = i_title.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( ).
    popup = popup->dialog( title             = `Messages`
                           contentheight     = '50%'
                           contentwidth      = '50%'
                           verticalScrolling = abap_false
                           afterclose        = client->_event( 'BUTTON_CONTINUE' )
         ).

    popup->message_view( items = client->_bind( mt_msg  )
*                         groupitems = abap_true
        )->message_item( type     = `{TYPE}`
                         title    = `{TITLE}`
                         subtitle = `{SUBTITLE}`
*                         description = `{MESSAGE}`
*                         groupname = `{GROUP}`
            ).

    popup->buttons(
       )->button( text  = 'continue'
                  press = client->_event( 'BUTTON_CONTINUE' )
                  type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONTINUE`.
        client->popup_destroy( ).
        client->nav_app_leave( ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_js_loader IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->js           = i_js.
    r_result->user_command = i_result.

  ENDMETHOD.

  METHOD factory_check_open_ui5.
    CREATE OBJECT r_result.
    r_result->check_open_ui5 = abap_true.
  ENDMETHOD.

  METHOD result.

    result3 = user_command.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( `Setup UI...`
        )->content( ).

    IF js IS NOT INITIAL.
      popup->_z2ui5( )->timer( client->_event( 'TIMER_FINISHED' )
      )->_generic( ns   = `html`
                   name = `script` )->_cc_plain_xml( js ).
    ENDIF.

    IF check_open_ui5 = abap_true.
      popup->_z2ui5( )->info_frontend( finished = client->_event( `INFO_FINISHED` )
                                       ui5_gav  = client->_bind_edit( ui5_gav ) ).
    ENDIF.

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `INFO_FINISHED`.
        IF to_upper( ui5_gav ) CS `OPEN`.
          mv_is_open_ui5 = abap_true.
        ENDIF.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `TIMER_FINISHED`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_itab_json_dl IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->mr_itab             = z2ui5_cl_util=>conv_copy_ref_data( itab ).

    r_result->title               = i_title.
    r_result->icon                = i_icon.

    r_result->button_text_confirm = i_button_text_confirm.
    r_result->button_text_cancel  = i_button_text_cancel.

  ENDMETHOD.

  METHOD result.

    result = check_result_confirmed.

  ENDMETHOD.

  METHOD z2ui5_if_app~main.
    DATA app TYPE REF TO object.

    me->client = client.

    TRY.

        IF z2ui5_cl_util=>rtti_check_class_exists( `z2ui5_dbt_cl_app_03` ) = abap_false.

          DATA lv_link TYPE string.
          lv_link = `https://github.com/oblomov-dev/a2UI5-db_table_loader`.
          DATA lv_text TYPE string.
          lv_text = |<p>Please install the open-source project a2UI5-db_table_loader and try again: <a href="| &&
                           |{ lv_link }" style="color:blue; font-weight:600;" target="_blank">(link)</a></p>|.

          DATA lx TYPE REF TO z2ui5_cx_util_error.
          CREATE OBJECT lx TYPE z2ui5_cx_util_error EXPORTING val = lv_text.
          client->nav_app_leave( z2ui5_cl_pop_error=>factory( lx ) ).

        ELSE.

          DATA lv_classname TYPE string.
          lv_classname = `Z2UI5_DBT_CL_APP_03`.
          CALL METHOD (lv_classname)=>('FACTORY_POPUP_BY_ITAB')
            EXPORTING
              itab   = mr_itab
            RECEIVING
              result = app.

          DATA temp687 TYPE REF TO z2ui5_if_app.
          temp687 ?= app.
          client->nav_app_leave( temp687 ).

        ENDIF.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        client->nav_app_leave( z2ui5_cl_pop_to_inform=>factory( x->get_text( ) ) ).
    ENDTRY.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_input_val IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = title.

    r_result->question_text       = text.
    r_result->button_text_confirm = button_text_confirm.
    r_result->button_text_cancel  = button_text_cancel.
    r_result->ms_result-value = val.

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CANCEL' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                  )->label( question_text
                  )->input( value  = client->_bind_edit( ms_result-value )
                            submit = client->_event( 'BUTTON_CONFIRM' )
              )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_cancel
                             press = client->_event( 'BUTTON_CANCEL' )
                  )->button( text  = button_text_confirm
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONFIRM`.
        ms_result-check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN `BUTTON_CANCEL`.
        ms_result-check_confirmed = abap_false.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_html IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = i_title.
    r_result->icon                = i_icon.
    r_result->html                = i_html.
    r_result->button_text_confirm = i_button_text.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CONFIRM' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                      )->html( html
              )->get_parent( )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_confirm
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONFIRM`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_get_range_m IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->ms_result-t_filter = val.

  ENDMETHOD.

  METHOD init.

    popup_display( ).

  ENDMETHOD.

  METHOD popup_display.

    DATA lo_popup TYPE REF TO z2ui5_cl_xml_view.
    lo_popup = z2ui5_cl_xml_view=>factory_popup( ).
    lo_popup = lo_popup->dialog( afterclose    = client->_event( 'BUTTON_CANCEL' )
                                 contentheight = `50%`
                                 contentwidth  = `50%`
                                 title         = 'Define Filter Conditons' ).

    DATA vbox TYPE REF TO z2ui5_cl_xml_view.
    vbox = lo_popup->vbox( height         = `100%`
                                 justifycontent = 'SpaceBetween' ).

    DATA item TYPE REF TO z2ui5_cl_xml_view.
    item = vbox->list( nodata          = `no conditions defined`
                             items           = client->_bind( ms_result-t_filter )
                             selectionchange = client->_event( 'SELCHANGE' )
                )->custom_list_item( ).

    DATA grid TYPE REF TO z2ui5_cl_xml_view.
    grid = item->grid( class = `sapUiSmallMarginTop sapUiSmallMarginBottom sapUiSmallMarginBegin` ).
    grid->text( `{NAME}` ).

    DATA temp688 TYPE string_table.
    CLEAR temp688.
    INSERT `${NAME}` INTO TABLE temp688.
    grid->multi_input( tokens           = `{T_TOKEN}`
                       enabled          = abap_false
                       valuehelprequest = client->_event( val   = `LIST_OPEN`
                                                          t_arg = temp688 )
            )->tokens(
                 )->token( key      = `{KEY}`
                           text     = `{TEXT}`
                           visible  = `{VISIBLE}`
                           selected = `{SELKZ}`
                           editable = `{EDITABLE}` ).

    DATA temp690 TYPE string_table.
    CLEAR temp690.
    INSERT `${NAME}` INTO TABLE temp690.
    grid->button( text  = `Select`
                  press = client->_event( val   = `LIST_OPEN`
                                          t_arg = temp690 ) ).
    DATA temp692 TYPE string_table.
    CLEAR temp692.
    INSERT `${NAME}` INTO TABLE temp692.
    grid->button( icon  = 'sap-icon://delete'
                  type  = `Transparent`
                  text  = `Clear`
                  press = client->_event( val   = `LIST_DELETE`
                                          t_arg = temp692 ) ).

    lo_popup->buttons(
        )->button( text  = `Clear All`
                   icon  = 'sap-icon://delete'
                   type  = `Transparent`
                   press = client->_event( val = `POPUP_DELETE_ALL` )
       )->button( text  = 'Cancel'
                  press = client->_event( 'BUTTON_CANCEL' )
       )->button( text  = 'OK'
                  press = client->_event( 'BUTTON_CONFIRM' )
                  type  = 'Emphasized' ).

    client->popup_display( lo_popup->stringify( ) ).
  ENDMETHOD.

  METHOD result.
    result = ms_result.
  ENDMETHOD.

  METHOD z2ui5_if_app~main.
    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      init( ).
      RETURN.
    ENDIF.

    IF client->get( )-check_on_navigated = abap_true.

      DATA temp694 TYPE REF TO z2ui5_cl_pop_get_range.
      temp694 ?= client->get_app( client->get( )-s_draft-id_prev_app ).
      DATA lo_popup LIKE temp694.
      lo_popup = temp694.
      IF lo_popup->result( )-check_confirmed = abap_true.
        FIELD-SYMBOLS <tab> TYPE z2ui5_cl_util=>ty_s_filter_multi.
        READ TABLE ms_result-t_filter WITH KEY name = mv_popup_name ASSIGNING <tab>.
        <tab>-t_range = lo_popup->result( )-t_range.
        <tab>-t_token = z2ui5_cl_util=>filter_get_token_t_by_range_t( <tab>-t_range ).
      ENDIF.
      popup_display( ).

    ENDIF.

    CASE client->get( )-event.

      WHEN 'LIST_DELETE'.
        DATA lt_event TYPE string_table.
        lt_event = client->get( )-t_event_arg.
        DATA temp13 LIKE LINE OF lt_event.
        DATA temp14 LIKE sy-tabix.
        temp14 = sy-tabix.
        READ TABLE lt_event INDEX 1 INTO temp13.
        sy-tabix = temp14.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        READ TABLE ms_result-t_filter WITH KEY name = temp13 ASSIGNING <tab>.
        CLEAR <tab>-t_token.
        CLEAR <tab>-t_range.
        client->popup_model_update( ).

      WHEN 'LIST_OPEN'.
        lt_event = client->get( )-t_event_arg.
        DATA temp695 LIKE LINE OF lt_event.
        DATA temp696 LIKE sy-tabix.
        temp696 = sy-tabix.
        READ TABLE lt_event INDEX 1 INTO temp695.
        sy-tabix = temp696.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        mv_popup_name = temp695.
        DATA ls_sql TYPE z2ui5_cl_util=>ty_s_filter_multi.
        DATA temp15 LIKE LINE OF ms_result-t_filter.
        DATA temp16 LIKE sy-tabix.
        temp16 = sy-tabix.
        READ TABLE ms_result-t_filter WITH KEY name = mv_popup_name INTO temp15.
        sy-tabix = temp16.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        ls_sql = temp15.
        client->nav_app_call( z2ui5_cl_pop_get_range=>factory( ls_sql-t_range ) ).

      WHEN `BUTTON_CONFIRM`.
        ms_result-check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `BUTTON_CANCEL`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `POPUP_DELETE_ALL`.
        DATA temp697 LIKE LINE OF ms_result-t_filter.
        DATA lr_sql LIKE REF TO temp697.
        LOOP AT ms_result-t_filter REFERENCE INTO lr_sql.
          CLEAR lr_sql->t_range.
          CLEAR lr_sql->t_token.
        ENDLOOP.
        client->popup_model_update( ).

    ENDCASE.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_get_range IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.

    z2ui5_cl_util=>itab_corresponding( EXPORTING val = t_range
                                       CHANGING  tab = r_result->ms_result-t_range
    ).

    DATA temp698 TYPE z2ui5_cl_util=>ty_s_range.
    CLEAR temp698.
    INSERT temp698 INTO TABLE r_result->ms_result-t_range.

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD view_display.

    DATA lo_popup TYPE REF TO z2ui5_cl_xml_view.
    lo_popup = z2ui5_cl_xml_view=>factory_popup( ).

    lo_popup = lo_popup->dialog( afterclose    = client->_event( 'BUTTON_CANCEL' )
                                 contentheight = `50%`
                                 contentwidth  = `50%`
                                 title         = 'Define Filter Conditons' ).

    DATA vbox TYPE REF TO z2ui5_cl_xml_view.
    vbox = lo_popup->vbox( height         = `100%`
                                 justifycontent = 'SpaceBetween' ).

    DATA item TYPE REF TO z2ui5_cl_xml_view.
    item = vbox->list( nodata          = `no conditions defined`
                             items           = client->_bind_edit( mt_filter )
                             selectionchange = client->_event( 'SELCHANGE' )
                )->custom_list_item( ).

    DATA grid TYPE REF TO z2ui5_cl_xml_view.
    grid = item->grid( ).

    DATA temp699 TYPE string_table.
    CLEAR temp699.
    INSERT `${KEY}` INTO TABLE temp699.
    grid->combobox( selectedkey = `{OPTION}`
                    items       = client->_bind( mt_mapping )
             )->item( key  = '{N}'
                      text = '{N}'
             )->get_parent(
             )->input( value  = `{LOW}`
                       submit = client->_event( 'BUTTON_CONFIRM' )
             )->input( value   = `{HIGH}`
                       visible = `{= ${OPTION} === 'BT' }`
                       submit  = client->_event( 'BUTTON_CONFIRM' )
             )->button( icon  = 'sap-icon://decline'
                        type  = `Transparent`
                        press = client->_event( val   = `POPUP_DELETE`
                                                t_arg = temp699 ) ).

    lo_popup->buttons(
        )->button( text  = `Delete All`
                   icon  = 'sap-icon://delete'
                   type  = `Transparent`
                   press = client->_event( val = `POPUP_DELETE_ALL` )
        )->button( text  = `Add Item`
                   icon  = `sap-icon://add`
                   press = client->_event( val = `POPUP_ADD` )
       )->button( text  = 'Cancel'
                  press = client->_event( 'BUTTON_CANCEL' )
       )->button( text  = 'OK'
                  press = client->_event( 'BUTTON_CONFIRM' )
                  type  = 'Emphasized' ).

    client->popup_display( lo_popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.

      mt_mapping = z2ui5_cl_util=>filter_get_token_range_mapping( ).

      CLEAR mt_filter.
      DATA temp701 LIKE LINE OF ms_result-t_range.
      DATA lr_product LIKE REF TO temp701.
      LOOP AT ms_result-t_range REFERENCE INTO lr_product.
        DATA temp702 TYPE z2ui5_cl_pop_get_range=>ty_s_filter_pop.
        CLEAR temp702.
        temp702-low = lr_product->low.
        temp702-high = lr_product->high.
        temp702-option = lr_product->option.
        temp702-key = z2ui5_cl_util=>uuid_get_c32( ).
        INSERT temp702 INTO TABLE mt_filter.
      ENDLOOP.

      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.

      WHEN `BUTTON_CONFIRM`.

        CLEAR ms_result-t_range.
        DATA temp703 LIKE LINE OF mt_filter.
        DATA lr_filter LIKE REF TO temp703.
        LOOP AT mt_filter REFERENCE INTO lr_filter.
          IF lr_filter->low IS INITIAL AND lr_filter->high IS INITIAL.
            CONTINUE.
          ENDIF.
          DATA temp704 TYPE z2ui5_cl_util=>ty_s_range.
          CLEAR temp704.
          temp704-sign = `I`.
          temp704-option = lr_filter->option.
          temp704-low = lr_filter->low.
          temp704-high = lr_filter->high.
          INSERT temp704 INTO TABLE ms_result-t_range.
        ENDLOOP.

        ms_result-check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `BUTTON_CANCEL`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `POPUP_ADD`.
        DATA temp705 TYPE z2ui5_cl_pop_get_range=>ty_s_filter_pop.
        CLEAR temp705.
        temp705-key = z2ui5_cl_util=>uuid_get_c32( ).
        INSERT temp705 INTO TABLE mt_filter.
        client->popup_model_update( ).

      WHEN `POPUP_DELETE`.
        DATA lt_event TYPE string_table.
        lt_event = client->get( )-t_event_arg.
        DATA temp706 LIKE LINE OF lt_event.
        DATA temp707 LIKE sy-tabix.
        temp707 = sy-tabix.
        READ TABLE lt_event INDEX 1 INTO temp706.
        sy-tabix = temp707.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        DELETE mt_filter WHERE key = temp706.
        client->popup_model_update( ).

      WHEN `POPUP_DELETE_ALL`.
        DATA temp708 LIKE mt_filter.
        CLEAR temp708.
        mt_filter = temp708.
        client->popup_model_update( ).

    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_file_ul IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = i_title.

    r_result->question_text       = i_text.
    r_result->button_text_confirm = i_button_text_confirm.
    r_result->button_text_cancel  = i_button_text_cancel.
    r_result->mv_path             = i_path.

  ENDMETHOD.

  METHOD result.

    result = ms_result.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CANCEL' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                  )->label( question_text
                  )->_z2ui5( )->file_uploader( value       = client->_bind_edit( mv_value )
                                               path        = client->_bind_edit( mv_path )
                                               placeholder = 'filepath here...'
                                               upload      = client->_event( 'UPLOAD' )
              )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = button_text_cancel
                             press = client->_event( 'BUTTON_CANCEL' )
                  )->button( text    = button_text_confirm
                             press   = client->_event( 'BUTTON_CONFIRM' )
                             enabled = client->_bind( check_confirm_enabled )
                             type    = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.

      WHEN `UPLOAD`.

        DATA lv_dummy TYPE string.
        DATA lv_data TYPE string.
        SPLIT mv_value AT `;` INTO lv_dummy lv_data.
        SPLIT lv_data AT `,` INTO lv_dummy lv_data.

        DATA lv_data2 TYPE xstring.
        lv_data2 = z2ui5_cl_util=>conv_decode_x_base64( lv_data ).
        ms_result-value = z2ui5_cl_util=>conv_get_string_by_xstring( lv_data2 ).
        check_confirm_enabled = abap_true.

        CLEAR mv_value.
        CLEAR mv_path.
        client->popup_model_update( ).

      WHEN `BUTTON_CONFIRM`.
        ms_result-check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
      WHEN `BUTTON_CANCEL`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_file_dl IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->title               = i_title.

    r_result->question_text       = i_text.
    r_result->button_text_confirm = i_button_text_confirm.
    r_result->button_text_cancel  = i_button_text_cancel.
    r_result->mv_type             = i_type.
    r_result->mv_value            = i_file.
    r_result->mv_size             = strlen( i_file ) / 1000.

  ENDMETHOD.

  METHOD result.

    result = check_confirmed.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = title
                                                               icon       = icon
                                                               afterclose = client->_event( 'BUTTON_CANCEL' )
              )->content( ).

    IF mv_check_download = abap_true.
      DATA lv_csv_x TYPE xstring.
      lv_csv_x = z2ui5_cl_util=>conv_get_xstring_by_string( mv_value ).
      DATA lv_base64 TYPE string.
      lv_base64 = z2ui5_cl_util=>conv_encode_x_base64( lv_csv_x ).
      DATA temp709 TYPE z2ui5_if_types=>ty_t_name_value.
      CLEAR temp709.
      DATA temp710 LIKE LINE OF temp709.
      temp710-n = `src`.
      temp710-v = mv_type && lv_base64.
      INSERT temp710 INTO TABLE temp709.
      temp710-n = `hidden`.
      temp710-v = `hidden`.
      INSERT temp710 INTO TABLE temp709.
      popup->_generic( ns     = `html`
                       name   = `iframe`
                       t_prop = temp709 ).

      popup->_z2ui5( )->timer( client->_event( `CALLBACK_DOWNLOAD` ) ).

    ENDIF.

    popup->vbox( 'sapUiMediumMargin'
      )->label( `Name`
      )->input( value   = mv_name
                enabled = abap_false
      )->label( `Type`
      )->input( value   = mv_type
                enabled = abap_false
      )->label( `Size`
      )->input( value   = mv_size
                enabled = abap_false
      )->get_parent( )->get_parent(
      )->buttons(
      )->button( text  = button_text_cancel
                 press = client->_event( 'BUTTON_CANCEL' )
      )->button( text  = `Download`
                 press = client->_event( 'BUTTON_CONFIRM' )
                 type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.

      WHEN `CALLBACK_DOWNLOAD`.
        check_confirmed = abap_true.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).

      WHEN `BUTTON_CONFIRM`.
        mv_check_download = abap_true.
        view_display( ).

      WHEN `BUTTON_CANCEL`.
        client->popup_destroy( ).
        client->nav_app_leave( client->get_app( client->get( )-s_draft-id_prev_app_stack ) ).
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_error IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.
    r_result->error = x_root.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( )->dialog( title      = `Error View`
                                                               afterclose = client->_event( 'BUTTON_CONFIRM' )
              )->content(
                  )->vbox( 'sapUiMediumMargin'
                      )->text( error->get_text( )
              )->get_parent( )->get_parent(
              )->buttons(
                  )->button( text  = `OK`
                             press = client->_event( 'BUTTON_CONFIRM' )
                             type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONFIRM`.
        client->popup_destroy( ).
        client->nav_app_leave( ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_pop_bal IMPLEMENTATION.
  METHOD factory.

    CREATE OBJECT r_result.

    "read log infos
    "handle
    "..

    "read messages..
    DATA lt_msg TYPE z2ui5_cl_util=>ty_t_msg.
    lt_msg = z2ui5_cl_util=>msg_get( i_messages ).
    DATA temp711 LIKE LINE OF lt_msg.
    DATA lr_row LIKE REF TO temp711.
    LOOP AT lt_msg REFERENCE INTO lr_row.

      DATA temp712 TYPE ty_s_msg.
      CLEAR temp712.
      DATA ls_row LIKE temp712.
      ls_row = temp712.
      ls_row-type     = z2ui5_cl_util=>ui5_get_msg_type( lr_row->type ).
      ls_row-title    = lr_row->text.
*      lr_row->title = `title`.
*      lr_row->message = `message`.
      ls_row-subtitle = |{ lr_row->id } { lr_row->no }|.
      ls_row-date = z2ui5_cl_util=>time_get_date_by_stampl( lr_row->timestampl ).
      ls_row-time = z2ui5_cl_util=>time_get_time_by_stampl( lr_row->timestampl ).
*      lr_row->group = `001`.

      INSERT ls_row INTO TABLE r_result->mt_msg.
    ENDLOOP.

    r_result->title = i_title.

  ENDMETHOD.

  METHOD view_display.

    DATA popup TYPE REF TO z2ui5_cl_xml_view.
    popup = z2ui5_cl_xml_view=>factory_popup( ).
    popup = popup->dialog( title             = `Business Application Log`
                           contentheight     = '50%'
                           contentwidth      = '50%'
                           verticalScrolling = abap_false
                           afterclose        = client->_event( 'BUTTON_CONTINUE' ) ).

    DATA table TYPE REF TO z2ui5_cl_xml_view.
    table = popup->table( client->_bind( mt_msg ) ).
    table->columns(
         )->column( )->text( 'Date' )->get_parent(
         )->column( )->text( 'Time' )->get_parent(
         )->column( )->text( 'Type' )->get_parent(
         )->column( )->text( 'ID' )->get_parent(
         )->column( )->text( 'No' )->get_parent(
         )->column( )->text( 'Message' ).

    table->items( )->column_list_item( )->cells(
       )->text( '{DATE}'
       )->text( '{TIME}'
       )->text( '{TYPE}'
       )->text( '{ID}'
       )->text( '{NUMBER}'
       )->text( '{MESSAGE}'
        ).

    popup->buttons(
       )->button( text  = 'continue'
                  press = client->_event( 'BUTTON_CONTINUE' )
                  type  = 'Emphasized' ).

    client->popup_display( popup->stringify( ) ).

  ENDMETHOD.

  METHOD z2ui5_if_app~main.

    me->client = client.

    IF check_initialized = abap_false.
      check_initialized = abap_true.
      view_display( ).
      RETURN.
    ENDIF.

    CASE client->get( )-event.
      WHEN `BUTTON_CONTINUE`.
        client->popup_destroy( ).
        client->nav_app_leave( ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_app_view1_xml IMPLEMENTATION.

  METHOD get.

    result =              `<mvc:View controllerName="z2ui5.controller.View1"` &&
             `    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"` &&
             `    xmlns="sap.m">` &&
             `</mvc:View>` &&
             `` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_view1_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define(["sap/ui/core/mvc/Controller", "sap/ui/core/mvc/XMLView", "sap/ui/model/json/JSONModel",` && |\n|  &&
             `    "sap/ui/core/BusyIndicator", "sap/m/MessageBox", "sap/m/MessageToast", "sap/ui/core/Fragment", "sap/m/BusyDialog",` && |\n|  &&
             `    "sap/ui/VersionInfo", "z2ui5/cc/Server", "sap/ui/model/odata/v2/ODataModel", "sap/m/library",   "sap/ui/core/routing/HashChanger"` && |\n|  &&
             `],` && |\n|  &&
             `    function (Controller, XMLView, JSONModel, BusyIndicator, MessageBox, MessageToast, Fragment, mBusyDialog, VersionInfo,` && |\n|  &&
             `        Server, ODataModel, mobileLibrary, HashChanger) {` && |\n|  &&
             `        "use strict";` && |\n|  &&
             `        return Controller.extend("z2ui5.controller.View1", {` && |\n|  &&
             `` && |\n|  &&
             `            onInit() {` && |\n|  &&
             `` && |\n|  &&
             `                z2ui5.oRouter.attachRouteMatched(function (oEvent) {` && |\n|  &&
             `                    z2ui5.checkInit = true;` && |\n|  &&
             `                    Server.Roundtrip();` && |\n|  &&
             `                }, this);` && |\n|  &&
             `` && |\n|  &&
             `            },` && |\n|  &&
             `            async onAfterRendering() {` && |\n|  &&
             `` && |\n|  &&
             `                if (!z2ui5.oResponse) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `` && |\n|  &&
             `                try {` && |\n|  &&
             `                    if (!z2ui5.oResponse.PARAMS) {` && |\n|  &&
             `                        BusyIndicator.hide();` && |\n|  &&
             `                        z2ui5.isBusy = false;` && |\n|  &&
             `                        return;` && |\n|  &&
             `                    }` && |\n|  &&
             `                    const { S_POPUP, S_VIEW_NEST, S_VIEW_NEST2, S_POPOVER, SET_APP_STATE_ACTIVE, SET_PUSH_STATE , SET_NAV_BACK } = z2ui5.oResponse.PARAMS;` && |\n|  &&
             `                    if (S_POPUP?.CHECK_DESTROY) {` && |\n|  &&
             `                        z2ui5.oController.PopupDestroy();` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (S_POPOVER?.CHECK_DESTROY) {` && |\n|  &&
             `                        z2ui5.oController.PopoverDestroy();` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (S_POPUP?.XML) {` && |\n|  &&
             `                        z2ui5.oController.PopupDestroy();` && |\n|  &&
             `                        await this.displayFragment(S_POPUP.XML, 'oViewPopup');` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (!z2ui5.checkNestAfter) {` && |\n|  &&
             `                        if (S_VIEW_NEST?.XML) {` && |\n|  &&
             `                            z2ui5.oController.NestViewDestroy();` && |\n|  &&
             `                            await this.displayNestedView(S_VIEW_NEST.XML, 'oViewNest', 'S_VIEW_NEST');` && |\n|  &&
             `                            z2ui5.checkNestAfter = true;` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (!z2ui5.checkNestAfter2) {` && |\n|  &&
             `                        if (S_VIEW_NEST2?.XML) {` && |\n|  &&
             `                            z2ui5.oController.NestViewDestroy2();` && |\n|  &&
             `                            await this.displayNestedView2(S_VIEW_NEST2.XML, 'oViewNest2', 'S_VIEW_NEST2');` && |\n|  &&
             `                            z2ui5.checkNestAfter2 = true;` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (S_POPOVER?.XML) {` && |\n|  &&
             `                        await this.displayPopover(S_POPOVER.XML, 'oViewPopover', S_POPOVER.OPEN_BY_ID);` && |\n|  &&
             `                    }` && |\n|  &&
             `` && |\n|  &&
             `                    let oState = JSON.parse(JSON.stringify({ view: z2ui5.oView.mProperties.viewContent, model: z2ui5.oView.getModel().getData(), response: z2ui5.oResponse }));` && |\n|  &&
             `                   if (SET_PUSH_STATE) {` && |\n|  &&
             `                     // sap.ui.core.routing.HashChanger.getInstance().setHash("423143124");` && |\n|  &&
             `                     // sap.ui.core.routing.HashChanger.getInstance().replaceHash("423143124");` && |\n|  &&
             `                      //history.go(-1);` && |\n|  &&
             `                        let urlObj = new URL(window.location.href);` && |\n|  &&
             `                        let hash = HashChanger.getInstance().getHash();` && |\n|  &&
             `                        if (!hash){` && |\n|  &&
             `                        hash = '#';` && |\n|  &&
             `                        }` && |\n|  &&
             `                        history.pushState(oState, "", urlObj.pathname + urlObj.search + hash + SET_PUSH_STATE);` && |\n|  &&
             `                     }else{` && |\n|  &&
             `                     //  debugger;` && |\n|  &&
             `                        history.replaceState(oState, "", window.location.href );` && |\n|  &&
             `                    }` && |\n|  &&
             `` && |\n|  &&
             `                    if (SET_APP_STATE_ACTIVE) {` && |\n|  &&
             `                      HashChanger.getInstance().replaceHash("z2ui5-xapp-state=" + z2ui5.oResponse.ID );` && |\n|  &&
             `                      //  let urlObj = new URL(window.location.href);` && |\n|  &&
             `                      //  urlObj.searchParams.set("z2ui5-xapp-state", z2ui5.oResponse.ID);` && |\n|  &&
             `                      //  history.replaceState(oState, null, urlObj.pathname + urlObj.search + urlObj.hash);` && |\n|  &&
             `                    } else {` && |\n|  &&
             `                       HashChanger.getInstance().replaceHash("");` && |\n|  &&
             `                      //  let urlObj = new URL(window.location.href);` && |\n|  &&
             `                      //  urlObj.searchParams.delete("z2ui5-xapp-state");` && |\n|  &&
             `                      //  history.replaceState(oState, null, urlObj.pathname + urlObj.search + urlObj.hash);` && |\n|  &&
             `                    }` && |\n|  &&
             `` && |\n|  &&
             `` && |\n|  &&
             `` && |\n|  &&
             `                    if (SET_NAV_BACK) {` && |\n|  &&
             `                        history.back();` && |\n|  &&
             `                    }` && |\n|  &&
             `` && |\n|  &&
             `                    z2ui5.onAfterRendering.forEach(item => {` && |\n|  &&
             `                        if (item !== undefined) {` && |\n|  &&
             `                            item();` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                    )` && |\n|  &&
             `` && |\n|  &&
             `                    BusyIndicator.hide();` && |\n|  &&
             `                    z2ui5.isBusy = false;` && |\n|  &&
             `                } catch (e) {` && |\n|  &&
             `                    BusyIndicator.hide();` && |\n|  &&
             `                    z2ui5.isBusy = false;` && |\n|  &&
             `                    MessageBox.error(e.toLocaleString(), {` && |\n|  &&
             `                        title: "Unexpected Error Occured - App Terminated",` && |\n|  &&
             `                        actions: [],` && |\n|  &&
             `                        onClose: () => {` && |\n|  &&
             `                            new mBusyDialog({` && |\n|  &&
             `                                text: "Please Restart the App"` && |\n|  &&
             `                            }).open();` && |\n|  &&
             `                        }` && |\n|  &&
             `                    })` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            async displayFragment(xml, viewProp) {` && |\n|  &&
             `                let oview_model = new JSONModel(z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                const oFragment = await Fragment.load({` && |\n|  &&
             `                    definition: xml,` && |\n|  &&
             `                    controller: z2ui5.oControllerPopup,` && |\n|  &&
             `                    id: "popupId"` && |\n|  &&
             `                });` && |\n|  &&
             `                oFragment.setModel(oview_model);` && |\n|  &&
             `                z2ui5[viewProp] = oFragment;` && |\n|  &&
             `                z2ui5[viewProp].Fragment = Fragment;` && |\n|  &&
             `                oFragment.open();` && |\n|  &&
             `            },` && |\n|  &&
             `            async displayPopover(xml, viewProp, openById) {` && |\n|  &&
             `                sap.ui.require(["sap/ui/core/Element"], async function (Element) {` && |\n|  &&
             `                    const oFragment = await Fragment.load({` && |\n|  &&
             `                        definition: xml,` && |\n|  &&
             `                        controller: z2ui5.oControllerPopover,` && |\n|  &&
             `                        id: "popoverId"` && |\n|  &&
             `                    });` && |\n|  &&
             `                    let oview_model = new JSONModel(z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                    oFragment.setModel(oview_model);` && |\n|  &&
             `                    z2ui5[viewProp] = oFragment;` && |\n|  &&
             `                    z2ui5[viewProp].Fragment = Fragment;` && |\n|  &&
             `                    let oControl = {};` && |\n|  &&
             `                    if (z2ui5.oView?.byId(openById)) {` && |\n|  &&
             `                        oControl = z2ui5.oView.byId(openById);` && |\n|  &&
             `                    } else if (z2ui5.oViewPopup?.Fragment.byId('popupId', openById)) {` && |\n|  &&
             `                        oControl = z2ui5.oViewPopup.Fragment.byId('popupId', openById);` && |\n|  &&
             `                    } else if (z2ui5.oViewNest?.byId(openById)) {` && |\n|  &&
             `                        oControl = z2ui5.oViewNest.byId(openById);` && |\n|  &&
             `                    } else if (z2ui5.oViewNest2?.byId(openById)) {` && |\n|  &&
             `                        oControl = z2ui5.oViewNest2.byId(openById);` && |\n|  &&
             `                    } else {` && |\n|  &&
             `                        if (Element.getElementById(openById)) {` && |\n|  &&
             `                            oControl = Element.getElementById(openById);` && |\n|  &&
             `                        } else {` && |\n|  &&
             `                            oControl = null;` && |\n|  &&
             `                        }` && |\n|  &&
             `                        ;` && |\n|  &&
             `                    }` && |\n|  &&
             `                    oFragment.openBy(oControl);` && |\n|  &&
             `                });` && |\n|  &&
             `            },` && |\n|  &&
             `            async displayNestedView(xml, viewProp, viewNestId) {` && |\n|  &&
             `                let oview_model = new JSONModel(z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                const oView = await XMLView.create({` && |\n|  &&
             `                    definition: xml,` && |\n|  &&
             `                    controller: z2ui5.oControllerNest,` && |\n|  &&
             `                    preprocessors: {` && |\n|  &&
             `                        xml: {` && |\n|  &&
             `                            models: {` && |\n|  &&
             `                                template: oview_model` && |\n|  &&
             `                            }` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                });` && |\n|  &&
             `                oView.setModel(oview_model);` && |\n|  &&
             `                let oParent = z2ui5.oView.byId(z2ui5.oResponse.PARAMS[viewNestId].ID);` && |\n|  &&
             `                if (oParent) {` && |\n|  &&
             `                    try {` && |\n|  &&
             `                        oParent[z2ui5.oResponse.PARAMS[viewNestId].METHOD_DESTROY]();` && |\n|  &&
             `                    } catch { }` && |\n|  &&
             `                    oParent[z2ui5.oResponse.PARAMS[viewNestId].METHOD_INSERT](oView);` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5[viewProp] = oView;` && |\n|  &&
             `            },` && |\n|  &&
             `            async displayNestedView2(xml, viewProp, viewNestId) {` && |\n|  &&
             `                let oview_model = new JSONModel(z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                const oView = await XMLView.create({` && |\n|  &&
             `                    definition: xml,` && |\n|  &&
             `                    controller: z2ui5.oControllerNest2,` && |\n|  &&
             `                    preprocessors: {` && |\n|  &&
             `                        xml: {` && |\n|  &&
             `                            models: {` && |\n|  &&
             `                                template: oview_model` && |\n|  &&
             `                            }` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                });` && |\n|  &&
             `                oView.setModel(oview_model);` && |\n|  &&
             `                let oParent = z2ui5.oView.byId(z2ui5.oResponse.PARAMS[viewNestId].ID);` && |\n|  &&
             `                if (oParent) {` && |\n|  &&
             `                    try {` && |\n|  &&
             `                        oParent[z2ui5.oResponse.PARAMS[viewNestId].METHOD_DESTROY]();` && |\n|  &&
             `                    } catch { }` && |\n|  &&
             `                    oParent[z2ui5.oResponse.PARAMS[viewNestId].METHOD_INSERT](oView);` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5[viewProp] = oView;` && |\n|  &&
             `            },` && |\n|  &&
             `            PopupDestroy() {` && |\n|  &&
             `                if (!z2ui5.oViewPopup) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oViewPopup.close) {` && |\n|  &&
             `                    try {` && |\n|  &&
             `                        z2ui5.oViewPopup.close();` && |\n|  &&
             `                    } catch { }` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oViewPopup.destroy();` && |\n|  &&
             `            },` && |\n|  &&
             `            PopoverDestroy() {` && |\n|  &&
             `                if (!z2ui5.oViewPopover) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oViewPopover.close) {` && |\n|  &&
             `                    try {` && |\n|  &&
             `                        z2ui5.oViewPopover.close();` && |\n|  &&
             `                    } catch { }` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oViewPopover.destroy();` && |\n|  &&
             `            },` && |\n|  &&
             `            NestViewDestroy() {` && |\n|  &&
             `                if (!z2ui5.oViewNest) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oViewNest.destroy();` && |\n|  &&
             `            },` && |\n|  &&
             `            NestViewDestroy2() {` && |\n|  &&
             `                if (!z2ui5.oViewNest2) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oViewNest2.destroy();` && |\n|  &&
             `            },` && |\n|  &&
             `            ViewDestroy() {` && |\n|  &&
             `                if (!z2ui5.oView) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oView.destroy();` && |\n|  &&
             `            },` && |\n|  &&
             `            eF(...args) {` && |\n|  &&
             `` && |\n|  &&
             `                z2ui5.onBeforeEventFrontend.forEach(item => {` && |\n|  &&
             `                    if (item !== undefined) {` && |\n|  &&
             `                        item(args);` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                )` && |\n|  &&
             `                let oCrossAppNavigator;` && |\n|  &&
             `                switch (args[0]) {` && |\n|  &&
             `                    case 'SET_SIZE_LIMIT':` && |\n|  &&
             `                        switch (args[2]) {` && |\n|  &&
             `                            case 'MAIN':` && |\n|  &&
             `                                z2ui5.oView.getModel().setSizeLimit(parseInt(args[1]));` && |\n|  &&
             `                                z2ui5.oView.getModel().refresh(true);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'NEST':` && |\n|  &&
             `                                z2ui5.oViewNest.getModel().setSizeLimit(parseInt(args[1]));` && |\n|  &&
             `                                z2ui5.oViewNest.getModel().refresh(true);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'NEST2':` && |\n|  &&
             `                                z2ui5.oViewNest2.getModel().setSizeLimit(parseInt(args[1]));` && |\n|  &&
             `                                z2ui5.oViewNest2.getModel().refresh(true);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'POPUP':` && |\n|  &&
             `                                z2ui5.oPopup.getModel().setSizeLimit(parseInt(args[1]));` && |\n|  &&
             `                                z2ui5.oPopup.getModel().refresh(true);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'POPOVER':` && |\n|  &&
             `                                z2ui5.oPopover.getModel().setSizeLimit(parseInt(args[1]));` && |\n|  &&
             `                                z2ui5.oPopover.getModel().refresh(true);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                        }` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'HISTORY_BACK':` && |\n|  &&
             `                        history.back();` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'CLIPBOARD_APP_STATE':` && |\n|  &&
             `                            function copyToClipboard(textToCopy) {` && |\n|  &&
             `                                if (navigator.clipboard && typeof navigator.clipboard.writeText === "function") {` && |\n|  &&
             `                                    navigator.clipboard.writeText(textToCopy)` && |\n|  &&
             `                                        .then(() => {` && |\n|  &&
             `` && |\n|  &&
             `                                        })` && |\n|  &&
             `                                        .catch(err => {` && |\n|  &&
             `` && |\n|  &&
             `                                        });` && |\n|  &&
             `                                } else {` && |\n|  &&
             `                                    const tempTextArea = document.createElement("textarea");` && |\n|  &&
             `                                    tempTextArea.value = textToCopy;` && |\n|  &&
             `                                    document.body.appendChild(tempTextArea);` && |\n|  &&
             `` && |\n|  &&
             `                                    tempTextArea.select();` && |\n|  &&
             `                                    try {` && |\n|  &&
             `                                        document.execCommand("copy");` && |\n|  &&
             `` && |\n|  &&
             `                                    } catch (err) {` && |\n|  &&
             `` && |\n|  &&
             `                                    }` && |\n|  &&
             `                                    document.body.removeChild(tempTextArea);` && |\n|  &&
             `                                }` && |\n|  &&
             `                            }` && |\n|  &&
             `                                                    copyToClipboard(window.location.href + '#/z2ui5-xapp-state=' + z2ui5.oResponse.ID );` && |\n|  &&
             `                                                    break;` && |\n|  &&
             `                    case 'SET_ODATA_MODEL':` && |\n|  &&
             `                        var oModel = new ODataModel({ serviceUrl: args[1], annotationURI: (args.length > 3 ? args[3] : '') });` && |\n|  &&
             `                        z2ui5.oView.setModel(oModel, args[2] ? args[2] : undefined);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'DOWNLOAD_B64_FILE':` && |\n|  &&
             `                        var a = document.createElement("a");` && |\n|  &&
             `                        a.href = args[1];` && |\n|  &&
             `                        a.download = args[2];` && |\n|  &&
             `                        a.click();` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'CROSS_APP_NAV_TO_PREV_APP':` && |\n|  &&
             `                        sap.ui.require([` && |\n|  &&
             `                            "sap/ushell/Container"` && |\n|  &&
             `                        ], async (ushellContainer) => {` && |\n|  &&
             `                            // z2ui5.oCrossAppNavigator = await ushellContainer.getServiceAsync("CrossApplicationNavigation");` && |\n|  &&
             `                            if (ushellContainer){` && |\n|  &&
             `                                z2ui5.oCrossAppNavigator = ushellContainer.getService("CrossApplicationNavigation");` && |\n|  &&
             `                            } else {` && |\n|  &&
             `                                // fallback needed for UI5 version < 1.120` && |\n|  &&
             `                                z2ui5.oCrossAppNavigator = sap.ushell.Container.getService("CrossApplicationNavigation");` && |\n|  &&
             `                            }` && |\n|  &&
             `                            z2ui5.oCrossAppNavigator.backToPreviousApp();` && |\n|  &&
             `                        });` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'CROSS_APP_NAV_TO_EXT':` && |\n|  &&
             `                        z2ui5.args = args;` && |\n|  &&
             `                        sap.ui.require([` && |\n|  &&
             `                            "sap/ushell/Container"` && |\n|  &&
             `                        ], async (ushellContainer) => {` && |\n|  &&
             `                            // z2ui5.oCrossAppNavigator = await ushellContainer.getServiceAsync("CrossApplicationNavigation");` && |\n|  &&
             `                            if (ushellContainer){` && |\n|  &&
             `                                z2ui5.oCrossAppNavigator = ushellContainer.getService("CrossApplicationNavigation");` && |\n|  &&
             `                            } else {` && |\n|  &&
             `                                // fallback needed for UI5 version < 1.120` && |\n|  &&
             `                                z2ui5.oCrossAppNavigator = sap.ushell.Container.getService("CrossApplicationNavigation");` && |\n|  &&
             `                            }` && |\n|  &&
             `                            const hash = (z2ui5.oCrossAppNavigator.hrefForExternal({` && |\n|  &&
             `                                target: z2ui5.args[1],` && |\n|  &&
             `                                params: z2ui5.args[2]` && |\n|  &&
             `                            })) || "";` && |\n|  &&
             `                            if (z2ui5.args[3] === 'EXT') {` && |\n|  &&
             `                                let url = window.location.href.split('#')[0] + hash;` && |\n|  &&
             `                                //todo` && |\n|  &&
             `                                //URLHelper.redirect(url, true);` && |\n|  &&
             `                            } else {` && |\n|  &&
             `                                z2ui5.oCrossAppNavigator.toExternal({` && |\n|  &&
             `                                    target: {` && |\n|  &&
             `                                        shellHash: hash` && |\n|  &&
             `                                    }` && |\n|  &&
             `                                });` && |\n|  &&
             `                            }` && |\n|  &&
             `                        });` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'LOCATION_RELOAD':` && |\n|  &&
             `                        window.location = args[1];` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'OPEN_NEW_TAB':` && |\n|  &&
             `                        window.open(args[1], '_blank');` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'POPUP_CLOSE':` && |\n|  &&
             `                        z2ui5.oController.PopupDestroy();` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'POPOVER_CLOSE':` && |\n|  &&
             `                        z2ui5.oController.PopoverDestroy();` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'NAV_CONTAINER_TO':` && |\n|  &&
             `                        var navCon = z2ui5.oView.byId(args[1]);` && |\n|  &&
             `                        var navConTo = z2ui5.oView.byId(args[2]);` && |\n|  &&
             `                        navCon.to(navConTo);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'NEST_NAV_CONTAINER_TO':` && |\n|  &&
             `                        navCon = z2ui5.oViewNest.byId(args[1]);` && |\n|  &&
             `                        navConTo = z2ui5.oViewNest.byId(args[2]);` && |\n|  &&
             `                        navCon.to(navConTo);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'NEST2_NAV_CONTAINER_TO':` && |\n|  &&
             `                        navCon = z2ui5.oViewNest2.byId(args[1]);` && |\n|  &&
             `                        navConTo = z2ui5.oViewNest2.byId(args[2]);` && |\n|  &&
             `                        navCon.to(navConTo);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'POPUP_NAV_CONTAINER_TO':` && |\n|  &&
             `                        navCon = Fragment.byId("popupId", args[1]);` && |\n|  &&
             `                        navConTo = Fragment.byId("popupId", args[2]);` && |\n|  &&
             `                        navCon.to(navConTo);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'POPOVER_NAV_CONTAINER_TO':` && |\n|  &&
             `                        navCon = Fragment.byId("popoverId", args[1]);` && |\n|  &&
             `                        navConTo = Fragment.byId("popoverId", args[2]);` && |\n|  &&
             `                        navCon.to(navConTo);` && |\n|  &&
             `                        break;` && |\n|  &&
             `                    case 'URLHELPER':` && |\n|  &&
             `                        var URLHelper = mobileLibrary.URLHelper;` && |\n|  &&
             |\n|.
    result = result &&
             `                        var params = args[2];` && |\n|  &&
             `                        switch (args[1]) {` && |\n|  &&
             `                            case 'REDIRECT':` && |\n|  &&
             `                                URLHelper.redirect(params.URL, params.NEW_WINDOW);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'TRIGGER_EMAIL':` && |\n|  &&
             `                                URLHelper.triggerEmail(params.EMAIL, params.SUBJECT, params.BODY, params.CC, params.BCC, params.NEW_WINDOW);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'TRIGGER_SMS':` && |\n|  &&
             `                                URLHelper.triggerSms(params);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                            case 'TRIGGER_TEL':` && |\n|  &&
             `                                URLHelper.triggerTel(params);` && |\n|  &&
             `                                break;` && |\n|  &&
             `                        }` && |\n|  &&
             `                        break;` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            eB(...args) {` && |\n|  &&
             `` && |\n|  &&
             `                if (!window.navigator.onLine) {` && |\n|  &&
             `                    MessageBox.alert('No internet connection! Please reconnect to the server and try again.');` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.isBusy == true) {` && |\n|  &&
             `                    if (!args[0][2]) {` && |\n|  &&
             `                        let oBusyDialog = new mBusyDialog();` && |\n|  &&
             `                        oBusyDialog.open();` && |\n|  &&
             `                        setTimeout((oBusyDialog) => {` && |\n|  &&
             `                            oBusyDialog.close()` && |\n|  &&
             `                        }` && |\n|  &&
             `                            , 100, oBusyDialog);` && |\n|  &&
             `                        return;` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.isBusy = true;` && |\n|  &&
             `                BusyIndicator.show();` && |\n|  &&
             `                z2ui5.oBody = {};` && |\n|  &&
             `                if (args[0][3] || z2ui5.oController == this) {` && |\n|  &&
             `                    if (z2ui5.oResponse.PARAMS.S_VIEW?.SWITCH_DEFAULT_MODEL_PATH) {` && |\n|  &&
             `                        var oModel = z2ui5.oView.getModel("http");` && |\n|  &&
             `                    } else {` && |\n|  &&
             `                        oModel = z2ui5.oView.getModel();` && |\n|  &&
             `                    }` && |\n|  &&
             `                    z2ui5.oBody.XX = oModel.getData().XX;` && |\n|  &&
             `                    z2ui5.oBody.VIEWNAME = 'MAIN';` && |\n|  &&
             `                } else if (z2ui5.oControllerPopup == this) {` && |\n|  &&
             `                    if (z2ui5.oViewPopup) {` && |\n|  &&
             `                        z2ui5.oBody.XX = z2ui5.oViewPopup.getModel().getData().XX;` && |\n|  &&
             `                    }` && |\n|  &&
             `                    z2ui5.oBody.VIEWNAME = 'MAIN';` && |\n|  &&
             `                } else if (z2ui5.oControllerPopover == this) {` && |\n|  &&
             `                    z2ui5.oBody.XX = z2ui5.oViewPopover.getModel().getData().XX;` && |\n|  &&
             `                    z2ui5.oBody.VIEWNAME = 'MAIN';` && |\n|  &&
             `                } else if (z2ui5.oControllerNest == this) {` && |\n|  &&
             `                    z2ui5.oBody.XX = z2ui5.oViewNest.getModel().getData().XX;` && |\n|  &&
             `                    z2ui5.oBody.VIEWNAME = 'NEST';` && |\n|  &&
             `                } else if (z2ui5.oControllerNest2 == this) {` && |\n|  &&
             `                    z2ui5.oBody.XX = z2ui5.oViewNest2.getModel().getData().XX;` && |\n|  &&
             `                    z2ui5.oBody.VIEWNAME = 'NEST2';` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.onBeforeRoundtrip.forEach(item => {` && |\n|  &&
             `                    if (item !== undefined) {` && |\n|  &&
             `                        item();` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                )` && |\n|  &&
             `                z2ui5.oBody.ID = z2ui5.oResponse.ID;` && |\n|  &&
             `                z2ui5.oBody.ARGUMENTS = args;` && |\n|  &&
             `                z2ui5.oBody.ARGUMENTS.forEach((item, i) => {` && |\n|  &&
             `                    if (i == 0) {` && |\n|  &&
             `                        return;` && |\n|  &&
             `                    }` && |\n|  &&
             `                    if (typeof item === 'object') {` && |\n|  &&
             `                        z2ui5.oBody.ARGUMENTS[i] = JSON.stringify(item);` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                );` && |\n|  &&
             `                z2ui5.oResponseOld = z2ui5.oResponse;` && |\n|  &&
             `                Server.Roundtrip();` && |\n|  &&
             `` && |\n|  &&
             `            },` && |\n|  &&
             `` && |\n|  &&
             `            updateModelIfRequired(paramKey, oView) {` && |\n|  &&
             `                if (z2ui5.oResponse.PARAMS == undefined) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oResponse.PARAMS[paramKey]?.CHECK_UPDATE_MODEL) {` && |\n|  &&
             `                    let model = new JSONModel(z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                    if (oView) {` && |\n|  &&
             `                        oView.setModel(model);` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            async checkSDKcompatibility(err) {` && |\n|  &&
             `                let oCurrentVersionInfo = await VersionInfo.load();` && |\n|  &&
             `                var ui5_sdk = oCurrentVersionInfo.gav.includes('com.sap.ui5') ? true : false;` && |\n|  &&
             `                if (!ui5_sdk) {` && |\n|  &&
             `                    if (err) {` && |\n|  &&
             `                        MessageBox.error("openui5 SDK is loaded, module: " + err._modules + " is not availabe in openui5");` && |\n|  &&
             `                        return;` && |\n|  &&
             `                    }` && |\n|  &&
             `                    ;` && |\n|  &&
             `                }` && |\n|  &&
             `                ; MessageBox.error(err.toLocaleString());` && |\n|  &&
             `            },` && |\n|  &&
             `            showMessage(msgType, params) {` && |\n|  &&
             `                if (params == undefined) {` && |\n|  &&
             `                    return;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (params[msgType]?.TEXT !== undefined) {` && |\n|  &&
             `                    if (msgType === 'S_MSG_TOAST') {` && |\n|  &&
             `                        MessageToast.show(params[msgType].TEXT, {` && |\n|  &&
             `                            duration: params[msgType].DURATION ? parseInt(params[msgType].DURATION) : 3000,` && |\n|  &&
             `                            width: params[msgType].WIDTH ? params[msgType].WIDTH : '15em',` && |\n|  &&
             `                            onClose: params[msgType].ONCLOSE ? params[msgType].ONCLOSE : null,` && |\n|  &&
             `                            autoClose: params[msgType].AUTOCLOSE ? true : false,` && |\n|  &&
             `                            animationTimingFunction: params[msgType].ANIMATIONTIMINGFUNCTION ? params[msgType].ANIMATIONTIMINGFUNCTION : 'ease',` && |\n|  &&
             `                            animationDuration: params[msgType].ANIMATIONDURATION ? parseInt(params[msgType].ANIMATIONDURATION) : 1000,` && |\n|  &&
             `                            closeonBrowserNavigation: params[msgType].CLOSEONBROWSERNAVIGATION ? true : false` && |\n|  &&
             `                        });` && |\n|  &&
             `                        if (params[msgType].CLASS) {` && |\n|  &&
             `                            let mtoast = {};` && |\n|  &&
             `                            mtoast = document.getElementsByClassName("sapMMessageToast")[0];` && |\n|  &&
             `                            if (mtoast) {` && |\n|  &&
             `                                mtoast.classList.add(params[msgType].CLASS);` && |\n|  &&
             `                            }` && |\n|  &&
             `                        }` && |\n|  &&
             `                        ;` && |\n|  &&
             `                    } else if (msgType === 'S_MSG_BOX') {` && |\n|  &&
             `` && |\n|  &&
             `                        let oParams = {` && |\n|  &&
             `                            styleClass: params[msgType].STYLECLASS ? params[msgType].STYLECLASS : '',` && |\n|  &&
             `                            title: params[msgType].TITLE ? params[msgType].TITLE : '',` && |\n|  &&
             `                            onClose: params[msgType].ONCLOSE ? Function("sAction", "return " + params[msgType].ONCLOSE) : null,` && |\n|  &&
             `                            actions: params[msgType].ACTIONS ? params[msgType].ACTIONS : 'OK',` && |\n|  &&
             `                            emphasizedAction: params[msgType].EMPHASIZEDACTION ? params[msgType].EMPHASIZEDACTION : 'OK',` && |\n|  &&
             `                            initialFocus: params[msgType].INITIALFOCUS ? params[msgType].INITIALFOCUS : null,` && |\n|  &&
             `                            textDirection: params[msgType].TEXTDIRECTION ? params[msgType].TEXTDIRECTION : 'Inherit',` && |\n|  &&
             `                            icon: params[msgType].ICON ? params[msgType].ICON : 'NONE',` && |\n|  &&
             `                            details: params[msgType].DETAILS ? params[msgType].DETAILS : '',` && |\n|  &&
             `                            closeOnNavigation: params[msgType].CLOSEONNAVIGATION ? true : false` && |\n|  &&
             `                        };` && |\n|  &&
             `                        if (oParams.icon = 'None') { delete oParams.icon };` && |\n|  &&
             `                        MessageBox[params[msgType].TYPE](params[msgType].TEXT, oParams);` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            async displayView(xml, viewModel) {` && |\n|  &&
             `                let oview_model = new JSONModel(viewModel);` && |\n|  &&
             `                var oModel = oview_model;` && |\n|  &&
             `                if (z2ui5.oResponse.PARAMS.S_VIEW?.SWITCH_DEFAULT_MODEL_PATH) {` && |\n|  &&
             `                    oModel = new ODataModel({` && |\n|  &&
             `                        serviceUrl: z2ui5.oResponse.PARAMS.S_VIEW?.SWITCH_DEFAULT_MODEL_PATH,` && |\n|  &&
             `                        annotationURI: z2ui5.oResponse.PARAMS.S_VIEW?.SWITCHDEFAULTMODELANNOURI` && |\n|  &&
             `                    });` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oView = await XMLView.create({` && |\n|  &&
             `                    definition: xml,` && |\n|  &&
             `                    models: oModel,` && |\n|  &&
             `                    controller: z2ui5.oController,` && |\n|  &&
             `                    id: 'mainView',` && |\n|  &&
             `                    preprocessors: {` && |\n|  &&
             `                        xml: {` && |\n|  &&
             `                            models: {` && |\n|  &&
             `                                template: oview_model` && |\n|  &&
             `                            }` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                });` && |\n|  &&
             `                z2ui5.oView.setModel(z2ui5.oDeviceModel, "device");` && |\n|  &&
             `                if (z2ui5.oResponse.PARAMS.S_VIEW?.SWITCH_DEFAULT_MODEL_PATH) {` && |\n|  &&
             `                    z2ui5.oView.setModel(oview_model, "http");` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oApp.removeAllPages();` && |\n|  &&
             `                z2ui5.oApp.insertPage(z2ui5.oView);` && |\n|  &&
             `            },` && |\n|  &&
             `        })` && |\n|  &&
             `    });` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_style_css IMPLEMENTATION.

  METHOD get.

    result =              `/* Enter your custom styles here */` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_server_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define(["sap/ui/core/BusyIndicator", "sap/m/MessageBox"` && |\n|  &&
             `],` && |\n|  &&
             `    function (BusyIndicator, MessageBox) {` && |\n|  &&
             `        "use strict";` && |\n|  &&
             `` && |\n|  &&
             `        return {` && |\n|  &&
             `` && |\n|  &&
             `            endSession: function () {` && |\n|  &&
             `` && |\n|  &&
             `                if (z2ui5.contextId) {` && |\n|  &&
             `                    fetch(z2ui5.oConfig.pathname, {` && |\n|  &&
             `                        method: 'HEAD',` && |\n|  &&
             `                        keepalive: true,` && |\n|  &&
             `                        headers: {` && |\n|  &&
             `                            'sap-terminate': 'session',` && |\n|  &&
             `                            'sap-contextid': z2ui5.contextId,` && |\n|  &&
             `                            'sap-contextid-accept': 'header'` && |\n|  &&
             `                        }` && |\n|  &&
             `                    });` && |\n|  &&
             `                    delete z2ui5.contextId;` && |\n|  &&
             `                }` && |\n|  &&
             `` && |\n|  &&
             `            },` && |\n|  &&
             `            Roundtrip() {` && |\n|  &&
             `                z2ui5.checkTimerActive = false;` && |\n|  &&
             `                z2ui5.checkNestAfter = false;` && |\n|  &&
             `                z2ui5.checkNestAfter2 = false;` && |\n|  &&
             `                let event = (args) => {` && |\n|  &&
             `                    if (args != undefined) {` && |\n|  &&
             `                        return args[0][0];` && |\n|  &&
             `                    }` && |\n|  &&
             `                };` && |\n|  &&
             `` && |\n|  &&
             `              //  try{` && |\n|  &&
             `              //  let oState = JSON.parse(JSON.stringify({ view: z2ui5.oView.mProperties.viewContent, model: z2ui5.oView.getModel().getData(), response: z2ui5.oResponse }));` && |\n|  &&
             `              //  history.replaceState(oState, "", window.location.href );` && |\n|  &&
             `              //  }catch(e){}` && |\n|  &&
             `` && |\n|  &&
             `                z2ui5.oBody ??= {};` && |\n|  &&
             `                z2ui5.oBody.S_FRONT = {` && |\n|  &&
             `                    ID: z2ui5?.oBody?.ID,` && |\n|  &&
             `                    CONFIG: z2ui5.oConfig,` && |\n|  &&
             `                    XX: z2ui5?.oBody?.XX,` && |\n|  &&
             `                    ORIGIN: window.location.origin,` && |\n|  &&
             `                    PATHNAME: window.location.pathname,` && |\n|  &&
             `                    SEARCH: (z2ui5.search) ? z2ui5.search : window.location.search,` && |\n|  &&
             `                    VIEW: z2ui5.oBody?.VIEWNAME,` && |\n|  &&
             `                    EVENT: event(z2ui5.oBody?.ARGUMENTS),` && |\n|  &&
             `                    HASH: window.location.hash,` && |\n|  &&
             `                };` && |\n|  &&
             `                if (z2ui5.oBody?.ARGUMENTS != undefined) {` && |\n|  &&
             `                    if (z2ui5.oBody?.ARGUMENTS.length > 0) {` && |\n|  &&
             `                        z2ui5.oBody?.ARGUMENTS.shift();` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                z2ui5.oBody.S_FRONT.T_EVENT_ARG = z2ui5.oBody?.ARGUMENTS;` && |\n|  &&
             `                delete z2ui5.oBody.ID;` && |\n|  &&
             `                delete z2ui5.oBody?.VIEWNAME;` && |\n|  &&
             `                delete z2ui5.oBody?.S_FRONT.XX;` && |\n|  &&
             `                delete z2ui5.oBody?.ARGUMENTS;` && |\n|  &&
             `                if (!z2ui5.oBody.S_FRONT.T_EVENT_ARG) {` && |\n|  &&
             `                    delete z2ui5.oBody.S_FRONT.T_EVENT_ARG;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oBody.S_FRONT.T_EVENT_ARG) {` && |\n|  &&
             `                    if (z2ui5.oBody.S_FRONT.T_EVENT_ARG.length == 0) {` && |\n|  &&
             `                        delete z2ui5.oBody.S_FRONT.T_EVENT_ARG;` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oBody.S_FRONT.T_STARTUP_PARAMETERS == undefined) {` && |\n|  &&
             `                    delete z2ui5.oBody.S_FRONT.T_STARTUP_PARAMETERS;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (z2ui5.oBody.S_FRONT.SEARCH == '') {` && |\n|  &&
             `                    delete z2ui5.oBody.S_FRONT.SEARCH;` && |\n|  &&
             `                }` && |\n|  &&
             `                if (!z2ui5.oBody.XX) {` && |\n|  &&
             `                    delete z2ui5.oBody.XX;` && |\n|  &&
             `                }` && |\n|  &&
             `                this.readHttp();` && |\n|  &&
             `            },` && |\n|  &&
             `` && |\n|  &&
             `            async readHttp() {` && |\n|  &&
             `                const response = await fetch(z2ui5.oConfig.pathname, {` && |\n|  &&
             `                    method: 'POST',` && |\n|  &&
             `                    headers: {` && |\n|  &&
             `                        'Content-Type': 'application/json',` && |\n|  &&
             `                        'sap-contextid-accept': 'header',` && |\n|  &&
             `                        'sap-contextid': z2ui5.contextId` && |\n|  &&
             `                    },` && |\n|  &&
             `                    body: JSON.stringify(z2ui5.oBody)` && |\n|  &&
             `                });` && |\n|  &&
             `                z2ui5.contextId = response.headers.get("sap-contextid");` && |\n|  &&
             `                if (!response.ok) {` && |\n|  &&
             `                    const responseText = await response.text();` && |\n|  &&
             `                    this.responseError(responseText);` && |\n|  &&
             `                } else {` && |\n|  &&
             `                    const responseData = await response.json();` && |\n|  &&
             `                    z2ui5.responseData = responseData;` && |\n|  &&
             `                    this.responseSuccess({` && |\n|  &&
             `                        ID: responseData.S_FRONT.ID,` && |\n|  &&
             `                        PARAMS: responseData.S_FRONT.PARAMS,` && |\n|  &&
             `                        OVIEWMODEL: responseData.MODEL,` && |\n|  &&
             `                    });` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            async responseSuccess(response) {` && |\n|  &&
             `                try {` && |\n|  &&
             `                    z2ui5.oResponse = response;` && |\n|  &&
             `                    if (z2ui5.oResponse.PARAMS?.S_VIEW?.CHECK_DESTROY) {` && |\n|  &&
             `                        z2ui5.oController.ViewDestroy();` && |\n|  &&
             `                    }` && |\n|  &&
             `                    ; if (z2ui5.oResponse.PARAMS?.S_FOLLOW_UP_ACTION?.CUSTOM_JS) {` && |\n|  &&
             `                        setTimeout(() => {` && |\n|  &&
             `                            for ( let i = 0; i < z2ui5.oResponse?.PARAMS.S_FOLLOW_UP_ACTION.CUSTOM_JS.length ; i++ ){` && |\n|  &&
             `                            let mParams = z2ui5.oResponse?.PARAMS.S_FOLLOW_UP_ACTION.CUSTOM_JS[i].split("'");` && |\n|  &&
             `                            let mParamsEF = mParams.filter((val, index) => index % 2)` && |\n|  &&
             `                            if (mParamsEF.length) {` && |\n|  &&
             `                                z2ui5.oController.eF.apply(undefined, mParamsEF);` && |\n|  &&
             `                            } else {` && |\n|  &&
             `                                Function("return " + mParams[0])();` && |\n|  &&
             `                            }` && |\n|  &&
             `                            }` && |\n|  &&
             `                        }, 100);` && |\n|  &&
             `                    };` && |\n|  &&
             `                    z2ui5.oController.showMessage('S_MSG_TOAST', z2ui5.oResponse.PARAMS);` && |\n|  &&
             `                    z2ui5.oController.showMessage('S_MSG_BOX', z2ui5.oResponse.PARAMS);` && |\n|  &&
             `                    if (z2ui5.oResponse.PARAMS?.S_VIEW?.XML) {` && |\n|  &&
             `                        if (z2ui5.oResponse.PARAMS?.S_VIEW?.XML !== '') {` && |\n|  &&
             `                            z2ui5.oController.ViewDestroy();` && |\n|  &&
             `                            await z2ui5.oController.displayView(z2ui5.oResponse.PARAMS.S_VIEW.XML, z2ui5.oResponse.OVIEWMODEL);` && |\n|  &&
             `                            return;` && |\n|  &&
             `                        }` && |\n|  &&
             `                    }` && |\n|  &&
             `                    z2ui5.oController.updateModelIfRequired('S_VIEW', z2ui5.oView);` && |\n|  &&
             `                    z2ui5.oController.updateModelIfRequired('S_VIEW_NEST', z2ui5.oViewNest);` && |\n|  &&
             `                    z2ui5.oController.updateModelIfRequired('S_VIEW_NEST2', z2ui5.oViewNest2);` && |\n|  &&
             `                    z2ui5.oController.updateModelIfRequired('S_POPUP', z2ui5.oViewPopup);` && |\n|  &&
             `                    z2ui5.oController.updateModelIfRequired('S_POPOVER', z2ui5.oViewPopover);` && |\n|  &&
             `                    z2ui5.oController.onAfterRendering();` && |\n|  &&
             `                } catch (e) {` && |\n|  &&
             `                    BusyIndicator.hide();` && |\n|  &&
             `                    if (e.message.includes("openui5")) {` && |\n|  &&
             `                        if (e.message.includes("script load error")) {` && |\n|  &&
             `                            z2ui5.oController.checkSDKcompatibility(e)` && |\n|  &&
             `                        }` && |\n|  &&
             `                    } else {` && |\n|  &&
             `                        MessageBox.error(e.toLocaleString());` && |\n|  &&
             `                    }` && |\n|  &&
             `                }` && |\n|  &&
             `            },` && |\n|  &&
             `            responseError(response) {` && |\n|  &&
             `                document.write(response);` && |\n|  &&
             `            },` && |\n|  &&
             `        };` && |\n|  &&
             `    });` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_models_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define([` && |\n|  &&
             `    "sap/ui/model/json/JSONModel",` && |\n|  &&
             `    "sap/ui/Device"` && |\n|  &&
             `],` && |\n|  &&
             `function (JSONModel, Device) {` && |\n|  &&
             `    "use strict";` && |\n|  &&
             `` && |\n|  &&
             `    return {` && |\n|  &&
             `        /**` && |\n|  &&
             `         * Provides runtime info for the device the UI5 app is running on as JSONModel` && |\n|  &&
             `         */` && |\n|  &&
             `        createDeviceModel: function () {` && |\n|  &&
             `            var oModel = new JSONModel(Device);` && |\n|  &&
             `            oModel.setDefaultBindingMode("OneWay");` && |\n|  &&
             `            return oModel;` && |\n|  &&
             `        }` && |\n|  &&
             `    };` && |\n|  &&
             `` && |\n|  &&
             `});` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_manifest_json IMPLEMENTATION.

  METHOD get.

    result =              `{` &&
             `  "_version": "1.65.0",` &&
             `  "sap.app": {` &&
             `    "id": "z2ui5",` &&
             `    "type": "application",` &&
             `    "applicationVersion": {` &&
             `      "version": "0.0.1"` &&
             `    },` &&
             `    "title": "",` &&
             `    "description": "",` &&
             `    "resources": "resources.json",` &&
             `    "sourceTemplate": {` &&
             `      "id": "@sap/generator-fiori:basic",` &&
             `      "version": "1.15.0",` &&
             `      "toolsId": "3a966e20-9635-4c28-8861-d1b66f79f1de"` &&
             `    },` &&
             `    "dataSources": {` &&
             `      "http": {` &&
             `        "uri": "/sap/bc/z2ui5",` &&
             `        "type": "OData",` &&
             `        "settings": {` &&
             `          "annotations": [],` &&
             `          "localUri": "localService/metadata.xml",` &&
             `          "odataVersion": "2.0"` &&
             `        }` &&
             `      }` &&
             `    },` &&
             `    "crossNavigation": {` &&
             `      "inbounds": {` &&
             `        "z2ui5-display": {` &&
             `          "semanticObject": "z2ui5",` &&
             `          "action": "display",` &&
             `          "title": "",` &&
             `          "signature": {` &&
             `            "parameters": {},` &&
             `            "additionalParameters": "allowed"` &&
             `          }` &&
             `        }` &&
             `      }` &&
             `    }` &&
             `  },` &&
             `  "sap.ui": {` &&
             `    "technology": "UI5",` &&
             `    "icons": {` &&
             `      "icon": "",` &&
             `      "favIcon": "",` &&
             `      "phone": "",` &&
             `      "phone@2": "",` &&
             `      "tablet": "",` &&
             `      "tablet@2": ""` &&
             `    },` &&
             `    "deviceTypes": {` &&
             `      "desktop": true,` &&
             `      "tablet": true,` &&
             `      "phone": true` &&
             `    }` &&
             `  },` &&
             `  "sap.ui5": {` &&
             `    "flexEnabled": true,` &&
             `    "dependencies": {` &&
             `      "minUI5Version": "1.128.1",` &&
             `      "libs": {` &&
             `        "sap.m": {},` &&
             `        "sap.ui.core": {}` &&
             `      }` &&
             `    },` &&
             `    "contentDensities": {` &&
             `      "compact": true,` &&
             `      "cozy": true` &&
             `    },` &&
             `    "services": {` &&
             `      "ShellUIService": {` &&
             `        "factoryName": "sap.ushell.ui5service.ShellUIService"` &&
             `      }` &&
             `    },` &&
             `    "resources": {` &&
             `      "css": [` &&
             `        {` &&
             `          "uri": "css/style.css"` &&
             `        }` &&
             `      ]` &&
             `    },` &&
             `    "routing": {` &&
             `      "config": {` &&
             `        "routerClass": "sap.m.routing.Router",` &&
             `        "viewType": "XML",` &&
             `        "viewPath": "z2ui5.view",` &&
             `        "controlAggregation": "pages",` &&
             `        "controlId": "app",` &&
             `        "clearControlAggregation": false` &&
             `      },` &&
             `      "routes": [` &&
             `        {` &&
             `          "name": "RouteView1",` &&
             `          "pattern": ":?query:",` &&
             `          "target": [` &&
             `            "TargetView1"` &&
             `          ]` &&
             `        },` &&
             `        {` &&
             `          "name": "RouteView2",` &&
             `          "pattern": ":?query:",` &&
             `          "target": [` &&
             `            "TargetView2"` &&
             `          ]` &&
             `        }` &&
             `      ],` &&
             `      "targets": {` &&
             `        "TargetView1": {` &&
             `          "viewType": "XML",` &&
             `          "transition": "flip",` &&
             `          "clearControlAggregation": false,` &&
             `          "viewId": "View1",` &&
             `          "viewName": "View1"` &&
             `        },` &&
             `        "TargetView2": {` &&
             `          "viewType": "XML",` &&
             `          "transition": "flip",` &&
             `          "clearControlAggregation": false,` &&
             `          "viewId": "View2",` &&
             `          "viewName": "View2"` &&
             `        }` &&
             `      }` &&
             `    },` &&
             `    "rootView": {` &&
             `      "viewName": "z2ui5.view.App",` &&
             `      "type": "XML",` &&
             `      "id": "App"` &&
             `    }` &&
             `  },` &&
             `  "sap.cloud": {` &&
             `    "public": true,` &&
             `    "service": "z2ui5"` &&
             `  }` &&
             `}` &&
             `` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_index_html IMPLEMENTATION.

  METHOD get.

    result =              `<!DOCTYPE html>` &&
             `<html lang="en">` &&
             `<head>` &&
             `    <meta charset="UTF-8">` &&
             `    <meta name="viewport" content="width=device-width, initial-scale=1.0">` &&
             `    <meta http-equiv="X-UA-Compatible" content="IE=edge">` &&
             `    <title></title>` &&
             `    <style>` &&
             `        html, body, body > div, #container, #container-uiarea {` &&
             `            height: 100%;` &&
             `        }` &&
             `    </style>` &&
             `    <script` &&
             `        id="sap-ui-bootstrap"` &&
             `        src="resources/sap-ui-core.js"` &&
             `        data-sap-ui-theme="sap_horizon"` &&
             `        data-sap-ui-resourceroots='{` &&
             `            "z2ui5": "./"` &&
             `        }'` &&
             `        data-sap-ui-oninit="module:sap/ui/core/ComponentSupport"` &&
             `        data-sap-ui-compatVersion="edge"` &&
             `        data-sap-ui-async="true"` &&
             `        data-sap-ui-frameOptions="trusted"` &&
             `    ></script>` &&
             `</head>` &&
             `<body class="sapUiBody sapUiSizeCompact" id="content">` &&
             `    <div` &&
             `        data-sap-ui-component` &&
             `        data-name="z2ui5"` &&
             `        data-id="container"` &&
             `        data-settings='{"id" : "z2ui5"}'` &&
             `        data-handle-validation="true"` &&
             `    ></div>` &&
             `</body>` &&
             `</html>` &&
             `` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_debugtool_xml IMPLEMENTATION.

  METHOD get.

    result =              `<core:FragmentDefinition` &&
             `    xmlns="sap.m"` &&
             `    xmlns:mvc="sap.ui.core.mvc"` &&
             `    xmlns:core="sap.ui.core"` &&
             `    xmlns:html="http://www.w3.org/1999/xhtml"` &&
             `    xmlns:ce="sap.ui.codeeditor"` &&
             `>` &&
             `    <Dialog` &&
             `        title="abap2UI5 - DebugTool"` &&
             `        stretch="true"` &&
             `    >` &&
             `        <IconTabHeader` &&
             `            selectedKey="PLAIN"` &&
             `            select="onItemSelect"` &&
             `        >` &&
             `            <items>` &&
             `            <IconTabFilter` &&
             `                    text="Config"` &&
             `                    key="CONFIG"` &&
             `          enabled="true"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Previous Request"` &&
             `                    key="REQUEST"` &&
             `          enabled="true"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Response"` &&
             `                    key="PLAIN"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Source Code"` &&
             `                    key="SOURCE"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="View"` &&
             `                    key="VIEW"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="View Model"` &&
             `                    key="MODEL"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Popup"` &&
             `                    key="POPUP"` &&
             `          enabled="{/activePopup}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Popup Model"` &&
             `                    key="POPUP_MODEL"` &&
             `          enabled="{/activePopup}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Popover"` &&
             `                    key="POPOVER"` &&
             `          enabled="{/activePopover}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Popover Model"` &&
             `                    key="POPOVER_MODEL"` &&
             `          enabled="{/activePopover}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Nest1"` &&
             `                    key="NEST1"` &&
             `          enabled="{/activeNest1}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Nest1 Model"` &&
             `                    key="NEST1_MODEL"` &&
             `          enabled="{/activeNest1}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Nest2"` &&
             `                    key="NEST2"` &&
             `          enabled="{/activeNest2}"` &&
             `                />` &&
             `                <IconTabFilter` &&
             `                    text="Nest2 Model"` &&
             `                    key="NEST2_MODEL"` &&
             `          enabled="{/activeNest2}"` &&
             `                />` &&
             `            </items>` &&
             `        </IconTabHeader>` &&
             `      <VBox>` &&
             `        <ToggleButton text="Source XML after Templating" visible="{/isTemplating}" pressed="{/templatingSource}" press="onTemplatingPress" />` &&
             `        <ce:CodeEditor` &&
             `            type="{/type}"` &&
             `            value="{/value}"` &&
             `            height="2000px"` &&
             `            width="10000px"` &&
             `            visible="{/editor_visible}"` &&
             `        /></VBox>` &&
             `    <VBox visible="{/source_visible}">` &&
             `        <core:HTML/>` &&
             `      </VBox>` &&
             `        <endButton>` &&
             `            <Button` &&
             `                text="Close"` &&
             `                press="onClose"` &&
             `            />` &&
             `        </endButton>` &&
             `    </Dialog>` &&
             `</core:FragmentDefinition>` &&
             `` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_debugtool_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define(["sap/ui/core/Control", "sap/ui/core/Fragment", "sap/ui/model/json/JSONModel"], (Control, Fragment, JSONModel) => {` && |\n|  &&
             `    "use strict";` && |\n|  &&
             `` && |\n|  &&
             `    return Control.extend("z2ui5.cc.DebugTool", {` && |\n|  &&
             `` && |\n|  &&
             `        //printer XML` && |\n|  &&
             `        prettifyXml: function (sourceXml) {` && |\n|  &&
             `            const xmlDoc = new DOMParser().parseFromString(sourceXml, 'application/xml');` && |\n|  &&
             `            var sParse = ``&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&gt;` && |\n|  &&
             `                &lt;xsl:strip-space elements="*" /&gt;` && |\n|  &&
             `                &lt;xsl:template match="para[content-style][not(text())]"&gt;` && |\n|  &&
             `                    &lt;xsl:value-of select="normalize-space(.)" /&gt;` && |\n|  &&
             `                &lt;/xsl:template&gt;` && |\n|  &&
             `                &lt;xsl:template match="node()|@*"&gt;` && |\n|  &&
             `                    &lt;xsl:copy&gt;` && |\n|  &&
             `                        &lt;xsl:apply-templates select="node()|@*" /&gt;` && |\n|  &&
             `                    &lt;/xsl:copy&gt;` && |\n|  &&
             `                &lt;/xsl:template&gt;` && |\n|  &&
             `                &lt;xsl:output indent="yes" /&gt;` && |\n|  &&
             `            &lt;/xsl:stylesheet&gt;``;` && |\n|  &&
             `            sParse = sParse.replace(/&gt;/g, unescape("%3E")).replace(/&lt;/g, unescape("%3C"));` && |\n|  &&
             `            const xsltDoc = new DOMParser().parseFromString(sParse, 'application/xml');` && |\n|  &&
             `` && |\n|  &&
             `            const xsltProcessor = new XSLTProcessor();` && |\n|  &&
             `            xsltProcessor.importStylesheet(xsltDoc);` && |\n|  &&
             `            const resultDoc = xsltProcessor.transformToDocument(xmlDoc);` && |\n|  &&
             `            const resultXml = new XMLSerializer().serializeToString(resultDoc);` && |\n|  &&
             `            return resultXml.replace(/&gt;/g, ">").replace(/&lt;/g, "<");` && |\n|  &&
             `        }, onItemSelect: function (oEvent) {` && |\n|  &&
             `            const selItem = oEvent.getSource().getSelectedKey();` && |\n|  &&
             `            const oView = z2ui5?.oView;` && |\n|  &&
             `            const oResponse = z2ui5?.oResponse;` && |\n|  &&
             `            const displayEditor = this.displayEditor.bind(this);` && |\n|  &&
             `` && |\n|  &&
             `            switch (selItem) {` && |\n|  &&
             `                case 'CONFIG':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5.oConfig, null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'MODEL':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(oView?.getModel()?.getData(), null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'VIEW':` && |\n|  &&
             `                    const viewContent = oView?.mProperties?.viewContent || z2ui5.responseData.S_FRONT.PARAMS.S_VIEW.XML;` && |\n|  &&
             `                    displayEditor(oEvent, this.prettifyXml(viewContent), 'xml', this.prettifyXml(oView?._xContent.outerHTML));` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'PLAIN':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5.responseData, null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'REQUEST':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5.oBody, null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'POPUP':` && |\n|  &&
             `                    displayEditor(oEvent, this.prettifyXml(oResponse?.PARAMS?.S_POPUP?.XML), 'xml');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'POPUP_MODEL':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5.oViewPopup.getModel().getData(), null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'POPOVER':` && |\n|  &&
             `                    displayEditor(oEvent, this.prettifyXml(oResponse?.PARAMS?.S_POPOVER?.XML), 'xml');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'POPOVER_MODEL':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5?.oViewPopover?.getModel()?.getData(), null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'NEST1':` && |\n|  &&
             `                    displayEditor(oEvent, this.prettifyXml(z2ui5?.oViewNest?.mProperties?.viewContent), 'xml', this.prettifyXml(z2ui5?.oViewNest?._xContent.outerHTML));` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'NEST1_MODEL':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5?.oViewNest?.getModel()?.getData(), null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'NEST2':` && |\n|  &&
             `                    displayEditor(oEvent, this.prettifyXml(z2ui5?.oViewNest2?.mProperties?.viewContent), 'xml', this.prettifyXml(z2ui5?.oViewNest2?._xContent.outerHTML));` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'NEST2_MODEL':` && |\n|  &&
             `                    displayEditor(oEvent, JSON.stringify(z2ui5?.oViewNest2?.getModel()?.getData(), null, 3), 'json');` && |\n|  &&
             `                    break;` && |\n|  &&
             `                case 'SOURCE':` && |\n|  &&
             `                    const parent = oEvent.getSource().getParent();` && |\n|  &&
             `                    const contentControl = parent.getContent()[2].getItems()[0];` && |\n|  &&
             `                    const url = ``${window.location.origin}/sap/bc/adt/oo/classes/${z2ui5.responseData.S_FRONT.APP}/source/main``;` && |\n|  &&
             `                    const content = atob('PGlmcmFtZSBpZD0idGVzdCIgc3JjPSInICsgdXJsICsgJyIgaGVpZ2h0PSI4MDBweCIgd2lkdGg9IjEyMDBweCIgLz4=').replace("' + url + '", url);` && |\n|  &&
             `                    contentControl.setProperty("content", content);` && |\n|  &&
             `                    const modelData = oEvent.getSource().getModel().oData;` && |\n|  &&
             `                    modelData.editor_visible = false;` && |\n|  &&
             `                    modelData.source_visible = true;` && |\n|  &&
             `                    oEvent.getSource().getModel().refresh();` && |\n|  &&
             `                    break;` && |\n|  &&
             `            }` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        displayEditor: function (oEvent, content, type, xcontent = "") {` && |\n|  &&
             `            const modelData = oEvent.getSource().getModel().oData;` && |\n|  &&
             `            modelData.editor_visible = true;` && |\n|  &&
             `            modelData.source_visible = false;` && |\n|  &&
             `            modelData.isTemplating = content.includes("xmlns:template");` && |\n|  &&
             `            modelData.value = content;` && |\n|  &&
             `            modelData.previousValue = content;` && |\n|  &&
             `            modelData.xContent = xcontent;` && |\n|  &&
             `            modelData.type = type;` && |\n|  &&
             `            oEvent.getSource().getModel().refresh();` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        onTemplatingPress: function (oEvent) {` && |\n|  &&
             `            const modelData = oEvent.getSource().getModel().oData;` && |\n|  &&
             `            modelData.value = oEvent.getSource().getPressed() ? modelData.xContent : modelData.previousValue;` && |\n|  &&
             `            oEvent.getSource().getModel().refresh();` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        onClose: function () {` && |\n|  &&
             `            this.close();` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        async show() {` && |\n|  &&
             `            if (!this.oDialog) {` && |\n|  &&
             `                this.oDialog = await Fragment.load({` && |\n|  &&
             `                    name: "z2ui5.cc.DebugTool",` && |\n|  &&
             `                    controller: this,` && |\n|  &&
             `                });` && |\n|  &&
             `            }` && |\n|  &&
             `` && |\n|  &&
             `            const value = JSON.stringify(z2ui5.responseData, null, 3);` && |\n|  &&
             `            const oData = {` && |\n|  &&
             `                type: 'json',` && |\n|  &&
             `                source_visible: false,` && |\n|  &&
             `                editor_visible: true,` && |\n|  &&
             `                value: value,` && |\n|  &&
             `                xContent: '',` && |\n|  &&
             `                previousValue: value,` && |\n|  &&
             `                isTemplating: false,` && |\n|  &&
             `                templatingSource: false,` && |\n|  &&
             `                activeNest1: z2ui5?.oViewNest?.mProperties?.viewContent !== undefined,` && |\n|  &&
             `                activeNest2: z2ui5?.oViewNest2?.mProperties?.viewContent !== undefined,` && |\n|  &&
             `                activePopup: z2ui5?.oResponse?.PARAMS?.S_POPUP?.XML !== undefined,` && |\n|  &&
             `                activePopover: z2ui5?.oResponse?.PARAMS?.S_POPOVER?.XML !== undefined,` && |\n|  &&
             `            };` && |\n|  &&
             `            const oModel = new JSONModel(oData);` && |\n|  &&
             `` && |\n|  &&
             `            this.oDialog.addStyleClass('dbg-ltr');` && |\n|  &&
             `            this.oDialog.setModel(oModel);` && |\n|  &&
             `            this.oDialog.open();` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        async close(){` && |\n|  &&
             `            if (this.oDialog){` && |\n|  &&
             `                this.oDialog.close();` && |\n|  &&
             `                this.oDialog.destroy();` && |\n|  &&
             `                this.oDialog = null;` && |\n|  &&
             `            }` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        async toggle(){` && |\n|  &&
             `            if (this.oDialog){` && |\n|  &&
             `                this.close()` && |\n|  &&
             `            } else {` && |\n|  &&
             `                this.show()` && |\n|  &&
             `            }` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        renderer(){` && |\n|  &&
             `        }` && |\n|  &&
             `    });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_component_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define(["sap/ui/core/UIComponent", "z2ui5/model/models", "z2ui5/cc/Server", "sap/ui/VersionInfo", "z2ui5/cc/DebugTool"` && |\n|  &&
             `], function (UIComponent, Models, Server, VersionInfo, DebugTool) {` && |\n|  &&
             `    return UIComponent.extend("z2ui5.Component", {` && |\n|  &&
             `        metadata: {` && |\n|  &&
             `            manifest: "json",` && |\n|  &&
             `            interfaces: [` && |\n|  &&
             `                "sap.ui.core.IAsyncContentCreation"` && |\n|  &&
             `            ]` && |\n|  &&
             `        },` && |\n|  &&
             `        async init() {` && |\n|  &&
             `            UIComponent.prototype.init.apply(this, arguments);` && |\n|  &&
             `` && |\n|  &&
             `            if (typeof z2ui5 == 'undefined') {` && |\n|  &&
             `                z2ui5 = {};` && |\n|  &&
             `            }` && |\n|  &&
             `            if (z2ui5?.checkLocal == false) {` && |\n|  &&
             `            z2ui5 = {};` && |\n|  &&
             `            }` && |\n|  &&
             `` && |\n|  &&
             `            z2ui5.oRouter = this.getRouter();` && |\n|  &&
             `            z2ui5.oRouter.initialize();` && |\n|  &&
             `            z2ui5.oRouter.stop();` && |\n|  &&
             `` && |\n|  &&
             `            z2ui5.oDeviceModel = Models.createDeviceModel();` && |\n|  &&
             `            this.setModel(z2ui5.oDeviceModel, "device");` && |\n|  &&
             `` && |\n|  &&
             `            z2ui5.oConfig = {};` && |\n|  &&
             `            z2ui5.oConfig.ComponentData = this.getComponentData();` && |\n|  &&
             `` && |\n|  &&
             `            try {` && |\n|  &&
             `                z2ui5.oLaunchpadService = await this.getService("ShellUIService");` && |\n|  &&
             `            } catch (e) { }` && |\n|  &&
             `` && |\n|  &&
             `            let oVersionInfo = await VersionInfo.load();` && |\n|  &&
             `            z2ui5.oConfig.UI5VersionInfo = {` && |\n|  &&
             `                version: oVersionInfo.version,` && |\n|  &&
             `                buildTimestamp: oVersionInfo.buildTimestamp,` && |\n|  &&
             `                gav: oVersionInfo.gav,` && |\n|  &&
             `            }` && |\n|  &&
             `` && |\n|  &&
             `            if (/iPad|iPhone/.test(navigator.platform)) {` && |\n|  &&
             `                window.addEventListener("__pagehide", this.__pagehide.bind(this));` && |\n|  &&
             `            } else {` && |\n|  &&
             `                window.addEventListener("__beforeunload", this.__beforeunload.bind(this));` && |\n|  &&
             `            }` && |\n|  &&
             `` && |\n|  &&
             `            document.addEventListener("keydown", function (zEvent) {` && |\n|  &&
             `                if (zEvent?.ctrlKey && zEvent?.key === "F12") {` && |\n|  &&
             `                    if (!z2ui5.debugTool) {` && |\n|  &&
             `                        z2ui5.debugTool = new DebugTool();` && |\n|  &&
             `                    }` && |\n|  &&
             `                    z2ui5.debugTool.toggle();` && |\n|  &&
             `                }` && |\n|  &&
             `            });` && |\n|  &&
             `` && |\n|  &&
             `            window.addEventListener("popstate", (event) => {` && |\n|  &&
             `                delete event?.state?.response?.PARAMS?.SET_PUSH_STATE;` && |\n|  &&
             `                delete event?.state?.response?.PARAMS?.SET_APP_STATE_ACTIVE;` && |\n|  &&
             `                if (event?.state?.view) {` && |\n|  &&
             `                    z2ui5.oController.ViewDestroy();` && |\n|  &&
             `                    z2ui5.oResponse = event.state.response;` && |\n|  &&
             `                    z2ui5.oController.displayView(event.state.view, event.state.model);` && |\n|  &&
             `                }` && |\n|  &&
             `            });` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        __beforeunload: function () {` && |\n|  &&
             `            window.removeEventListener("__beforeunload", this.__beforeunload.bind(this));` && |\n|  &&
             `            this.destroy();` && |\n|  &&
             `        },` && |\n|  &&
             `        __pagehide: function () {` && |\n|  &&
             `            window.removeEventListener("__pagehide", this.__pagehide.bind(this));` && |\n|  &&
             `            this.destroy();` && |\n|  &&
             `        },` && |\n|  &&
             `` && |\n|  &&
             `        exit: function () {` && |\n|  &&
             `            Server.endSession();` && |\n|  &&
             `            if (UIComponent.prototype.exit)` && |\n|  &&
             `                UIComponent.prototype.exit.apply(this, arguments);` && |\n|  &&
             `        },` && |\n|  &&
             `    });` && |\n|  &&
             `});` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_app_xml IMPLEMENTATION.

  METHOD get.

    result =              `<mvc:View controllerName="z2ui5.controller.App"` &&
             `    xmlns:html="http://www.w3.org/1999/xhtml"` &&
             `    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"` &&
             `    xmlns="sap.m">` &&
             `    <App id="app">` &&
             `    </App>` &&
             `</mvc:View>` &&
             `` &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_app_app_js IMPLEMENTATION.

  METHOD get.

    result =              `sap.ui.define(["sap/ui/core/mvc/Controller",` && |\n|  &&
             `  "z2ui5/controller/View1.controller",` && |\n|  &&
             `  "z2ui5/cc/Server",` && |\n|  &&
             `  "sap/ui/core/routing/HashChanger"` && |\n|  &&
             `], function (BaseController, Controller, Server, HashChanger) {` && |\n|  &&
             `  return BaseController.extend("z2ui5.controller.App", {` && |\n|  &&
             `` && |\n|  &&
             `    onInit() {` && |\n|  &&
             `` && |\n|  &&
             `      z2ui5.oOwnerComponent = this.getOwnerComponent();` && |\n|  &&
             `      z2ui5.oConfig.pathname = z2ui5.oOwnerComponent.getManifest()["sap.app"].dataSources.http.uri;` && |\n|  &&
             `      if (z2ui5?.checkLocal == true) {` && |\n|  &&
             `        z2ui5.oConfig.pathname = window.location.href;` && |\n|  &&
             `      };` && |\n|  &&
             `` && |\n|  &&
             `      z2ui5.oController = new Controller();` && |\n|  &&
             `      z2ui5.oApp = this.getView().byId("app");` && |\n|  &&
             `` && |\n|  &&
             `      z2ui5.oControllerNest = new Controller();` && |\n|  &&
             `      z2ui5.oControllerNest2 = new Controller();` && |\n|  &&
             `      z2ui5.oControllerPopup = new Controller();` && |\n|  &&
             `      z2ui5.oControllerPopover = new Controller();` && |\n|  &&
             `` && |\n|  &&
             `      z2ui5.onBeforeRoundtrip = [];` && |\n|  &&
             `      z2ui5.onAfterRendering = [];` && |\n|  &&
             `      z2ui5.onBeforeEventFrontend = [];` && |\n|  &&
             `      z2ui5.onAfterRoundtrip = [];` && |\n|  &&
             `` && |\n|  &&
             `      z2ui5.checkNestAfter = false;` && |\n|  &&
             `` && |\n|  &&
             `    //  if (sap.ui.core.routing.HashChanger.getInstance().getHash().includes("z2ui5-xapp-state")){` && |\n|  &&
             `       if (HashChanger.getInstance().getHash()){` && |\n|  &&
             `          z2ui5.checkInit = true;` && |\n|  &&
             `          Server.Roundtrip();` && |\n|  &&
             `      }` && |\n|  &&
             `` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Timer", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.Timer", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        delayMS: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        checkActive: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: true` && |\n|  &&
             `        },` && |\n|  &&
             `        checkRepeat: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "finished": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {},` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    onAfterRendering() { },` && |\n|  &&
             `    delayedCall(oControl) {` && |\n|  &&
             `` && |\n|  &&
             `      if (oControl.getProperty("checkActive") == false) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      setTimeout((oControl) => {` && |\n|  &&
             `        oControl.setProperty("checkActive", false)` && |\n|  &&
             `        oControl.fireFinished();` && |\n|  &&
             `        if (oControl.getProperty("checkRepeat")) {` && |\n|  &&
             `          oControl.delayedCall(oControl);` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `        , parseInt(oControl.getProperty("delayMS")), oControl);` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) {` && |\n|  &&
             `      oControl.delayedCall(oControl);` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Focus", ["sap/ui/core/Control",], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.Focus", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        setUpdate: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: true` && |\n|  &&
             `        },` && |\n|  &&
             `        focusId: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        selectionStart: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: "0"` && |\n|  &&
             `        },` && |\n|  &&
             `        selectionEnd: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: "0"` && |\n|  &&
             `        },` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    init() { },` && |\n|  &&
             `    setFocusId(val) {` && |\n|  &&
             `      try {` && |\n|  &&
             `        this.setProperty("focusId", val);` && |\n|  &&
             `        var oElement = z2ui5.oView.byId(val);` && |\n|  &&
             `        var oFocus = oElement.getFocusInfo();` && |\n|  &&
             `        oElement.applyFocusInfo(oFocus);` && |\n|  &&
             `      } catch (e) { }` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) {` && |\n|  &&
             `      if (!oControl.getProperty("setUpdate")) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      oControl.setProperty("setUpdate", false);` && |\n|  &&
             `      setTimeout((oControl) => {` && |\n|  &&
             `        var oElement = z2ui5.oView.byId(oControl.getProperty("focusId"));` && |\n|  &&
             `        var oFocus = oElement.getFocusInfo();` && |\n|  &&
             `        oFocus.selectionStart = parseInt(oControl.getProperty("selectionStart"));` && |\n|  &&
             `        oFocus.selectionEnd = parseInt(oControl.getProperty("selectionEnd"));` && |\n|  &&
             `        oElement.applyFocusInfo(oFocus);` && |\n|  &&
             `      }` && |\n|  &&
             `        , 100, oControl);` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Title", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.Title", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        title: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    setTitle(val) {` && |\n|  &&
             `      this.setProperty("title", val);` && |\n|  &&
             `      document.title = val;` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `sap.ui.define("z2ui5/LPTitle", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.LPTitle", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        title: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        ApplicationFullWidth:{` && |\n|  &&
             `          type : "boolean"` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    setTitle(val) {` && |\n|  &&
             `      try {` && |\n|  &&
             `        this.setProperty("title", val);` && |\n|  &&
             `        z2ui5.oLaunchpadService.setTitle(val);` && |\n|  &&
             `      } catch (e) {` && |\n|  &&
             `        console.error("Launchpad Service to set Title not found");` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    setApplicationFullWidth(val) {` && |\n|  &&
             `      this.setProperty("ApplicationFullWidth", val);` && |\n|  &&
             `      z2ui5.ApplicationFullWidth = val;` && |\n|  &&
             `    sap.ui.require([` && |\n|  &&
             `      "sap/ushell/services/AppConfiguration"` && |\n|  &&
             `    ], async (AppConfiguration)  => {` && |\n|  &&
             `      AppConfiguration.setApplicationFullWidth(z2ui5.ApplicationFullWidth);` && |\n|  &&
             `    });` && |\n|  &&
             `` && |\n|  &&
             `  },` && |\n|  &&
             `` && |\n|  &&
             `    renderer(oRm, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `sap.ui.define("z2ui5/History", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.History", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        search: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    setSearch(val) {` && |\n|  &&
             `      this.setProperty("search", val);` && |\n|  &&
             `      history.replaceState(null, null, window.location.pathname + val);` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Tree", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.Tree", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        tree_id: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    setBackend() {` && |\n|  &&
             `      z2ui5.treeState = z2ui5.oView.byId(this.getProperty("tree_id")).getBinding('items').getCurrentTreeState();` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() {` && |\n|  &&
             `      z2ui5.onBeforeRoundtrip.push(this.setBackend.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer(oRm, oControl) {` && |\n|  &&
             `      if (!z2ui5.treeState) return;` && |\n|  &&
             `      setTimeout((id) => {` && |\n|  &&
             `        z2ui5.oView.byId(id).getBinding('items').setTreeState(z2ui5.treeState);` && |\n|  &&
             `      }, 100, oControl.getProperty("tree_id"));` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Scrolling", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.Scrolling", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        setUpdate: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: true` && |\n|  &&
             `        },` && |\n|  &&
             `        items: {` && |\n|  &&
             `          type: "Array"` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    setBackend() {` && |\n|  &&
             `      const items = this.getProperty("items");` && |\n|  &&
             `` && |\n|  &&
             `      if (items) {` && |\n|  &&
             `        items.forEach(item => {` && |\n|  &&
             `          try {` && |\n|  &&
             `            const scrollDelegate = z2ui5.oView.byId(item.N).getScrollDelegate();` && |\n|  &&
             `            item.V = scrollDelegate ? scrollDelegate.getScrollTop() : 0;` && |\n|  &&
             `          } catch {` && |\n|  &&
             `            try {` && |\n|  &&
             `              const element = document.getElementById(``${z2ui5.oView.byId(item.ID).getId()}-inner``);` && |\n|  &&
             `              item.V = element ? element.scrollTop : 0;` && |\n|  &&
             `            } catch { }` && |\n|  &&
             `          }` && |\n|  &&
             `        });` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() {` && |\n|  &&
             `      z2ui5.onBeforeRoundtrip.push(this.setBackend.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer(oRm, oControl) {` && |\n|  &&
             `      if (!oControl.getProperty("setUpdate")) return;` && |\n|  &&
             `` && |\n|  &&
             `      oControl.setProperty("setUpdate", false);` && |\n|  &&
             `      const items = oControl.getProperty("items");` && |\n|  &&
             `      if (!items) return;` && |\n|  &&
             `` && |\n|  &&
             `      setTimeout(() => {` && |\n|  &&
             `        items.forEach(item => {` && |\n|  &&
             `          try {` && |\n|  &&
             `            z2ui5.oView.byId(item.N).scrollTo(item.V);` && |\n|  &&
             `          } catch {` && |\n|  &&
             `            try {` && |\n|  &&
             `              const element = document.getElementById(``${z2ui5.oView.byId(item.ID).getId()}-inner``);` && |\n|  &&
             `              if (element) element.scrollTop = item.V;` && |\n|  &&
             `            } catch {` && |\n|  &&
             `              setTimeout(() => {` && |\n|  &&
             `                z2ui5.oView.byId(item.N).scrollTo(item.V);` && |\n|  &&
             `              }, 1);` && |\n|  &&
             `            }` && |\n|  &&
             `          }` && |\n|  &&
             `        });` && |\n|  &&
             `      }, 100);` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Info", ["sap/ui/core/Control", "sap/ui/VersionInfo", "sap/ui/Device"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.Info", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        ui5_version: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_phone: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_desktop: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_tablet: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_combi: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_height: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_width: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        ui5_theme: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_os: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_systemtype: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `        device_browser: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "finished": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {},` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() { },` && |\n|  &&
             `` && |\n|  &&
             `    onAfterRendering() {` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    async renderer(_, oControl) {` && |\n|  &&
             `` && |\n|  &&
             `      let oDevice = z2ui5.oView.getModel("device").oData;` && |\n|  &&
             `      oControl.setProperty("ui5_version", z2ui5.oConfig.UI5VersionInfo.version);` && |\n|  &&
             `      oControl.setProperty("device_phone", oDevice.system.phone);` && |\n|  &&
             `      oControl.setProperty("device_desktop", oDevice.system.desktop);` && |\n|  &&
             `      oControl.setProperty("device_tablet", oDevice.system.tablet);` && |\n|  &&
             `      oControl.setProperty("device_combi", oDevice.system.combi);` && |\n|  &&
             `      oControl.setProperty("device_height", oDevice.resize.height);` && |\n|  &&
             `      oControl.setProperty("device_width", oDevice.resize.width);` && |\n|  &&
             `      oControl.setProperty("device_os", oDevice.os.name);` && |\n|  &&
             `      oControl.setProperty("device_browser", oDevice.browser.name);` && |\n|  &&
             `      oControl.fireFinished();` && |\n|  &&
             `` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Geolocation", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.Geolocation", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        longitude: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        latitude: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        altitude: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        accuracy: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             |\n|.
    result = result &&
             `        altitudeAccuracy: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        speed: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        heading: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        enableHighAccuracy: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        timeout: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: "5000"` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "finished": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {},` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    callbackPosition(position) {` && |\n|  &&
             `` && |\n|  &&
             `      this.setProperty("longitude", position.coords.longitude, true);` && |\n|  &&
             `      this.setProperty("latitude", position.coords.latitude, true);` && |\n|  &&
             `      this.setProperty("altitude", position.coords.altitude, true);` && |\n|  &&
             `      this.setProperty("accuracy", position.coords.accuracy, true);` && |\n|  &&
             `      this.setProperty("altitudeAccuracy", position.coords.altitudeAccuracy, true);` && |\n|  &&
             `      this.setProperty("speed", position.coords.speed, true);` && |\n|  &&
             `      this.setProperty("heading", position.coords.heading, true);` && |\n|  &&
             `      this.fireFinished();` && |\n|  &&
             `` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    async init() {` && |\n|  &&
             `` && |\n|  &&
             `      navigator.geolocation.getCurrentPosition(this.callbackPosition.bind(this));` && |\n|  &&
             `` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    exit() {` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    onAfterRendering() {` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer() {` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/FileUploader", ["sap/ui/core/Control", "sap/m/Button", "sap/ui/unified/FileUploader", "sap/m/HBox"], function (Control, Button, FileUploader, HBox) {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.FileUploader", {` && |\n|  &&
             `` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        value: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        path: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        tooltip: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        fileType: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        placeholder: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        buttonText: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        style: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: ""` && |\n|  &&
             `        },` && |\n|  &&
             `        uploadButtonText: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: "Upload"` && |\n|  &&
             `        },` && |\n|  &&
             `        enabled: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: true` && |\n|  &&
             `        },` && |\n|  &&
             `        icon: {` && |\n|  &&
             `          type: "string",` && |\n|  &&
             `          defaultValue: "sap-icon://browse-folder"` && |\n|  &&
             `        },` && |\n|  &&
             `        iconOnly: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        buttonOnly: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        multiple: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        visible: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: true` && |\n|  &&
             `        },` && |\n|  &&
             `        checkDirectUpload: {` && |\n|  &&
             `          type: "boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `` && |\n|  &&
             `      aggregations: {},` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "upload": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {}` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `      renderer: null` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer: function (oRm, oControl) {` && |\n|  &&
             `` && |\n|  &&
             `      if (!oControl.getProperty("checkDirectUpload")) {` && |\n|  &&
             `        oControl.oUploadButton = new Button({` && |\n|  &&
             `          text: oControl.getProperty("uploadButtonText"),` && |\n|  &&
             `          enabled: oControl.getProperty("path") !== "",` && |\n|  &&
             `          press: function (oEvent) {` && |\n|  &&
             `` && |\n|  &&
             `            this.setProperty("path", this.oFileUploader.getProperty("value"));` && |\n|  &&
             `` && |\n|  &&
             `            var file = z2ui5.oUpload.oFileUpload.files[0];` && |\n|  &&
             `            var reader = new FileReader();` && |\n|  &&
             `` && |\n|  &&
             `            reader.onload = function (evt) {` && |\n|  &&
             `              var vContent = evt.currentTarget.result;` && |\n|  &&
             `              this.setProperty("value", vContent);` && |\n|  &&
             `              this.fireUpload();` && |\n|  &&
             `              //this.getView().byId('picture' ).getDomRef().src = vContent;` && |\n|  &&
             `            }` && |\n|  &&
             `              .bind(this)` && |\n|  &&
             `` && |\n|  &&
             `            reader.readAsDataURL(file);` && |\n|  &&
             `          }` && |\n|  &&
             `            .bind(oControl)` && |\n|  &&
             `        });` && |\n|  &&
             `      }` && |\n|  &&
             `` && |\n|  &&
             `      oControl.oFileUploader = new FileUploader({` && |\n|  &&
             `        icon: oControl.getProperty("icon"),` && |\n|  &&
             `        iconOnly: oControl.getProperty("iconOnly"),` && |\n|  &&
             `        buttonOnly: oControl.getProperty("buttonOnly"),` && |\n|  &&
             `        buttonText: oControl.getProperty("buttonText"),` && |\n|  &&
             `        style: oControl.getProperty("style"),` && |\n|  &&
             `        fileType: oControl.getProperty("fileType"),` && |\n|  &&
             `        visible: oControl.getProperty("visible"),` && |\n|  &&
             `        uploadOnChange: oControl.getProperty("checkDirectUpload"),` && |\n|  &&
             `        enabled: oControl.getProperty("enabled"),` && |\n|  &&
             `        value: oControl.getProperty("path"),` && |\n|  &&
             `        placeholder: oControl.getProperty("placeholder"),` && |\n|  &&
             `        change: function (oEvent) {` && |\n|  &&
             `          if (oControl.getProperty("checkDirectUpload")) {` && |\n|  &&
             `            return;` && |\n|  &&
             `          }` && |\n|  &&
             `` && |\n|  &&
             `          var value = oEvent.getSource().getProperty("value");` && |\n|  &&
             `          this.setProperty("path", value);` && |\n|  &&
             `          if (value) {` && |\n|  &&
             `            this.oUploadButton.setEnabled();` && |\n|  &&
             `          } else {` && |\n|  &&
             `            this.oUploadButton.setEnabled(false);` && |\n|  &&
             `          }` && |\n|  &&
             `          this.oUploadButton.rerender();` && |\n|  &&
             `          z2ui5.oUpload = oEvent.oSource;` && |\n|  &&
             `        }` && |\n|  &&
             `          .bind(oControl),` && |\n|  &&
             `        uploadComplete: function (oEvent) {` && |\n|  &&
             `          if (!oControl.getProperty("checkDirectUpload")) {` && |\n|  &&
             `            return;` && |\n|  &&
             `          }` && |\n|  &&
             `` && |\n|  &&
             `          var value = oEvent.getSource().getProperty("value");` && |\n|  &&
             `          this.setProperty("path", value);` && |\n|  &&
             `` && |\n|  &&
             `          var file = oEvent.oSource.oFileUpload.files[0];` && |\n|  &&
             `          var reader = new FileReader();` && |\n|  &&
             `` && |\n|  &&
             `          reader.onload = function (evt) {` && |\n|  &&
             `            var vContent = evt.currentTarget.result;` && |\n|  &&
             `            this.setProperty("value", vContent);` && |\n|  &&
             `            this.fireUpload();` && |\n|  &&
             `          }` && |\n|  &&
             `            .bind(this)` && |\n|  &&
             `` && |\n|  &&
             `          reader.readAsDataURL(file);` && |\n|  &&
             `        }` && |\n|  &&
             `          .bind(oControl)` && |\n|  &&
             `      });` && |\n|  &&
             `` && |\n|  &&
             `      var hbox = new HBox();` && |\n|  &&
             `      hbox.addItem(oControl.oFileUploader);` && |\n|  &&
             `      hbox.addItem(oControl.oUploadButton);` && |\n|  &&
             `      oRm.renderControl(hbox);` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/MultiInputExt", ["sap/ui/core/Control", "sap/m/Token", "sap/ui/core/Core", "sap/ui/core/Element"], (Control, Token, Core, Element) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.MultiInputExt", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        MultiInputId: {` && |\n|  &&
             `          type: "String"` && |\n|  &&
             `        },` && |\n|  &&
             `        MultiInputName: {` && |\n|  &&
             `          type: "String"` && |\n|  &&
             `        },` && |\n|  &&
             `        addedTokens: {` && |\n|  &&
             `          type: "Array"` && |\n|  &&
             `        },` && |\n|  &&
             `        checkInit: {` && |\n|  &&
             `          type: "Boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        },` && |\n|  &&
             `        removedTokens: {` && |\n|  &&
             `          type: "Array"` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "change": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {}` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() {` && |\n|  &&
             `      z2ui5.onAfterRendering.push(this.setControl.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    onTokenUpdate(oEvent) {` && |\n|  &&
             `      this.setProperty("addedTokens", []);` && |\n|  &&
             `      this.setProperty("removedTokens", []);` && |\n|  &&
             `` && |\n|  &&
             `      if (oEvent.mParameters.type == "removed") {` && |\n|  &&
             `        let removedTokens = [];` && |\n|  &&
             `        oEvent.mParameters.removedTokens.forEach((item) => {` && |\n|  &&
             `          removedTokens.push({` && |\n|  &&
             `            KEY: item.getKey(),` && |\n|  &&
             `            TEXT: item.getText()` && |\n|  &&
             `          });` && |\n|  &&
             `        }` && |\n|  &&
             `        );` && |\n|  &&
             `        this.setProperty("removedTokens", removedTokens);` && |\n|  &&
             `      } else {` && |\n|  &&
             `        let addedTokens = [];` && |\n|  &&
             `        oEvent.mParameters.addedTokens.forEach((item) => {` && |\n|  &&
             `          addedTokens.push({` && |\n|  &&
             `            KEY: item.getKey(),` && |\n|  &&
             `            TEXT: item.getText()` && |\n|  &&
             `          });` && |\n|  &&
             `        }` && |\n|  &&
             `        );` && |\n|  &&
             `        this.setProperty("addedTokens", addedTokens);` && |\n|  &&
             `      }` && |\n|  &&
             `      this.fireChange();` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) {` && |\n|  &&
             `      z2ui5.onAfterRendering.push(this.setControl.bind(oControl));` && |\n|  &&
             `    },` && |\n|  &&
             `    setControl() {` && |\n|  &&
             `      let table = z2ui5.oView.byId(this.getProperty("MultiInputId"));` && |\n|  &&
             `      if (!table) {` && |\n|  &&
             `        try {` && |\n|  &&
             `          // table = Core.byId(Element.getElementsByName(this.getProperty("MultiInputName"))[0].id.replace('-inner', ''));` && |\n|  &&
             `        } catch (e) {` && |\n|  &&
             `          return;` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `      if (!table) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      if (this.getProperty("checkInit") == true) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      this.setProperty("checkInit", true);` && |\n|  &&
             `      table.attachTokenUpdate(this.onTokenUpdate.bind(this));` && |\n|  &&
             `      var fnValidator = function (args) {` && |\n|  &&
             `        var text = args.text;` && |\n|  &&
             `        return new Token({` && |\n|  &&
             `          key: text,` && |\n|  &&
             `          text: text` && |\n|  &&
             `        });` && |\n|  &&
             `      };` && |\n|  &&
             `      table.addValidator(fnValidator);` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRM, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/SmartMultiInputExt", ["sap/ui/core/Control", "sap/m/Token", "sap/ui/core/Core", "sap/ui/core/Element"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.SmartMultiInputExt", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        multiInputId: {` && |\n|  &&
             `          type: "String"` && |\n|  &&
             `        },` && |\n|  &&
             `        addedTokens: {` && |\n|  &&
             `          type: "Array"` && |\n|  &&
             `        },` && |\n|  &&
             `        removedTokens: {` && |\n|  &&
             `          type: "Array"` && |\n|  &&
             `        },` && |\n|  &&
             `        rangeData: {` && |\n|  &&
             `          type: "Array",` && |\n|  &&
             `          defaultValue: []` && |\n|  &&
             `        },` && |\n|  &&
             `        checkInit: {` && |\n|  &&
             `          type: "Boolean",` && |\n|  &&
             `          defaultValue: false` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "change": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {}` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() {` && |\n|  &&
             `      z2ui5.onAfterRendering.push(this.setControl.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    onTokenUpdate(oEvent) {` && |\n|  &&
             `      this.setProperty("addedTokens", []);` && |\n|  &&
             `      this.setProperty("removedTokens", []);` && |\n|  &&
             `` && |\n|  &&
             `      if (oEvent.mParameters.type == "removed") {` && |\n|  &&
             `        let removedTokens = [];` && |\n|  &&
             `        oEvent.mParameters.removedTokens.forEach((item) => {` && |\n|  &&
             `          removedTokens.push({` && |\n|  &&
             `            KEY: item.getKey(),` && |\n|  &&
             `            TEXT: item.getText()` && |\n|  &&
             `          });` && |\n|  &&
             `        }` && |\n|  &&
             `        );` && |\n|  &&
             `        this.setProperty("removedTokens", removedTokens);` && |\n|  &&
             `      } else {` && |\n|  &&
             `        let addedTokens = [];` && |\n|  &&
             `        oEvent.mParameters.addedTokens.forEach((item) => {` && |\n|  &&
             `          addedTokens.push({` && |\n|  &&
             `            KEY: item.getKey(),` && |\n|  &&
             `            TEXT: item.getText()` && |\n|  &&
             `          });` && |\n|  &&
             `        }` && |\n|  &&
             `        );` && |\n|  &&
             `        this.setProperty("addedTokens", addedTokens);` && |\n|  &&
             `      }` && |\n|  &&
             `      const aTokens = oEvent.getSource().getTokens();` && |\n|  &&
             `      this.setProperty("rangeData", oEvent.getSource().getRangeData().map((oRangeData, iIndex) => {` && |\n|  &&
             `        const oToken = aTokens[iIndex];` && |\n|  &&
             `        oRangeData.tokenText = oToken.getText();` && |\n|  &&
             `        oRangeData.tokenLongKey = oToken.data("longKey");` && |\n|  &&
             `        return oRangeData;` && |\n|  &&
             `      }));` && |\n|  &&
             `      this.fireChange();` && |\n|  &&
             `    },` && |\n|  &&
             `    setRangeData(aRangeData) {` && |\n|  &&
             `      this.setProperty("rangeData", aRangeData);` && |\n|  &&
             `      this.inputInitialized().then((input) => {` && |\n|  &&
             `        input.setRangeData(aRangeData.map((oRangeData) => {` && |\n|  &&
             `          const oRangeDataNew = {};` && |\n|  &&
             `          Object.entries(oRangeData).forEach((aEntry) => {` && |\n|  &&
             `            const sKeyNameNew = aEntry[0].toLowerCase();` && |\n|  &&
             `            oRangeDataNew[(sKeyNameNew === "keyfield" ? "keyField" : sKeyNameNew)] = aEntry[1];` && |\n|  &&
             `          });` && |\n|  &&
             |\n|.
    result = result &&
             `          return oRangeDataNew;` && |\n|  &&
             `        }));` && |\n|  &&
             `        //we need to set token text explicitly, as setRangeData does no recalculation` && |\n|  &&
             `        input.getTokens().forEach((token, index) => {` && |\n|  &&
             `          const oRangeData = aRangeData[index];` && |\n|  &&
             `          token.data("longKey", oRangeData.TOKENLONGKEY);` && |\n|  &&
             `          token.data("range", null);` && |\n|  &&
             `          const sTokenText = oRangeData.TOKENTEXT;` && |\n|  &&
             `          if (sTokenText) {` && |\n|  &&
             `            token.setText(sTokenText);` && |\n|  &&
             `          }` && |\n|  &&
             `        });` && |\n|  &&
             `      });` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) { },` && |\n|  &&
             `    setControl() {` && |\n|  &&
             `      const input = z2ui5.oView.byId(this.getProperty("multiInputId"));` && |\n|  &&
             `      if (!input) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      if (this.getProperty("checkInit") == true) {` && |\n|  &&
             `        return;` && |\n|  &&
             `      }` && |\n|  &&
             `      this.setProperty("checkInit", true);` && |\n|  &&
             `      input.attachTokenUpdate(this.onTokenUpdate.bind(this));` && |\n|  &&
             `      input.attachInnerControlsCreated(this.onInnerControlsCreated.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `    inputInitialized(input) {` && |\n|  &&
             `      return new Promise((resolve, reject) => {` && |\n|  &&
             `        if (this._bInnerControlsCreated) {` && |\n|  &&
             `          resolve(input); //resolve immediately` && |\n|  &&
             `        } else {` && |\n|  &&
             `          this._oPendingInnerControlsCreated = resolve; //resolve later` && |\n|  &&
             `        }` && |\n|  &&
             `      });` && |\n|  &&
             `    },` && |\n|  &&
             `    _oPendingInnerControlsCreated: null,` && |\n|  &&
             `    _bInnerControlsCreated: false,` && |\n|  &&
             `    onInnerControlsCreated(oEvent) {` && |\n|  &&
             `      const input = oEvent.getSource();` && |\n|  &&
             `      if (this._oPendingInnerControlsCreated) {` && |\n|  &&
             `        this._oPendingInnerControlsCreated(input);` && |\n|  &&
             `      }` && |\n|  &&
             `      this._oPendingInnerControlsCreated = null;` && |\n|  &&
             `      this._bInnerControlsCreated = true;` && |\n|  &&
             `    }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/CameraPicture", [` && |\n|  &&
             `  "sap/ui/core/Control",` && |\n|  &&
             `  "sap/m/Dialog",` && |\n|  &&
             `  "sap/m/Button"` && |\n|  &&
             `], function (Control, Dialog, Button) {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.CameraPicture", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        id: { type: "string" },` && |\n|  &&
             `        value: { type: "string" },` && |\n|  &&
             `        press: { type: "string" },` && |\n|  &&
             `        autoplay: { type: "boolean", defaultValue: true }` && |\n|  &&
             `      },` && |\n|  &&
             `      events: {` && |\n|  &&
             `        "OnPhoto": {` && |\n|  &&
             `          allowPreventDefault: true,` && |\n|  &&
             `          parameters: {` && |\n|  &&
             `            "photo": {` && |\n|  &&
             `              type: "string"` && |\n|  &&
             `            }` && |\n|  &&
             `          }` && |\n|  &&
             `        }` && |\n|  &&
             `      },` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    capture: function (oEvent) {` && |\n|  &&
             `` && |\n|  &&
             `      var video = document.querySelector("#zvideo");` && |\n|  &&
             `      var canvas = document.getElementById('zcanvas');` && |\n|  &&
             `      var resultb64 = "";` && |\n|  &&
             `      canvas.width = 200;` && |\n|  &&
             `      canvas.height = 200;` && |\n|  &&
             `      canvas.getContext('2d').drawImage(video, 0, 0, 200, 200);` && |\n|  &&
             `      resultb64 = canvas.toDataURL();` && |\n|  &&
             `      this.setProperty("value", resultb64);` && |\n|  &&
             `      this.fireOnPhoto({` && |\n|  &&
             `        "photo": resultb64` && |\n|  &&
             `      });` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    onPicture: function (oEvent) {` && |\n|  &&
             `` && |\n|  &&
             `      if (!this._oScanDialog) {` && |\n|  &&
             `        this._oScanDialog = new Dialog({` && |\n|  &&
             `          title: "Device Photo Function",` && |\n|  &&
             `          contentWidth: "640px",` && |\n|  &&
             `          contentHeight: "480px",` && |\n|  &&
             `          horizontalScrolling: false,` && |\n|  &&
             `          verticalScrolling: false,` && |\n|  &&
             `          stretch: true,` && |\n|  &&
             `          content: [` && |\n|  &&
             `            new HTML({` && |\n|  &&
             `              id: this.getId() + 'PictureContainer',` && |\n|  &&
             `              content: '<video width="600px" height="400px" autoplay="true" id="zvideo">'` && |\n|  &&
             `            }),` && |\n|  &&
             `            new Button({` && |\n|  &&
             `              text: "Capture",` && |\n|  &&
             `              press: function (oEvent) {` && |\n|  &&
             `                this.capture();` && |\n|  &&
             `                this._oScanDialog.close();` && |\n|  &&
             `              }.bind(this)` && |\n|  &&
             `            }),` && |\n|  &&
             `            new HTML({` && |\n|  &&
             `              content: '<canvas hidden id="zcanvas" style="overflow:auto"></canvas>'` && |\n|  &&
             `            }),` && |\n|  &&
             `          ],` && |\n|  &&
             `          endButton: new Button({` && |\n|  &&
             `            text: "Cancel",` && |\n|  &&
             `            press: function (oEvent) {` && |\n|  &&
             `              this._oScanDialog.close();` && |\n|  &&
             `            }.bind(this)` && |\n|  &&
             `          }),` && |\n|  &&
             `        });` && |\n|  &&
             `      }` && |\n|  &&
             `` && |\n|  &&
             `      this._oScanDialog.open();` && |\n|  &&
             `` && |\n|  &&
             `      setTimeout(function () {` && |\n|  &&
             `        var video = document.querySelector('#zvideo');` && |\n|  &&
             `        if (navigator.mediaDevices.getUserMedia) {` && |\n|  &&
             `          navigator.mediaDevices.getUserMedia({ video: { facingMode: { exact: "environment" } } })` && |\n|  &&
             `            .then(function (stream) {` && |\n|  &&
             `              video.srcObject = stream;` && |\n|  &&
             `            })` && |\n|  &&
             `            .catch(function (error) {` && |\n|  &&
             `              console.log("Something went wrong!");` && |\n|  &&
             `            });` && |\n|  &&
             `        }` && |\n|  &&
             `      }.bind(this), 300);` && |\n|  &&
             `` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer: function (oRM, oControl) {` && |\n|  &&
             `` && |\n|  &&
             `      var oButton = new Button({` && |\n|  &&
             `        icon: "sap-icon://camera",` && |\n|  &&
             `        text: "Camera",` && |\n|  &&
             `        press: oControl.onPicture.bind(oControl),` && |\n|  &&
             `      });` && |\n|  &&
             `      oRM.renderControl(oButton);` && |\n|  &&
             `` && |\n|  &&
             `    },` && |\n|  &&
             `  });` && |\n|  &&
             `});` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/UITableExt", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `` && |\n|  &&
             `  return Control.extend("z2ui5.UITableExt", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        tableId: {` && |\n|  &&
             `          type: "String"` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    init() {` && |\n|  &&
             `      z2ui5.onBeforeRoundtrip.push(this.readFilter.bind(this));` && |\n|  &&
             `      z2ui5.onAfterRoundtrip.push(this.setFilter.bind(this));` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    readFilter() {` && |\n|  &&
             `      try {` && |\n|  &&
             `        let id = this.getProperty("tableId");` && |\n|  &&
             `        let oTable = z2ui5.oView.byId(id);` && |\n|  &&
             `        this.aFilters = oTable.getBinding().aFilters;` && |\n|  &&
             `      } catch (e) { }` && |\n|  &&
             `      ;` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    setFilter() {` && |\n|  &&
             `      try {` && |\n|  &&
             `        setTimeout((aFilters) => {` && |\n|  &&
             `          let id = this.getProperty("tableId");` && |\n|  &&
             `          let oTable = z2ui5.oView.byId(id);` && |\n|  &&
             `          oTable.getBinding().filter(aFilters);` && |\n|  &&
             `        }` && |\n|  &&
             `          , 100, this.aFilters);` && |\n|  &&
             `      } catch (e) { }` && |\n|  &&
             `      ;` && |\n|  &&
             `    },` && |\n|  &&
             `` && |\n|  &&
             `    renderer(oRM, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Util", [], () => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return {` && |\n|  &&
             `    DateCreateObject: (s) => new Date(s),` && |\n|  &&
             `    //  DateAbapTimestampToDate: (sTimestamp) => new sap.gantt.misc.Format.abapTimestampToDate(sTimestamp), commented for UI5 2.x compatibility` && |\n|  &&
             `    DateAbapDateToDateObject: (d) => new Date(d.slice(0, 4), parseInt(d.slice(4, 6)) - 1, d.slice(6, 8)),` && |\n|  &&
             `    DateAbapDateTimeToDateObject: (d, t = '000000') => new Date(d.slice(0, 4), parseInt(d.slice(4, 6)) - 1, d.slice(6, 8), t.slice(0, 2), t.slice(2, 4), t.slice(4, 6)),` && |\n|  &&
             `  };` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `sap.ui.require(["z2ui5/Util"], (Util) => {` && |\n|  &&
             `  z2ui5.Util = Util;` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Favicon", ["sap/ui/core/Control"], (Control) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.Favicon", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        favicon: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    setFavicon(val) {` && |\n|  &&
             `      this.setProperty("favicon", val);` && |\n|  &&
             `      let headTitle = document.querySelector('head');` && |\n|  &&
             `      let setFavicon = document.createElement('link');` && |\n|  &&
             `      setFavicon.setAttribute('rel', 'shortcut icon');` && |\n|  &&
             `      setFavicon.setAttribute('href', val);` && |\n|  &&
             `      headTitle.appendChild(setFavicon);` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
             `` && |\n|  &&
             `sap.ui.define("z2ui5/Dirty", ["sap/ui/core/Control", "sap/ushell/Container"], (Control, Container) => {` && |\n|  &&
             `  "use strict";` && |\n|  &&
             `  return Control.extend("z2ui5.Dirty", {` && |\n|  &&
             `    metadata: {` && |\n|  &&
             `      properties: {` && |\n|  &&
             `        isDirty: {` && |\n|  &&
             `          type: "string"` && |\n|  &&
             `        },` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    setIsDirty(val) {` && |\n|  &&
             `      if (Container) {` && |\n|  &&
             `        Container.setDirtyFlag(val);` && |\n|  &&
             `      } else {` && |\n|  &&
             `        window.onbeforeunload = function (e) {` && |\n|  &&
             `          if (val) {` && |\n|  &&
             `            e.preventDefault();` && |\n|  &&
             `          }` && |\n|  &&
             `        }` && |\n|  &&
             `      }` && |\n|  &&
             `    },` && |\n|  &&
             `    renderer(oRm, oControl) { }` && |\n|  &&
             `  });` && |\n|  &&
             `}` && |\n|  &&
             `);` && |\n|  &&
              ``.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_core_srv_util IMPLEMENTATION.
  METHOD app_get_url.

    IF classname IS INITIAL.
      classname = rtti_get_classname_by_ref( client->get_app( ) ).
    ENDIF.

    DATA lv_url TYPE string.
    lv_url = |{ client->get( )-s_config-origin }{ client->get( )-s_config-pathname }?|.
    DATA lt_param TYPE z2ui5_cl_util=>ty_t_name_value.
    lt_param = url_param_get_tab( client->get( )-s_config-search ).
    DELETE lt_param WHERE n = `app_start`.
    DATA temp713 TYPE z2ui5_cl_util=>ty_s_name_value.
    CLEAR temp713.
    temp713-n = `app_start`.
    temp713-v = to_lower( classname ).
    INSERT temp713 INTO TABLE lt_param.

    result = lv_url && url_param_create_url( lt_param ) && client->get( )-s_config-hash.

  ENDMETHOD.

  METHOD app_get_url_source_code.

    DATA ls_config TYPE z2ui5_if_types=>ty_s_config.
    ls_config = client->get( )-s_config.
    result = |{ ls_config-origin }/sap/bc/adt/oo/classes/|
       && |{ rtti_get_classname_by_ref( client->get_app( ) ) }/source/main|.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_srv_json IMPLEMENTATION.
  METHOD model_front_to_back.

    DATA temp714 LIKE sy-subrc.
    READ TABLE t_attri->* WITH KEY view = view TRANSPORTING NO FIELDS.
    temp714 = sy-subrc.
    IF temp714 = 0.
      DATA lv_view LIKE view.
      lv_view = view.
    ELSE.
      lv_view = z2ui5_if_client=>cs_view-main.
    ENDIF.

    DATA temp715 LIKE LINE OF t_attri->*.
    DATA lr_attri LIKE REF TO temp715.
    LOOP AT t_attri->* REFERENCE INTO lr_attri
         WHERE     bind_type = z2ui5_if_core_types=>cs_bind_type-two_way
               AND view      = lv_view.
      TRY.

          DATA lo_val_front TYPE REF TO z2ui5_if_ajson.
          lo_val_front = model->slice( lr_attri->name_client ).
          IF lo_val_front IS NOT BOUND.
            CONTINUE.
          ENDIF.

          IF lr_attri->custom_mapper_back IS BOUND.
            lo_val_front = lo_val_front->map( lr_attri->custom_mapper_back ).
          ENDIF.

          IF lr_attri->custom_filter_back IS BOUND.
            lo_val_front = lo_val_front->filter( lr_attri->custom_filter_back ).
          ENDIF.

          FIELD-SYMBOLS <val> TYPE data.
          ASSIGN lr_attri->r_ref->* TO <val>.
          IF sy-subrc <> 0.
            CONTINUE.
          ENDIF.

          lo_val_front->to_abap( IMPORTING ev_container = <val> ).

          DATA x TYPE REF TO cx_root.
        CATCH cx_root INTO x.
          z2ui5_cl_util=>x_raise( |JSON_PARSING_ERROR: { x->get_text( ) } | ).
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.
  METHOD model_back_to_front.
    TRY.

        DATA temp716 TYPE REF TO z2ui5_if_ajson.
        temp716 ?= z2ui5_cl_ajson=>create_empty( ).
        DATA ajson_result LIKE temp716.
        ajson_result = temp716.
        DATA temp717 LIKE LINE OF t_attri->*.
        DATA lr_attri LIKE REF TO temp717.
        LOOP AT t_attri->* REFERENCE INTO lr_attri WHERE bind_type <> ``.

          IF lr_attri->custom_mapper IS BOUND.
            DATA temp718 TYPE REF TO z2ui5_if_ajson.
            temp718 ?= z2ui5_cl_ajson=>create_empty( ii_custom_mapping = lr_attri->custom_mapper ).
            DATA ajson LIKE temp718.
            ajson = temp718.
          ELSE.
            DATA temp719 TYPE REF TO z2ui5_if_ajson.
            temp719 ?= z2ui5_cl_ajson=>create_empty( ii_custom_mapping = z2ui5_cl_ajson_mapping=>create_upper_case( ) ).
            ajson = temp719.
          ENDIF.

          CASE lr_attri->bind_type.
            WHEN z2ui5_if_core_types=>cs_bind_type-one_way
            OR z2ui5_if_core_types=>cs_bind_type-two_way.

              FIELD-SYMBOLS <attribute> TYPE data.
              ASSIGN lr_attri->r_ref->* TO <attribute>.
              IF sy-subrc <> 0.
                CONTINUE.
              ENDIF.

              ajson->set( iv_ignore_empty = abap_false
                          iv_path         = `/`
                          iv_val          = <attribute> ).

            WHEN z2ui5_if_core_types=>cs_bind_type-one_time.
              ajson->set( iv_ignore_empty = abap_false
                          iv_path         = `/`
                          iv_val          = lr_attri->json_bind_local ).

            WHEN OTHERS.
              ASSERT `` = `ERROR_UNKNOWN_BIND_MODE`.
          ENDCASE.

          IF lr_attri->custom_filter IS BOUND.
            ajson = ajson->filter( lr_attri->custom_filter ).
          ENDIF.

          ajson_result->set( iv_path = lr_attri->name_client
                             iv_val  = ajson ).
        ENDLOOP.

        result = ajson_result->stringify( ).
        DATA temp720 TYPE string.
        IF result IS INITIAL.
          temp720 = `{}`.
        ELSE.
          temp720 = result.
        ENDIF.
        result = temp720.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x IS NOT BOUND.
    ENDTRY.
  ENDMETHOD.
  METHOD request_json_to_abap.
    TRY.

        DATA temp721 TYPE REF TO z2ui5_if_ajson.
        temp721 ?= z2ui5_cl_ajson=>parse( val ).
        DATA lo_ajson LIKE temp721.
        lo_ajson = temp721.

        DATA lv_model_edit_name TYPE string.
        lv_model_edit_name = |/{ z2ui5_if_core_types=>cs_ui5-two_way_model }|.

        result-o_model = z2ui5_cl_ajson=>create_empty( ).
        DATA lo_model TYPE REF TO z2ui5_if_ajson.
        lo_model = lo_ajson->slice( lv_model_edit_name ).
        result-o_model->set( iv_path = lv_model_edit_name
                             iv_val  = lo_model ).
        lo_ajson->delete( lv_model_edit_name ).

        lo_ajson = lo_ajson->slice( `/S_FRONT` ).
        lo_ajson->to_abap( EXPORTING iv_corresponding = abap_true
                           IMPORTING ev_container     = result-s_front ).

        result-s_front-o_comp_data = lo_ajson->slice( `/CONFIG/ComponentData` ).

        DATA temp1 TYPE xsdboolean.
        temp1 = boolc( result-s_front-search CS `scenario=LAUNCHPAD` OR result-s_front-pathname CS `/ui2/flp` OR result-s_front-pathname CS `test/flpSandbox` ).
        result-s_control-check_launchpad = temp1.
        IF result-s_front-id IS NOT INITIAL.
          RETURN.
        ENDIF.

        TRY.
            IF result-s_front-o_comp_data IS BOUND.
              DATA lo_comp LIKE result-s_front-o_comp_data.
              lo_comp = result-s_front-o_comp_data.
              DATA lv_app_start TYPE string.
              lv_app_start = lo_comp->get( `/startupParameters/app_start/1` ).
              result-s_control-app_start = lv_app_start.
              result-s_control-app_start = z2ui5_cl_util=>c_trim_upper( result-s_control-app_start ).
            ENDIF.
          CATCH cx_root.
        ENDTRY.

        TRY.
            DATA lv_hash LIKE result-s_front-hash.
            lv_hash = result-s_front-hash.
            DATA lv_dummy TYPE string.
            SPLIT lv_hash AT '&/' INTO lv_dummy lv_hash.
            IF lv_hash IS INITIAL.
              lv_hash = result-s_front-hash+2.
            ENDIF.
            result-s_control-app_start_draft = z2ui5_cl_util=>c_trim_upper(
                                           z2ui5_cl_util=>url_param_get( val = `z2ui5-xapp-state`
                                                                         url = lv_hash ) ).
          CATCH cx_root.
        ENDTRY.
        IF result-s_control-app_start IS NOT INITIAL.
          IF result-s_control-app_start(1) = `-`.
            REPLACE FIRST OCCURRENCE OF `-` IN result-s_control-app_start WITH `/`.
            REPLACE FIRST OCCURRENCE OF `-` IN result-s_control-app_start WITH `/`.
          ENDIF.
          RETURN.
        ENDIF.

        result-s_control-app_start = z2ui5_cl_util=>c_trim_upper(
                                         z2ui5_cl_util=>url_param_get( val = `app_start`
                                                                       url = result-s_front-search ) ).
        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        RAISE EXCEPTION TYPE z2ui5_cx_util_error
          EXPORTING
            val = x.
    ENDTRY.
  ENDMETHOD.
  METHOD response_abap_to_json.
    TRY.

        DATA temp722 TYPE REF TO z2ui5_if_ajson.
        temp722 ?= z2ui5_cl_ajson=>create_empty( ii_custom_mapping = z2ui5_cl_ajson_mapping=>create_upper_case( ) ).
        DATA ajson_result LIKE temp722.
        ajson_result = temp722.

        ajson_result->set( iv_path = `/`
                           iv_val  = val-s_front ).
        DATA temp723 TYPE REF TO z2ui5_cl_core_srv_json.
        CREATE OBJECT temp723 TYPE z2ui5_cl_core_srv_json.
        ajson_result = ajson_result->filter( temp723 ).
        DATA lv_frontend TYPE string.
        lv_frontend = ajson_result->stringify( ).

        result = |\{| &&
            |"S_FRONT":{ lv_frontend },| &&
            |"MODEL":{ val-model }| &&
          |\}|.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x IS NOT BOUND.
    ENDTRY.
  ENDMETHOD.
  METHOD z2ui5_if_ajson_filter~keep_node.

    rv_keep = abap_true.

    CASE iv_visit.

      WHEN z2ui5_if_ajson_filter=>visit_type-value.

        CASE is_node-type.
          WHEN z2ui5_if_ajson_types=>node_type-boolean.
            IF is_node-value = `false`.
              rv_keep = abap_false.
            ENDIF.
          WHEN z2ui5_if_ajson_types=>node_type-number.
            IF is_node-value = `0`.
              rv_keep = abap_false.
            ENDIF.
          WHEN z2ui5_if_ajson_types=>node_type-string.
            IF is_node-value = ``.
              rv_keep = abap_false.
            ENDIF.
        ENDCASE.

      WHEN z2ui5_if_ajson_filter=>visit_type-close.

        IF is_node-children = 0.
          rv_keep = abap_false.
        ENDIF.

    ENDCASE.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_srv_event IMPLEMENTATION.

  METHOD get_event.

    result = |{ z2ui5_if_core_types=>cs_ui5-event_backend_function }(['{ val }'|.

    IF s_cnt-check_allow_multi_req = abap_true.
      result = |{ result },false,true|.
    ENDIF.

    result = |{ result }]{ get_t_arg( t_arg ) }|.

  ENDMETHOD.

  METHOD get_event_client.

    result = |{ z2ui5_if_core_types=>cs_ui5-event_frontend_function }('{ val }'|.
    result = result && get_t_arg( t_arg ).

  ENDMETHOD.

  METHOD get_t_arg.

    IF val IS NOT INITIAL.

      DATA temp724 LIKE LINE OF val.
      DATA lr_arg LIKE REF TO temp724.
      LOOP AT val REFERENCE INTO lr_arg.
        DATA lv_new TYPE string.
        lv_new = lr_arg->*.
        IF lv_new IS INITIAL.
          CONTINUE.
        ENDIF.
        IF lv_new(1) <> `$` AND lv_new(1) <> `{`.
          lv_new = |'{ lv_new }'|.
        ENDIF.
        result = |{ result }, { lv_new }|.
      ENDLOOP.

    ENDIF.

    result = |{ result })|.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_srv_diss IMPLEMENTATION.
  METHOD constructor.

    mt_attri = attri.
    mo_app = app.

  ENDMETHOD.

  METHOD create_new_entry.

    DATA temp725 TYPE z2ui5_if_core_types=>ty_s_attri.
    CLEAR temp725.
    result = temp725.
    result-name = name.
    DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
    CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mt_attri app = mo_app.
    result-r_ref       = lo_model->attri_get_val_ref( name ).
    result-o_typedescr = cl_abap_datadescr=>describe_by_data_ref( result-r_ref ).

  ENDMETHOD.

  METHOD diss_dref.

    IF z2ui5_cl_util=>check_unassign_inital( ir_attri->r_ref ) IS NOT INITIAL.
      RETURN.
    ENDIF.

    DATA lr_ref TYPE REF TO data.
    lr_ref = z2ui5_cl_util=>unassign_data( ir_attri->r_ref ).
    IF lr_ref IS INITIAL.
      RETURN.
    ENDIF.

    DATA temp726 TYPE z2ui5_if_core_types=>ty_s_attri.
    CLEAR temp726.
    DATA ls_attri2 LIKE temp726.
    ls_attri2 = temp726.
    ls_attri2-o_typedescr = cl_abap_datadescr=>describe_by_data_ref( lr_ref ).

    CASE ls_attri2-o_typedescr->kind.

      WHEN cl_abap_datadescr=>kind_struct.
        DATA lt_attri TYPE z2ui5_if_core_types=>ty_t_attri.
        lt_attri = diss_struc( ir_attri ).
        INSERT LINES OF lt_attri INTO TABLE result.

      WHEN OTHERS.

        ls_attri2-name = |{ ir_attri->name }->*|.
        DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
        CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mt_attri app = mo_app.
        ls_attri2-r_ref = lo_model->attri_get_val_ref( ls_attri2-name ).
        INSERT ls_attri2 INTO TABLE result.

    ENDCASE.

  ENDMETHOD.

  METHOD diss_oref.

    IF z2ui5_cl_util=>check_unassign_inital( ir_attri->r_ref ) IS NOT INITIAL.
      RETURN.
    ENDIF.

    DATA lr_ref TYPE REF TO object.
    lr_ref = z2ui5_cl_util=>unassign_object( ir_attri->r_ref ).
    DATA lt_attri TYPE abap_attrdescr_tab.
    lt_attri = z2ui5_cl_util=>rtti_get_t_attri_by_oref( lr_ref ).

    DATA temp727 LIKE LINE OF lt_attri.
    DATA lr_attri LIKE REF TO temp727.
    LOOP AT lt_attri REFERENCE INTO lr_attri
         WHERE     visibility   = cl_abap_objectdescr=>public
               AND is_interface = abap_false
               AND is_constant  = abap_false.
      TRY.
          DATA temp728 TYPE string.
          IF ir_attri->name IS NOT INITIAL.
            temp728 = |{ ir_attri->name }->|.
          ELSE.
            CLEAR temp728.
          ENDIF.
          DATA lv_name TYPE string.
          lv_name = temp728 && lr_attri->name.
          DATA ls_new TYPE z2ui5_if_core_types=>ty_s_attri.
          ls_new = create_new_entry( lv_name ).
          INSERT ls_new INTO TABLE result.

        CATCH cx_root.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.

  METHOD diss_struc.

    IF ir_attri->o_typedescr->kind = cl_abap_typedescr=>kind_ref.
      DATA lv_name TYPE string.
      lv_name = |{ ir_attri->name }->|.
      DATA lr_ref TYPE REF TO data.
      lr_ref = z2ui5_cl_util=>unassign_data( ir_attri->r_ref ).
    ELSE.
      lv_name = |{ ir_attri->name }-|.
      lr_ref = ir_attri->r_ref.
    ENDIF.

    DATA lt_attri TYPE abap_component_tab.
    lt_attri = z2ui5_cl_util=>rtti_get_t_attri_by_any( lr_ref ).

    DATA ls_attri LIKE LINE OF lt_attri.
    LOOP AT lt_attri INTO ls_attri.
      DATA ls_new TYPE z2ui5_if_core_types=>ty_s_attri.
      ls_new = create_new_entry( lv_name && ls_attri-name ).
      INSERT ls_new INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD main.

    TRY.

        main_init( ).

        DATA temp729 LIKE sy-subrc.
        READ TABLE mt_attri->* WITH KEY check_dissolved = abap_false TRANSPORTING NO FIELDS.
        temp729 = sy-subrc.
        IF temp729 = 0.
          main_run( ).
        ENDIF.

      CATCH cx_root.
        CLEAR mt_attri->*.
        main_init( ).

        DATA temp730 LIKE sy-subrc.
        READ TABLE mt_attri->* WITH KEY check_dissolved = abap_false TRANSPORTING NO FIELDS.
        temp730 = sy-subrc.
        IF temp730 = 0.
          main_run( ).
        ENDIF.
    ENDTRY.

  ENDMETHOD.

  METHOD main_init.

    IF mt_attri->* IS NOT INITIAL.
      LOOP AT mt_attri->* TRANSPORTING NO FIELDS
           WHERE bind_type <> z2ui5_if_core_types=>cs_bind_type-one_time.
      ENDLOOP.
      IF sy-subrc = 0.
        RETURN.
      ENDIF.
    ENDIF.

    DATA temp731 LIKE REF TO mo_app.
    GET REFERENCE OF mo_app INTO temp731.
DATA temp17 TYPE z2ui5_if_core_types=>ty_s_attri.
CLEAR temp17.
temp17-r_ref = temp731.
DATA ls_attri LIKE temp17.
ls_attri = temp17.
    DATA temp732 LIKE REF TO ls_attri.
    GET REFERENCE OF ls_attri INTO temp732.
DATA lt_init TYPE z2ui5_if_core_types=>ty_t_attri.
lt_init = diss_oref( temp732 ).
    INSERT LINES OF lt_init INTO TABLE mt_attri->*.

  ENDMETHOD.

  METHOD main_run.

    DATA temp733 TYPE z2ui5_if_core_types=>ty_t_attri.
    CLEAR temp733.
    DATA lt_attri_new LIKE temp733.
    lt_attri_new = temp733.

    DATA temp734 LIKE LINE OF mt_attri->*.
    DATA lr_attri LIKE REF TO temp734.
    LOOP AT mt_attri->* REFERENCE INTO lr_attri
         WHERE     check_dissolved  = abap_false
               AND bind_type       <> z2ui5_if_core_types=>cs_bind_type-one_time.

      lr_attri->check_dissolved = abap_true.

      IF lr_attri->o_typedescr IS NOT BOUND.
        DATA ls_entry TYPE z2ui5_if_core_types=>ty_s_attri.
        ls_entry = create_new_entry( lr_attri->name ).
        lr_attri->o_typedescr = ls_entry-o_typedescr.
        lr_attri->r_ref       = ls_entry-r_ref.
      ENDIF.

      CASE lr_attri->o_typedescr->kind.

        WHEN cl_abap_typedescr=>kind_struct.
          DATA lt_attri_struc TYPE z2ui5_if_core_types=>ty_t_attri.
          lt_attri_struc = diss_struc( lr_attri ).
          INSERT LINES OF lt_attri_struc INTO TABLE lt_attri_new.

        WHEN cl_abap_typedescr=>kind_ref.

          CASE lr_attri->o_typedescr->type_kind.

            WHEN cl_abap_typedescr=>typekind_oref.
              DATA lt_attri_oref TYPE z2ui5_if_core_types=>ty_t_attri.
              lt_attri_oref = diss_oref( lr_attri ).
              INSERT LINES OF lt_attri_oref INTO TABLE lt_attri_new.
            WHEN cl_abap_typedescr=>typekind_dref.
              DATA lt_attri_dref TYPE z2ui5_if_core_types=>ty_t_attri.
              lt_attri_dref = diss_dref( lr_attri ).
              INSERT LINES OF lt_attri_dref INTO TABLE lt_attri_new.
            WHEN OTHERS.
              ASSERT 1 = 0.
          ENDCASE.
        WHEN OTHERS.
      ENDCASE.

    ENDLOOP.
    INSERT LINES OF lt_attri_new INTO TABLE mt_attri->*.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_srv_bind IMPLEMENTATION.
  METHOD bind_tab_cell.

    FIELD-SYMBOLS <ele> TYPE any.
    FIELD-SYMBOLS <row> TYPE any.
    DATA lr_ref_in TYPE REF TO data.

    FIELD-SYMBOLS <tab> TYPE STANDARD TABLE.

    ASSIGN ms_config-tab->* TO <tab>.
    READ TABLE <tab> INDEX ms_config-tab_index ASSIGNING <row>.

    DATA lt_attri TYPE abap_component_tab.
    lt_attri = z2ui5_cl_util=>rtti_get_t_attri_by_any( ms_config-tab ).
    FIELD-SYMBOLS <comp> LIKE LINE OF lt_attri.
    LOOP AT lt_attri ASSIGNING <comp>.

      ASSIGN COMPONENT <comp>-name OF STRUCTURE <row> TO <ele>.
      ASSERT sy-subrc = 0.
      GET REFERENCE OF <ele> INTO lr_ref_in.

      IF i_val = lr_ref_in.
        DATA temp735 TYPE string.
        temp735 = ms_config-tab_index - 1.
        result = |{ iv_name }/{ shift_right( temp735 ) }/{ <comp>-name }|.
        RETURN.
      ENDIF.

    ENDLOOP.

    RAISE EXCEPTION TYPE z2ui5_cx_util_error
      EXPORTING
        val = `BINDING_ERROR_TAB_CELL_LEVEL - No class attribute for binding found - Please check if the binded values are public attributes of your class`.

  ENDMETHOD.

  METHOD check_raise_existing.

    IF mr_attri->bind_type <> mv_type.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = |<p>Binding Error - Two different binding types for same attribute used ({ mr_attri->name }).|.
    ENDIF.

    IF mr_attri->custom_mapper IS BOUND.

      DATA lv_name1 TYPE string.
      lv_name1 = z2ui5_cl_util=>rtti_get_classname_by_ref( mr_attri->custom_mapper ).
      DATA lv_name2 TYPE string.
      lv_name2 = z2ui5_cl_util=>rtti_get_classname_by_ref( ms_config-custom_mapper ).
      IF lv_name1 <> lv_name2.
        RAISE EXCEPTION TYPE z2ui5_cx_util_error
          EXPORTING
            val = |<p>Binding Error - Two different mapper for same attribute used ({ mr_attri->name }).|.
      ENDIF.
    ENDIF.

    IF mr_attri->custom_mapper_back IS BOUND AND mr_attri->custom_mapper_back <> ms_config-custom_mapper_back.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = |<p>Binding Error - Two different mapper back for same attribute used ({ mr_attri->name }).|.
    ENDIF.

    IF mr_attri->custom_filter IS BOUND AND mr_attri->custom_filter <> ms_config-custom_filter.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = |<p>Binding Error - Two different filter for same attribute used ({ mr_attri->name }).|.
    ENDIF.

  ENDMETHOD.

  METHOD check_raise_new.

    IF mr_attri->custom_filter_back IS BOUND.
      TRY.
          DATA temp736 TYPE REF TO if_serializable_object.
          temp736 ?= mr_attri->custom_filter_back.
          DATA lo_dummy LIKE temp736.
          lo_dummy = temp736.
        CATCH cx_root.
          RAISE EXCEPTION TYPE z2ui5_cx_util_error
            EXPORTING
              val = `<p>custom_filter_back used but it is not serializable, please use if_serializable_object`.

      ENDTRY.
    ENDIF.

    IF mr_attri->custom_filter_back IS BOUND.
      TRY.
          DATA temp737 TYPE REF TO if_serializable_object.
          temp737 ?= mr_attri->custom_mapper_back.
          DATA lo_dummy2 LIKE temp737.
          lo_dummy2 = temp737.
        CATCH cx_root.
          RAISE EXCEPTION TYPE z2ui5_cx_util_error
            EXPORTING
              val = `<p>mo_custom_mapper_back used but it is not serializable, please use if_serializable_object`.

      ENDTRY.
    ENDIF.

  ENDMETHOD.

  METHOD clear.

    TRY.
        DATA lv_path TYPE string.
        lv_path = shift_right( val = val
                                     sub = `->*` ).
        FIELD-SYMBOLS <temp738> LIKE LINE OF mo_app->mt_attri->*.
        DATA temp739 LIKE sy-tabix.
        temp739 = sy-tabix.
        READ TABLE mo_app->mt_attri->* WITH KEY name = lv_path ASSIGNING <temp738>.
        sy-tabix = temp739.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        <temp738>-check_dissolved = abap_false.
        FIELD-SYMBOLS <temp740> LIKE LINE OF mo_app->mt_attri->*.
        DATA temp741 LIKE sy-tabix.
        temp741 = sy-tabix.
        READ TABLE mo_app->mt_attri->* WITH KEY name = val ASSIGNING <temp740>.
        sy-tabix = temp741.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        <temp740>-check_dissolved = abap_false.
        FIELD-SYMBOLS <temp742> LIKE LINE OF mo_app->mt_attri->*.
        DATA temp743 LIKE sy-tabix.
        temp743 = sy-tabix.
        READ TABLE mo_app->mt_attri->* WITH KEY name = lv_path ASSIGNING <temp742>.
        sy-tabix = temp743.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        <temp742>-name_client = ``.
        FIELD-SYMBOLS <temp744> LIKE LINE OF mo_app->mt_attri->*.
        DATA temp745 LIKE sy-tabix.
        temp745 = sy-tabix.
        READ TABLE mo_app->mt_attri->* WITH KEY name = lv_path ASSIGNING <temp744>.
        sy-tabix = temp745.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        <temp744>-bind_type = ``.

        DATA temp746 LIKE LINE OF mo_app->mt_attri->*.
        DATA lr_bind2 LIKE REF TO temp746.
        LOOP AT mo_app->mt_attri->* REFERENCE INTO lr_bind2
             WHERE name = lv_path.
          CLEAR lr_bind2->r_ref.
        ENDLOOP.

      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD constructor.

    mo_app = app.

  ENDMETHOD.

  METHOD get_client_name.

    result = replace( val  = mr_attri->name
                      sub  = `-`
                      with = `/`
                      occ  = 0 ).
    result = replace( val  = result
                      sub  = `>`
                      with = ``
                      occ  = 0 ).
    DATA temp747 TYPE string.
    IF mv_type = z2ui5_if_core_types=>cs_bind_type-two_way.
      temp747 = |/{ z2ui5_if_core_types=>cs_ui5-two_way_model }|.
    ELSE.
      CLEAR temp747.
    ENDIF.
    result = temp747
        && |/{ result }|.

  ENDMETHOD.

  METHOD main.

    IF z2ui5_cl_util=>check_bound_a_not_inital( config-tab ) IS NOT INITIAL.

      result = main_cell( val    = val
                          type   = type
                          config = config ).

      RETURN.
    ENDIF.

    ms_config = config.
    mv_type   = type.

    DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
    CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mo_app->mt_attri app = mo_app->mo_app.

    lo_model->attri_refs_update( ).

    mr_attri = lo_model->attri_search_a_dissolve( val ).

    IF mr_attri->bind_type IS NOT INITIAL.
      check_raise_existing( ).
    ELSE.
      check_raise_new( ).
      update_model_attri( ).
    ENDIF.
    result = mr_attri->name_client.

    IF |/{ z2ui5_if_core_types=>cs_ui5-two_way_model }| = result.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = `<p>Name of variable not allowed - x is reserved word - use anoter name for your attribute`.

    ENDIF.

    IF ms_config-switch_default_model = abap_true.
      result = |http>{ result }|.
    ENDIF.

    IF ms_config-path_only = abap_false.
      result = |\{{ result }\}|.
    ENDIF.

  ENDMETHOD.

  METHOD main_cell.

    ms_config = config.
    mv_type   = type.

    DATA lo_bind TYPE REF TO z2ui5_cl_core_srv_bind.
    CREATE OBJECT lo_bind TYPE z2ui5_cl_core_srv_bind EXPORTING APP = mo_app.
    DATA temp748 TYPE z2ui5_if_core_types=>ty_s_bind_config.
    CLEAR temp748.
    temp748-path_only = abap_true.
    result = lo_bind->main( val    = config-tab
                            type   = type
                            config = temp748 ).

    result = bind_tab_cell( iv_name = result
                            i_val   = val ).

    IF ms_config-path_only = abap_false.
      result = |\{{ result }\}|.
    ENDIF.

  ENDMETHOD.

  METHOD main_local.
    TRY.

        DATA temp749 TYPE REF TO z2ui5_if_ajson.
        temp749 ?= z2ui5_cl_ajson=>new( ).
        DATA lo_json LIKE temp749.
        lo_json = temp749.
        lo_json->set( iv_path = `/`
                      iv_val  = val ).

        IF config-custom_mapper IS BOUND.
          lo_json = lo_json->map( config-custom_mapper ).
        ELSE.
          lo_json = lo_json->map( z2ui5_cl_ajson_mapping=>create_upper_case( ) ).
        ENDIF.

        IF config-custom_filter IS BOUND.
          lo_json = lo_json->filter( config-custom_filter ).
        ELSE.
          lo_json = lo_json->filter( z2ui5_cl_ajson_filter_lib=>create_empty_filter( ) ).
        ENDIF.

        DATA lv_id TYPE string.
        lv_id = to_upper( z2ui5_cl_util=>uuid_get_c22( ) ).
        DATA temp750 TYPE z2ui5_if_core_types=>ty_s_attri.
        CLEAR temp750.
        temp750-name_client = |/{ lv_id }|.
        temp750-name = lv_id.
        temp750-json_bind_local = lo_json.
        temp750-bind_type = z2ui5_if_core_types=>cs_bind_type-one_time.
        INSERT temp750
               INTO TABLE mo_app->mt_attri->*.

        result = |/{ lv_id }|.

        IF ms_config-switch_default_model = abap_true.
          result = |http>{ result }|.
        ENDIF.

        IF config-path_only = abap_false.
          result = |\{{ result }\}|.
        ENDIF.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x IS NOT BOUND.
    ENDTRY.
  ENDMETHOD.

  METHOD update_model_attri.

    mr_attri->bind_type          = mv_type.
    mr_attri->view               = ms_config-view.
    mr_attri->custom_filter      = ms_config-custom_filter.
    mr_attri->custom_filter_back = ms_config-custom_filter_back.
    mr_attri->custom_mapper      = ms_config-custom_mapper.
    mr_attri->custom_mapper_back = ms_config-custom_mapper_back.
    DATA temp751 TYPE z2ui5_if_core_types=>ty_s_attri-view.
    IF ms_config-view IS INITIAL.
      temp751 = z2ui5_if_client=>cs_view-main.
    ELSE.
      temp751 = ms_config-view.
    ENDIF.
    mr_attri->view               = temp751.
    mr_attri->name_client        = get_client_name( ).

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_srv_attri IMPLEMENTATION.
  METHOD attri_after_load.

    DATA temp752 LIKE LINE OF mt_attri->*.
    DATA lr_attri LIKE REF TO temp752.
    LOOP AT mt_attri->* REFERENCE INTO lr_attri.
      TRY.
          lr_attri->r_ref       = attri_get_val_ref( lr_attri->name ).
          lr_attri->o_typedescr = cl_abap_datadescr=>describe_by_data_ref( lr_attri->r_ref ).

          IF lr_attri->srtti_data IS NOT INITIAL.
            FIELD-SYMBOLS <val> TYPE data.
            ASSIGN lr_attri->r_ref->* TO <val>.
            <val> = z2ui5_cl_util=>xml_srtti_parse( lr_attri->srtti_data ).
            CLEAR lr_attri->srtti_data.
          ENDIF.

        CATCH cx_root.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.

  METHOD attri_before_save.

    DATA temp753 LIKE LINE OF mt_attri->*.
    DATA lr_attri LIKE REF TO temp753.
    LOOP AT mt_attri->* REFERENCE INTO lr_attri.

      IF lr_attri->o_typedescr IS NOT BOUND.
        CONTINUE.
      ENDIF.

      IF lr_attri->bind_type = z2ui5_if_core_types=>cs_bind_type-one_time.
        DELETE mt_attri->*.
        CONTINUE.
      ENDIF.

      IF lr_attri->o_typedescr->type_kind <> cl_abap_classdescr=>typekind_dref.
        CLEAR lr_attri->r_ref.
        CONTINUE.
      ENDIF.

      IF lr_attri->r_ref IS NOT BOUND.
        CONTINUE.
      ENDIF.

      FIELD-SYMBOLS <val_ref> TYPE data.
      ASSIGN lr_attri->r_ref->* TO <val_ref>.
      IF <val_ref> IS NOT INITIAL.
        FIELD-SYMBOLS <val> TYPE data.
        ASSIGN <val_ref>->* TO <val>.
        lr_attri->srtti_data = z2ui5_cl_util=>xml_srtti_stringify( <val> ).
        CLEAR <val>.
      ENDIF.

      CLEAR <val_ref>.
      CLEAR lr_attri->r_ref.

    ENDLOOP.

  ENDMETHOD.

  METHOD attri_search_a_dissolve.

    result = attri_search( val ).
    IF result IS BOUND.
      RETURN.
    ENDIF.

    DATA lo_dissolve TYPE REF TO z2ui5_cl_core_srv_diss.
    CREATE OBJECT lo_dissolve TYPE z2ui5_cl_core_srv_diss EXPORTING attri = mt_attri app = mo_app.

    DO 5 TIMES.

      lo_dissolve->main( ).

      result = attri_search( val ).
      IF result IS BOUND.
        RETURN.
      ENDIF.

      DATA temp754 LIKE sy-subrc.
      READ TABLE mt_attri->* WITH KEY check_dissolved = abap_false TRANSPORTING NO FIELDS.
      temp754 = sy-subrc.
      IF temp754 = 0.
        CONTINUE.
      ENDIF.

      EXIT.
    ENDDO.

    """"" new
    DATA lt_attri TYPE z2ui5_if_core_types=>ty_t_attri.
    lt_attri = mt_attri->*.
    DELETE lt_attri WHERE bind_type IS INITIAL.
    CLEAR mt_attri->*.
    DO 5 TIMES.

      lo_dissolve->main( ).

      result = attri_search( val ).
      IF result IS BOUND.
        FIELD-SYMBOLS <ls_attri> LIKE LINE OF mt_attri->*.
        LOOP AT mt_attri->* ASSIGNING <ls_attri>.
          DATA lv_name LIKE <ls_attri>-name.
          lv_name = <ls_attri>-name.
          DATA temp755 LIKE sy-subrc.
          READ TABLE lt_attri WITH KEY name = lv_name TRANSPORTING NO FIELDS.
          temp755 = sy-subrc.
          IF temp755 = 0.
            DATA temp756 LIKE LINE OF lt_attri.
            DATA temp757 LIKE sy-tabix.
            temp757 = sy-tabix.
            READ TABLE lt_attri WITH KEY name = lv_name INTO temp756.
            sy-tabix = temp757.
            IF sy-subrc <> 0.
              ASSERT 1 = 0.
            ENDIF.
            <ls_attri>-bind_type   = temp756-bind_type.
            DATA temp758 LIKE LINE OF lt_attri.
            DATA temp759 LIKE sy-tabix.
            temp759 = sy-tabix.
            READ TABLE lt_attri WITH KEY name = lv_name INTO temp758.
            sy-tabix = temp759.
            IF sy-subrc <> 0.
              ASSERT 1 = 0.
            ENDIF.
            <ls_attri>-name_client = temp758-name_client.
            DATA temp760 LIKE LINE OF lt_attri.
            DATA temp761 LIKE sy-tabix.
            temp761 = sy-tabix.
            READ TABLE lt_attri WITH KEY name = lv_name INTO temp760.
            sy-tabix = temp761.
            IF sy-subrc <> 0.
              ASSERT 1 = 0.
            ENDIF.
            <ls_attri>-view        = temp760-view.
          ENDIF.
        ENDLOOP.
        RETURN.
      ENDIF.

      DATA temp762 LIKE sy-subrc.
      READ TABLE mt_attri->* WITH KEY check_dissolved = abap_false TRANSPORTING NO FIELDS.
      temp762 = sy-subrc.
      IF temp762 = 0.
        CONTINUE.
      ENDIF.

      EXIT.
    ENDDO.

    """""

    RAISE EXCEPTION TYPE z2ui5_cx_util_error
      EXPORTING
        val = `BINDING_ERROR - No class attribute for binding found - Please check if the binded values are public attributes of your class or switch to bind_local`.

  ENDMETHOD.

  METHOD attri_get_val_ref.

    FIELD-SYMBOLS <attri> TYPE any.
    ASSIGN mo_app->(iv_path) TO <attri>.

    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = `DEREF_FAILED_TARGET_INITIAL`.
    ENDIF.

    GET REFERENCE OF <attri> INTO result.
    IF sy-subrc <> 0.
      ASSERT 1 = 0.
    ENDIF.

  ENDMETHOD.

  METHOD attri_refs_update.

    DATA temp763 LIKE LINE OF mt_attri->*.
    DATA lr_attri LIKE REF TO temp763.
    LOOP AT mt_attri->* REFERENCE INTO lr_attri.
      TRY.
          lr_attri->r_ref       = attri_get_val_ref( lr_attri->name ).
          lr_attri->o_typedescr = cl_abap_datadescr=>describe_by_data_ref( lr_attri->r_ref ).
        CATCH cx_root.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.

  METHOD constructor.

    mt_attri = attri.
    mo_app = app.

  ENDMETHOD.

  METHOD attri_search.

    DATA temp764 LIKE LINE OF mt_attri->*.
    DATA lr_attri LIKE REF TO temp764.
    LOOP AT mt_attri->* REFERENCE INTO lr_attri
         WHERE o_typedescr IS BOUND.

      IF     lr_attri->o_typedescr->kind <> cl_abap_typedescr=>kind_elem
         AND lr_attri->o_typedescr->kind <> cl_abap_typedescr=>kind_struct
         AND lr_attri->o_typedescr->kind <> cl_abap_typedescr=>kind_table.
        CONTINUE.
      ENDIF.

      IF lr_attri->r_ref = val.
        result = lr_attri.
        RETURN.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.
ENDCLASS.
CLASS z2ui5_cl_core_handler IMPLEMENTATION.

  METHOD constructor.

    mv_request_json = val.
    CREATE OBJECT mo_action TYPE z2ui5_cl_core_action EXPORTING VAL = me.

  ENDMETHOD.

  METHOD main.

    main_begin( ).
    DO.
      IF main_process( ) IS NOT INITIAL.
        EXIT.
      ENDIF.
    ENDDO.

    CLEAR result.
    result-body = mv_response.
    result-s_stateful = ms_response-s_front-params-s_stateful.

  ENDMETHOD.

  METHOD main_begin.
    TRY.

        DATA lo_json_mapper TYPE REF TO z2ui5_cl_core_srv_json.
        CREATE OBJECT lo_json_mapper TYPE z2ui5_cl_core_srv_json.
        ms_request = lo_json_mapper->request_json_to_abap( mv_request_json ).

        IF ms_request-s_front-id IS NOT INITIAL.
          mo_action = mo_action->factory_by_frontend( ).

        ELSEIF ms_request-s_control-app_start IS NOT INITIAL.
          DATA temp765 TYPE REF TO z2ui5_cl_core_srv_draft.
          CREATE OBJECT temp765 TYPE z2ui5_cl_core_srv_draft.
          temp765->cleanup( ).
          mo_action = mo_action->factory_first_start( ).

        ELSE.
          mo_action = mo_action->factory_system_startup( ).
        ENDIF.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x->get_text( ) = 1.
    ENDTRY.
  ENDMETHOD.

  METHOD main_end.

    CLEAR ms_response.
    ms_response-s_front-params = mo_action->ms_next-s_set.
    ms_response-s_front-id = mo_action->mo_app->ms_draft-id.
    ms_response-s_front-app = z2ui5_cl_util=>rtti_get_classname_by_ref( mo_action->mo_app->mo_app ).

    IF    ms_response-s_front-params-s_view-check_update_model        = abap_true
       OR ms_response-s_front-params-s_view_nest-check_update_model   = abap_true
       OR ms_response-s_front-params-s_view_nest2-check_update_model  = abap_true
       OR ms_response-s_front-params-s_popup-check_update_model       = abap_true
       OR ms_response-s_front-params-s_popover-check_update_model     = abap_true
       OR ms_response-s_front-params-s_view-xml IS NOT INITIAL
       OR ms_response-s_front-params-s_view_nest-xml                 IS NOT INITIAL
       OR ms_response-s_front-params-s_view_nest2-xml                IS NOT INITIAL
       OR ms_response-s_front-params-s_popup-xml IS NOT INITIAL
       OR ms_response-s_front-params-s_popover-xml                   IS NOT INITIAL.

      DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
      CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mo_action->mo_app->mt_attri app = mo_action->mo_app->mo_app.
      lo_model->attri_refs_update( ).
      ms_response-model = mo_action->mo_app->model_json_stringify( ).

    ELSE.
      ms_response-model = `{}`.
    ENDIF.

    DATA lo_json_mapper TYPE REF TO z2ui5_cl_core_srv_json.
    CREATE OBJECT lo_json_mapper TYPE z2ui5_cl_core_srv_json.
    mv_response = lo_json_mapper->response_abap_to_json( ms_response ).

    CLEAR mo_action->ms_next.

    DATA temp766 TYPE REF TO z2ui5_if_app.
    temp766 ?= mo_action->mo_app->mo_app.
    IF temp766->check_sticky = abap_false.
      mo_action->mo_app->db_save( ).
    ENDIF.

  ENDMETHOD.

  METHOD main_process.
    TRY.

        DATA li_client TYPE REF TO z2ui5_cl_core_client.
        CREATE OBJECT li_client TYPE z2ui5_cl_core_client EXPORTING ACTION = mo_action.
        DATA temp767 TYPE REF TO z2ui5_if_app.
        temp767 ?= mo_action->mo_app->mo_app.
        DATA li_app LIKE temp767.
        li_app = temp767.

        IF li_app->check_sticky = abap_false.
          ROLLBACK WORK.
        ENDIF.
        li_app->main( li_client ).
        IF li_app->check_sticky = abap_false.
          ROLLBACK WORK.
        ENDIF.

        IF mo_action->ms_next-o_app_leave IS NOT INITIAL.
          mo_action = mo_action->factory_stack_leave( ).

        ELSEIF mo_action->ms_next-o_app_call IS NOT INITIAL.
          mo_action = mo_action->factory_stack_call( ).

        ELSE.
          main_end( ).
          check_go_client = abap_true.
        ENDIF.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x->get_text( ) = 1.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_client IMPLEMENTATION.

  METHOD constructor.

    mo_action = action.

  ENDMETHOD.

  METHOD z2ui5_if_client~follow_up_action.

*    mo_action->ms_next-s_set-s_follow_up_action-custom_js = val.
    INSERT val INTO TABLE mo_action->ms_next-s_set-s_follow_up_action-custom_js.

  ENDMETHOD.

  METHOD z2ui5_if_client~get.

    CLEAR result.
    result-event = mo_action->ms_actual-event.
    result-check_launchpad_active = mo_action->mo_http_post->ms_request-s_control-check_launchpad.
    result-t_event_arg = mo_action->ms_actual-t_event_arg.
    MOVE-CORRESPONDING mo_action->mo_app->ms_draft TO result-s_draft.
    result-check_on_navigated = mo_action->ms_actual-check_on_navigated.
    MOVE-CORRESPONDING mo_action->mo_http_post->ms_request-s_front TO result-s_config.
    result-r_event_data = mo_action->ms_actual-r_data.

    TRY.
        DATA lo_params TYPE REF TO z2ui5_if_ajson.
        lo_params = mo_action->mo_http_post->ms_request-s_front-o_comp_data->slice( `/startupParameters/` ).
        IF lo_params IS NOT BOUND.
          RETURN.
        ENDIF.
        DATA temp768 LIKE LINE OF lo_params->mt_json_tree.
        DATA lr_comp LIKE REF TO temp768.
        LOOP AT lo_params->mt_json_tree
             REFERENCE INTO lr_comp
             WHERE name = `1`.

          DATA temp769 TYPE z2ui5_if_types=>ty_s_name_value.
          CLEAR temp769.
          temp769-n = shift_left( val = shift_right( val = lr_comp->path sub = `/` ) sub = `/` ).
          temp769-v = lr_comp->value.
          INSERT temp769 INTO TABLE result-t_comp_params.
        ENDLOOP.
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD z2ui5_if_client~get_event_arg.

    TRY.
        DATA temp770 LIKE LINE OF mo_action->ms_actual-t_event_arg.
        DATA temp771 LIKE sy-tabix.
        temp771 = sy-tabix.
        READ TABLE mo_action->ms_actual-t_event_arg INDEX v INTO temp770.
        sy-tabix = temp771.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        result = temp770.
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD z2ui5_if_client~get_app.

    IF id IS NOT INITIAL.
      DATA lo_app TYPE REF TO z2ui5_cl_core_app.
      lo_app = z2ui5_cl_core_app=>db_load( id ).
      DATA temp772 TYPE REF TO z2ui5_if_app.
      temp772 ?= lo_app->mo_app.
      result = temp772.
    ELSE.
      DATA temp773 TYPE REF TO z2ui5_if_app.
      temp773 ?= mo_action->mo_app->mo_app.
      result = temp773.
    ENDIF.

  ENDMETHOD.

  METHOD z2ui5_if_client~message_box_display.

    IF z2ui5_cl_util=>rtti_check_clike( text ) = abap_false.
      DATA lt_msg TYPE z2ui5_cl_util=>ty_t_msg.
      lt_msg = z2ui5_cl_util=>msg_get( text ).
      IF lines( lt_msg ) = 1.
        DATA lv_text TYPE z2ui5_cl_util=>ty_s_msg-text.
        DATA temp18 LIKE LINE OF lt_msg.
        DATA temp19 LIKE sy-tabix.
        temp19 = sy-tabix.
        READ TABLE lt_msg INDEX 1 INTO temp18.
        sy-tabix = temp19.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        lv_text = temp18-text.

        DATA lv_type TYPE string.
        DATA temp20 LIKE LINE OF lt_msg.
        DATA temp21 LIKE sy-tabix.
        temp21 = sy-tabix.
        READ TABLE lt_msg INDEX 1 INTO temp20.
        sy-tabix = temp21.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        lv_type = z2ui5_cl_util=>ui5_get_msg_type( temp20-type ).
        lv_type = to_lower( lv_type ).
        DATA temp774 TYPE string.
        DATA temp22 LIKE LINE OF lt_msg.
        DATA temp23 LIKE sy-tabix.
        temp23 = sy-tabix.
        READ TABLE lt_msg INDEX 1 INTO temp22.
        sy-tabix = temp23.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        CASE temp22-type.
          WHEN 'E'.
            temp774 = `Error`.
          WHEN 'S'.
            temp774 = `Success`.
          WHEN `W`.
            temp774 = `Warning`.
          WHEN OTHERS.
            temp774 = `Information`.
        ENDCASE.
        DATA lv_title LIKE temp774.
        lv_title = temp774.

      ELSEIF lines( lt_msg ) > 1.
        lv_text = | { lines( lt_msg ) } Messages found: |.
        DATA lv_details TYPE string.
        lv_details = `<ul>`.
        DATA temp775 LIKE LINE OF lt_msg.
        DATA lr_msg LIKE REF TO temp775.
        LOOP AT lt_msg REFERENCE INTO lr_msg.
          lv_details = |{ lv_details }<li>{ lr_msg->text }</li>|.
        ENDLOOP.
        lv_details = |{ lv_details }</ul>|.
        IF title IS INITIAL.
          DATA temp776 TYPE string.
          DATA temp24 LIKE LINE OF lt_msg.
          DATA temp25 LIKE sy-tabix.
          temp25 = sy-tabix.
          READ TABLE lt_msg INDEX 1 INTO temp24.
          sy-tabix = temp25.
          IF sy-subrc <> 0.
            ASSERT 1 = 0.
          ENDIF.
          CASE temp24-type.
            WHEN 'E'.
              temp776 = `Error`.
            WHEN 'S'.
              temp776 = `Success`.
            WHEN `W`.
              temp776 = `Warning`.
            WHEN OTHERS.
              temp776 = `Information`.
          ENDCASE.
          lv_title = temp776.
        ENDIF.
        DATA temp777 LIKE LINE OF lt_msg.
        DATA temp778 LIKE sy-tabix.
        temp778 = sy-tabix.
        READ TABLE lt_msg INDEX 1 INTO temp777.
        sy-tabix = temp778.
        IF sy-subrc <> 0.
          ASSERT 1 = 0.
        ENDIF.
        lv_type = z2ui5_cl_util=>ui5_get_msg_type( temp777-type ).
      ELSE.
        RETURN.
      ENDIF.
    ELSE.
      lv_text = text.
      lv_type = type.
      lv_title = title.
      lv_details = details.

      IF lv_type = 'information'.
        lv_type = 'show'.
        IF lv_title IS INITIAL.
          lv_title = 'Information'.
        ENDIF.
      ENDIF.
    ENDIF.

    IF lv_type = ''.
      lv_type = 'show'.
    ENDIF.

    CLEAR mo_action->ms_next-s_set-s_msg_box.
    mo_action->ms_next-s_set-s_msg_box-text = lv_text.
    mo_action->ms_next-s_set-s_msg_box-type = lv_type.
    mo_action->ms_next-s_set-s_msg_box-title = lv_title.
    mo_action->ms_next-s_set-s_msg_box-styleclass = styleclass.
    mo_action->ms_next-s_set-s_msg_box-onclose = onclose.
    mo_action->ms_next-s_set-s_msg_box-actions = actions.
    mo_action->ms_next-s_set-s_msg_box-emphasizedaction = emphasizedaction.
    mo_action->ms_next-s_set-s_msg_box-initialfocus = initialfocus.
    mo_action->ms_next-s_set-s_msg_box-textdirection = textdirection.
    mo_action->ms_next-s_set-s_msg_box-icon = icon.
    mo_action->ms_next-s_set-s_msg_box-details = lv_details.
    mo_action->ms_next-s_set-s_msg_box-closeonnavigation = closeonnavigation.

  ENDMETHOD.

  METHOD z2ui5_if_client~message_toast_display.

    CLEAR mo_action->ms_next-s_set-s_msg_toast.
    mo_action->ms_next-s_set-s_msg_toast-text = text.
    mo_action->ms_next-s_set-s_msg_toast-duration = duration.
    mo_action->ms_next-s_set-s_msg_toast-width = width.
    mo_action->ms_next-s_set-s_msg_toast-my = my.
    mo_action->ms_next-s_set-s_msg_toast-at = at.
    mo_action->ms_next-s_set-s_msg_toast-of = of.
    mo_action->ms_next-s_set-s_msg_toast-offset = offset.
    mo_action->ms_next-s_set-s_msg_toast-collision = collision.
    mo_action->ms_next-s_set-s_msg_toast-onclose = onclose.
    mo_action->ms_next-s_set-s_msg_toast-autoclose = autoclose.
    mo_action->ms_next-s_set-s_msg_toast-animationtimingfunction = animationtimingfunction.
    mo_action->ms_next-s_set-s_msg_toast-animationduration = animationduration.
    mo_action->ms_next-s_set-s_msg_toast-closeonbrowsernavigation = closeonbrowsernavigation.
    mo_action->ms_next-s_set-s_msg_toast-class = class.

  ENDMETHOD.

  METHOD z2ui5_if_client~nav_app_call.

    IF app IS NOT BOUND.
      z2ui5_cl_util=>x_raise( `NAV_APP_LEAVE_TO_INITIAL_APP_ERROR` ).
    ENDIF.

    mo_action->ms_next-o_app_call = app.

    IF app->id_app IS INITIAL.
      app->id_app = z2ui5_cl_util=>uuid_get_c32( ).
    ENDIF.
    result = app->id_app.
  ENDMETHOD.

  METHOD z2ui5_if_client~nav_app_leave.

    IF app IS NOT SUPPLIED.
      app = z2ui5_if_client~get_app( z2ui5_if_client~get( )-s_draft-id_prev_app_stack ).
    ENDIF.

    IF app IS NOT BOUND.
      z2ui5_cl_util=>x_raise( `NAV_APP_LEAVE_TO_INITIAL_APP_ERROR` ).
    ENDIF.

    mo_action->ms_next-o_app_leave = app.

    IF app->id_app IS INITIAL.
      app->id_app = z2ui5_cl_util=>uuid_get_c32( ).
    ENDIF.
    result = app->id_app.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest2_view_destroy.

    mo_action->ms_next-s_set-s_view_nest2-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest2_view_display.

    mo_action->ms_next-s_set-s_view_nest2-xml            = val.
    mo_action->ms_next-s_set-s_view_nest2-id             = id.
    mo_action->ms_next-s_set-s_view_nest2-method_destroy = method_destroy.
    mo_action->ms_next-s_set-s_view_nest2-method_insert  = method_insert.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest2_view_model_update.

    mo_action->ms_next-s_set-s_view_nest2-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest_view_destroy.

    mo_action->ms_next-s_set-s_view_nest-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest_view_display.

    mo_action->ms_next-s_set-s_view_nest-xml            = val.
    mo_action->ms_next-s_set-s_view_nest-id             = id.
    mo_action->ms_next-s_set-s_view_nest-method_destroy = method_destroy.
    mo_action->ms_next-s_set-s_view_nest-method_insert  = method_insert.

  ENDMETHOD.

  METHOD z2ui5_if_client~nest_view_model_update.

    mo_action->ms_next-s_set-s_view_nest-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~popover_destroy.

    mo_action->ms_next-s_set-s_popover-check_destroy = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~popover_display.

    mo_action->ms_next-s_set-s_popover-check_destroy = abap_false.
    mo_action->ms_next-s_set-s_popover-xml           = xml.
    mo_action->ms_next-s_set-s_popover-open_by_id    = by_id.

  ENDMETHOD.

  METHOD z2ui5_if_client~popover_model_update.

    mo_action->ms_next-s_set-s_popover-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~popup_destroy.

    CLEAR mo_action->ms_next-s_set-s_popup.
    mo_action->ms_next-s_set-s_popup-check_destroy = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~popup_display.

    mo_action->ms_next-s_set-s_popup-check_destroy = abap_false.
    mo_action->ms_next-s_set-s_popup-xml           = val.

  ENDMETHOD.

  METHOD z2ui5_if_client~popup_model_update.

    mo_action->ms_next-s_set-s_popup-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~view_destroy.

    mo_action->ms_next-s_set-s_view-check_destroy = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~view_display.

    mo_action->ms_next-s_set-s_view-xml = val.
    mo_action->ms_next-s_set-s_view-switchDefaultModelAnnoURI = switch_default_model_anno_uri.
    mo_action->ms_next-s_set-s_view-switch_default_model_path = switch_default_model_path.

  ENDMETHOD.

  METHOD z2ui5_if_client~view_model_update.

    mo_action->ms_next-s_set-s_view-check_update_model = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~_bind.

    DATA lo_bind TYPE REF TO z2ui5_cl_core_srv_bind.
    CREATE OBJECT lo_bind TYPE z2ui5_cl_core_srv_bind EXPORTING APP = mo_action->mo_app.
    DATA temp779 TYPE z2ui5_if_core_types=>ty_s_bind_config.
    CLEAR temp779.
    temp779-path_only = path.
    temp779-custom_filter = custom_filter.
    temp779-custom_mapper = custom_mapper.
    temp779-tab = z2ui5_cl_util=>conv_get_as_data_ref( tab ).
    temp779-tab_index = tab_index.
    temp779-switch_default_model = switch_Default_Model.
    result = lo_bind->main( val    = z2ui5_cl_util=>conv_get_as_data_ref( val )
                            type   = z2ui5_if_core_types=>cs_bind_type-one_way
                            config = temp779 ).
  ENDMETHOD.

  METHOD z2ui5_if_client~_bind_edit.

    DATA lo_bind TYPE REF TO z2ui5_cl_core_srv_bind.
    CREATE OBJECT lo_bind TYPE z2ui5_cl_core_srv_bind EXPORTING APP = mo_action->mo_app.
    DATA temp780 TYPE z2ui5_if_core_types=>ty_s_bind_config.
    CLEAR temp780.
    temp780-path_only = path.
    temp780-custom_filter = custom_filter.
    temp780-custom_filter_back = custom_filter_back.
    temp780-custom_mapper = custom_mapper.
    temp780-custom_mapper_back = custom_mapper_back.
    temp780-tab = z2ui5_cl_util=>conv_get_as_data_ref( tab ).
    temp780-tab_index = tab_index.
    temp780-switch_default_model = switch_Default_Model.
    result = lo_bind->main( val    = z2ui5_cl_util=>conv_get_as_data_ref( val )
                            type   = z2ui5_if_core_types=>cs_bind_type-two_way
                            config = temp780 ).

  ENDMETHOD.

  METHOD z2ui5_if_client~_bind_local.

    DATA lo_bind TYPE REF TO z2ui5_cl_core_srv_bind.
    CREATE OBJECT lo_bind TYPE z2ui5_cl_core_srv_bind EXPORTING APP = mo_action->mo_app.
    DATA temp781 TYPE z2ui5_if_core_types=>ty_s_bind_config.
    CLEAR temp781.
    temp781-path_only = path.
    temp781-custom_mapper = custom_mapper.
    temp781-custom_filter = custom_filter.
    temp781-switch_default_model = switch_Default_Model.
    result = lo_bind->main_local( val    = val
                                  config = temp781 ).

  ENDMETHOD.

  METHOD z2ui5_if_client~_event.

    DATA lo_ui5 TYPE REF TO z2ui5_cl_core_srv_event.
    CREATE OBJECT lo_ui5 TYPE z2ui5_cl_core_srv_event.
    result = lo_ui5->get_event( val   = val
                                t_arg = t_arg
                                s_cnt = s_ctrl ).

    IF r_data IS NOT INITIAL.
      CREATE DATA mo_action->ms_next-r_data LIKE r_data.
      mo_action->ms_next-r_data = z2ui5_cl_util=>conv_copy_ref_data( r_data ).
    ENDIF.

  ENDMETHOD.

  METHOD z2ui5_if_client~_event_client.

    DATA lo_ui5 TYPE REF TO z2ui5_cl_core_srv_event.
    CREATE OBJECT lo_ui5 TYPE z2ui5_cl_core_srv_event.
    result = lo_ui5->get_event_client( val   = val
                                       t_arg = t_arg ).

  ENDMETHOD.

  METHOD z2ui5_if_client~set_nav_back.

    mo_action->ms_next-s_set-set_nav_back = val.

  ENDMETHOD.

  METHOD z2ui5_if_client~set_push_state.

    mo_action->ms_next-s_set-set_push_state = val.

  ENDMETHOD.
  METHOD z2ui5_if_client~set_app_state_active.

    mo_action->ms_next-s_set-set_app_state_active = val.

  ENDMETHOD.

  METHOD z2ui5_if_client~set_session_stateful.

    DATA temp782 TYPE REF TO z2ui5_if_app.
    temp782 ?= mo_action->mo_app->mo_app.
    DATA lv_check_sticky LIKE temp782->check_sticky.
    lv_check_sticky = temp782->check_sticky.
    IF lv_check_sticky = abap_true AND val = abap_true.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = `STATEFUL_ALREADY_ACTIVATED_ERROR`.
    ENDIF.
    IF val = abap_true.
      mo_action->ms_next-s_set-s_stateful-active = 1.
      DATA temp783 TYPE REF TO z2ui5_if_app.
      temp783 ?= mo_action->mo_app->mo_app.
      temp783->check_sticky = abap_true.
    ELSE.
      mo_action->ms_next-s_set-s_stateful-active = 0.
      DATA temp784 TYPE REF TO z2ui5_if_app.
      temp784 ?= mo_action->mo_app->mo_app.
      temp784->check_sticky = abap_false.
    ENDIF.
    mo_action->ms_next-s_set-s_stateful-switched = abap_true.

  ENDMETHOD.

  METHOD z2ui5_if_client~check_app_prev_stack.

    DATA ls_get TYPE z2ui5_if_types=>ty_s_get.
    ls_get = z2ui5_if_client~get( ).
    DATA temp2 TYPE xsdboolean.
    temp2 = boolc( ls_get-s_draft-id_prev_app_stack IS NOT INITIAL ).
    result = temp2.

  ENDMETHOD.

  METHOD z2ui5_if_client~check_on_init.

    DATA temp785 TYPE REF TO z2ui5_if_app.
    temp785 ?= mo_action->mo_app->mo_app.
    DATA temp3 TYPE xsdboolean.
    temp3 = boolc( temp785->check_initialized = abap_false ).
    result = temp3.

  ENDMETHOD.

  METHOD z2ui5_if_client~check_on_navigated.

    DATA ls_get TYPE z2ui5_if_types=>ty_s_get.
    ls_get = z2ui5_if_client~get( ).
    result = ls_get-check_on_navigated.

  ENDMETHOD.

  METHOD z2ui5_if_client~get_app_prev.

    DATA ls_get TYPE z2ui5_if_types=>ty_s_get.
    ls_get = z2ui5_if_client~get( ).
    result = z2ui5_if_client~get_app( ls_get-s_draft-id_prev_app ).

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_core_app IMPLEMENTATION.

  METHOD all_xml_parse.

    z2ui5_cl_util=>xml_parse( EXPORTING xml = xml
                              IMPORTING any = result ).

  ENDMETHOD.

  METHOD all_xml_stringify.

    TRY.

        DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
        CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mt_attri app = mo_app.
        lo_model->attri_before_save( ).
        result = z2ui5_cl_util=>xml_stringify( me ).

        DATA x2 TYPE REF TO cx_root.
      CATCH cx_root INTO x2.
        TRY.

            lo_model->attri_refs_update( ).

            CLEAR mt_attri->*.

            DATA lo_dissolver TYPE REF TO z2ui5_cl_core_srv_diss.
            CREATE OBJECT lo_dissolver TYPE z2ui5_cl_core_srv_diss EXPORTING attri = mt_attri app = mo_app.

            lo_dissolver->main( ).
            lo_dissolver->main( ).
            CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = mt_attri app = mo_app.
            lo_model->attri_before_save( ).

            result = z2ui5_cl_util=>xml_stringify( me ).

            DATA cx TYPE REF TO cx_root.
          CATCH cx_root INTO cx.

            RAISE EXCEPTION TYPE z2ui5_cx_util_error
              EXPORTING
                val = |<p>{ cx->get_text( ) }<p>{ x2->get_text( ) } or <p> Please check if all generic data references are public attributes of your class|.

        ENDTRY.
    ENDTRY.

  ENDMETHOD.

  METHOD constructor.

    CREATE DATA mt_attri.

  ENDMETHOD.

  METHOD db_load.

    DATA lo_db TYPE REF TO z2ui5_cl_core_srv_draft.
    CREATE OBJECT lo_db TYPE z2ui5_cl_core_srv_draft.
    DATA ls_db TYPE z2ui5_t_99.
    ls_db = lo_db->read_draft( id ).
    result = all_xml_parse( ls_db-data ).

    DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
    CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = result->mt_attri app = result->mo_app.

    lo_model->attri_after_load( ).

  ENDMETHOD.

  METHOD db_load_by_app.

    DATA lo_db TYPE REF TO z2ui5_cl_core_srv_draft.
    CREATE OBJECT lo_db TYPE z2ui5_cl_core_srv_draft.
    DATA ls_db TYPE z2ui5_t_99.
    ls_db = lo_db->read_draft( app->id_draft ).
    result = all_xml_parse( ls_db-data ).

    result->mo_app = app.

    DATA lo_model TYPE REF TO z2ui5_cl_core_srv_attri.
    CREATE OBJECT lo_model TYPE z2ui5_cl_core_srv_attri EXPORTING attri = result->mt_attri app = result->mo_app.

    lo_model->attri_refs_update( ).

  ENDMETHOD.

  METHOD db_save.

    IF mo_app IS BOUND.
      DATA temp786 TYPE REF TO z2ui5_if_app.
      temp786 ?= mo_app.
      temp786->id_draft = ms_draft-id.
      DATA temp787 TYPE REF TO z2ui5_if_app.
      temp787 ?= mo_app.
      temp787->check_initialized = abap_true.
    ENDIF.

    DATA lo_db TYPE REF TO z2ui5_cl_core_srv_draft.
    CREATE OBJECT lo_db TYPE z2ui5_cl_core_srv_draft.
    lo_db->create( draft     = ms_draft
                   model_xml = all_xml_stringify( ) ).

  ENDMETHOD.

  METHOD model_json_parse.

    DATA lo_json_mapper TYPE REF TO z2ui5_cl_core_srv_json.
    CREATE OBJECT lo_json_mapper TYPE z2ui5_cl_core_srv_json.
    lo_json_mapper->model_front_to_back( view    = iv_view
                                         t_attri = mt_attri
                                         model   = io_model ).

  ENDMETHOD.

  METHOD model_json_stringify.

    DATA lo_json_mapper TYPE REF TO z2ui5_cl_core_srv_json.
    CREATE OBJECT lo_json_mapper TYPE z2ui5_cl_core_srv_json.
    result = lo_json_mapper->model_back_to_front( mt_attri ).

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_core_action IMPLEMENTATION.

  METHOD constructor.

    mo_http_post = val.
    CREATE OBJECT mo_app.

  ENDMETHOD.

  METHOD factory_by_frontend.

    CREATE OBJECT result EXPORTING VAL = mo_http_post.

    IF mo_http_post->mo_action->mo_app->mo_app IS BOUND.
      result->mo_app = mo_http_post->mo_action->mo_app.
    ELSE.
      result->mo_app = z2ui5_cl_core_app=>db_load( mo_http_post->ms_request-s_front-id ).
    ENDIF.

    result->mo_app->ms_draft-id      = z2ui5_cl_util=>uuid_get_c32( ).
    result->mo_app->ms_draft-id_prev = mo_http_post->ms_request-s_front-id.
    result->ms_actual-view           = mo_http_post->ms_request-s_front-view.

    result->mo_app->model_json_parse( iv_view  = mo_http_post->ms_request-s_front-view
                                      io_model = mo_http_post->ms_request-o_model ).

    result->ms_actual-event              = mo_http_post->ms_request-s_front-event.
    result->ms_actual-t_event_arg        = mo_http_post->ms_request-s_front-t_event_arg.
    result->ms_actual-check_on_navigated = abap_false.

  ENDMETHOD.

  METHOD factory_first_start.

    TRY.
        CREATE OBJECT result EXPORTING VAL = mo_http_post.

        IF mo_http_post->ms_request-s_control-app_start_draft IS NOT INITIAL.
          TRY.

              DATA lo_app TYPE REF TO z2ui5_cl_core_app.
              lo_app = z2ui5_cl_core_app=>db_load( mo_http_post->ms_request-s_control-app_start_draft ).
              result->mo_app = lo_app.
              result->ms_actual-check_on_navigated = abap_true.
              result->ms_next-s_set-set_app_state_active = abap_true.
              result->mo_app->ms_draft-id_prev_app_stack = ''.
              result->mo_app->ms_draft-id = z2ui5_cl_util=>uuid_get_c32( ).
              RETURN.
            CATCH cx_root.
          ENDTRY.
        ENDIF.

        result->mo_app->ms_draft-id = z2ui5_cl_util=>uuid_get_c32( ).

        CREATE OBJECT result->mo_app->mo_app TYPE (mo_http_post->ms_request-s_control-app_start).

        DATA temp788 TYPE REF TO z2ui5_if_app.
        temp788 ?= result->mo_app->mo_app.
        DATA li_app LIKE temp788.
        li_app = temp788.
        li_app->id_draft = result->mo_app->ms_draft-id.

        result->ms_actual-check_on_navigated = abap_true.

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        RAISE EXCEPTION TYPE z2ui5_cx_util_error
          EXPORTING
            val      = |App with name { mo_http_post->ms_request-s_control-app_start } not found...|
            previous = x.
    ENDTRY.

  ENDMETHOD.

  METHOD factory_stack_call.

    result = prepare_app_stack( ms_next-o_app_call ).
    result->mo_app->ms_draft-id_prev_app_stack = mo_app->ms_draft-id.

  ENDMETHOD.

  METHOD factory_stack_leave.

    result = prepare_app_stack( ms_next-o_app_leave ).

    " check for new app?
    TRY.
        DATA lo_draft TYPE REF TO z2ui5_cl_core_srv_draft.
        CREATE OBJECT lo_draft TYPE z2ui5_cl_core_srv_draft.
        DATA ls_draft TYPE z2ui5_if_types=>ty_s_draft.
        ls_draft = lo_draft->read_info( ms_next-o_app_leave->id_draft ).
      CATCH cx_root.
        result->mo_app->ms_draft-id_prev_app_stack = mo_app->ms_draft-id_prev_app_stack.
        RETURN.
    ENDTRY.

    " check for already existing app?
    IF mo_app->ms_draft-id_prev_app_stack IS NOT INITIAL.
      ls_draft = lo_draft->read_info( mo_app->ms_draft-id_prev_app_stack ).
      result->mo_app->ms_draft-id_prev_app_stack = ls_draft-id_prev_app_stack.
    ENDIF.

  ENDMETHOD.

  METHOD factory_system_startup.

    CREATE OBJECT result EXPORTING VAL = mo_http_post.

    result->mo_app->ms_draft-id          = z2ui5_cl_util=>uuid_get_c32( ).
    result->ms_actual-check_on_navigated = abap_true.
    result->mo_app->mo_app               = z2ui5_cl_app_startup=>factory( ).

    DATA temp789 TYPE REF TO z2ui5_if_app.
    temp789 ?= result->mo_app->mo_app.
    DATA li_app LIKE temp789.
    li_app = temp789.
    li_app->id_draft = result->mo_app->ms_draft-id.

  ENDMETHOD.

  METHOD prepare_app_stack.

    mo_app->db_save( ).

    DATA temp790 TYPE string.
    IF val->id_draft IS INITIAL.
      temp790 = z2ui5_cl_util=>uuid_get_c32( ).
    ELSE.
      temp790 = ms_next-o_app_leave->id_draft.
    ENDIF.
    val->id_draft = temp790.

    CREATE OBJECT result EXPORTING VAL = mo_http_post.
    TRY.
        result->mo_app = z2ui5_cl_core_app=>db_load_by_app( val ).
      CATCH cx_root.
        result->mo_app->mo_app = val.
    ENDTRY.
    result->mo_app->ms_draft-id          = val->id_draft.

    result->mo_app->ms_draft-id_prev     = mo_app->ms_draft-id.
    result->mo_app->ms_draft-id_prev_app = mo_app->ms_draft-id.
    result->ms_actual-check_on_navigated = abap_true.
    result->ms_next-s_set                = ms_next-s_set.

    result->ms_next-s_set-s_view-check_update_model = abap_false.
    result->ms_next-s_set-s_view_nest-check_update_model = abap_false.
    result->ms_next-s_set-s_view_nest2-check_update_model = abap_false.
    result->ms_next-s_set-s_popup-check_update_model = abap_false.
    result->ms_next-s_set-s_popover-check_update_model = abap_false.

    IF ms_next-s_set-s_follow_up_action IS NOT INITIAL.
      DATA lv_action TYPE string.
      DATA temp26 LIKE LINE OF ms_next-s_set-s_follow_up_action-custom_js.
      DATA temp27 LIKE sy-tabix.
      temp27 = sy-tabix.
      READ TABLE ms_next-s_set-s_follow_up_action-custom_js INDEX 1 INTO temp26.
      sy-tabix = temp27.
      IF sy-subrc <> 0.
        ASSERT 1 = 0.
      ENDIF.
      lv_action = temp26.
      DATA lv_dummy TYPE string.
      SPLIT lv_action AT `.eB(['` INTO lv_dummy
            result->ms_actual-event.
      SPLIT result->ms_actual-event AT `']` INTO result->ms_actual-event lv_dummy.
    ENDIF.
    result->ms_actual-r_data = ms_next-r_data.

    CLEAR result->ms_next-s_set-s_msg_box.
    CLEAR result->ms_next-s_set-s_msg_toast.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_core_srv_draft IMPLEMENTATION.
  METHOD cleanup.

    DATA lv_four_hours_ago TYPE timestampl.
    lv_four_hours_ago = z2ui5_cl_util=>time_substract_seconds( time    = z2ui5_cl_util=>time_get_timestampl( )
                                                                     seconds = 60 * 60 * 4 ).

    DELETE FROM z2ui5_t_99 WHERE timestampl < lv_four_hours_ago.
    COMMIT WORK.

  ENDMETHOD.

  METHOD create.

    ASSERT draft-id IS NOT INITIAL.

    DATA temp791 TYPE z2ui5_if_core_types=>ty_s_db.
    CLEAR temp791.
    temp791-id = draft-id.
    temp791-id_prev = draft-id_prev.
    temp791-id_prev_app = draft-id_prev_app.
    temp791-id_prev_app_stack = draft-id_prev_app_stack.
    temp791-timestampl = z2ui5_cl_util=>time_get_timestampl( ).
    temp791-data = model_xml.
    DATA ls_db LIKE temp791.
    ls_db = temp791.

    MODIFY z2ui5_t_99 FROM ls_db.
    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = `CREATE_OF_DRAFT_ENTRY_ON_DATABASE_FAILED`.
    ENDIF.
    COMMIT WORK AND WAIT.

  ENDMETHOD.

  METHOD read.

    IF check_load_app = abap_true.

      SELECT SINGLE * FROM z2ui5_t_99 INTO result
        WHERE id = id
         ##SUBRC_OK.

    ELSE.

      SELECT SINGLE id id_prev id_prev_app id_prev_app_stack
        FROM z2ui5_t_99 INTO CORRESPONDING FIELDS OF result
        WHERE id = id
         ##SUBRC_OK.

    ENDIF.

    IF sy-subrc <> 0.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = `NO_DRAFT_ENTRY_OF_PREVIOUS_REQUEST_FOUND`.
    ENDIF.

  ENDMETHOD.

  METHOD read_draft.

    result = read( id ).

  ENDMETHOD.

  METHOD read_info.

    DATA ls_db TYPE z2ui5_t_99.
    ls_db = read( id             = id
                        check_load_app = abap_false ).

    MOVE-CORRESPONDING ls_db TO result.

  ENDMETHOD.

  METHOD count_entries.

    SELECT COUNT( * )
      FROM z2ui5_t_99
      INTO result.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cx_util_error IMPLEMENTATION.
  METHOD constructor ##ADT_SUPPRESS_GENERATION.

    super->constructor( previous = previous ).
    CLEAR textid.

    TRY.
        ms_error-x_root ?= val.
      CATCH cx_root.
        ms_error-text = val.
    ENDTRY.
    ms_error-uuid = z2ui5_cl_util=>uuid_get_c32( ).

  ENDMETHOD.

  METHOD if_message~get_text.

    IF ms_error-x_root IS NOT INITIAL.
      result = ms_error-x_root->get_text( ).
      DATA error LIKE abap_true.
      error = abap_true.
    ELSEIF ms_error-text IS NOT INITIAL.
      result = ms_error-text.
      error = abap_true.
    ENDIF.

    DATA temp792 TYPE string.
    IF error = abap_true AND result IS INITIAL.
      temp792 = `unknown error`.
    ELSE.
      temp792 = result.
    ENDIF.
    result = temp792.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_util_abap_http IMPLEMENTATION.
  METHOD delete_response_cookie.

    DATA temp793 TYPE string.
    temp793 = val.
    DATA lv_val LIKE temp793.
    lv_val = temp793.

    IF mo_server_onprem IS BOUND.

      DATA object TYPE REF TO object.
      FIELD-SYMBOLS <any> TYPE any.

      ASSIGN mo_server_onprem->('RESPONSE') TO <any>.
      object = <any>.

      CALL METHOD object->('DELETE_COOKIE')
        EXPORTING
          name = lv_val.

    ELSE.

*      CALL METHOD mo_response_cloud->('DELETE_COOKIE_AT_CLIENT')
*        EXPORTING
*          name = lv_val.

    ENDIF.

  ENDMETHOD.

  METHOD get_response_cookie.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    DATA temp794 TYPE string.
    temp794 = val.
    DATA lv_val LIKE temp794.
    lv_val = temp794.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('RESPONSE') TO <any>.
      object = <any>.

      CALL METHOD object->('GET_COOKIE')
        EXPORTING
          name  = lv_val
        IMPORTING
          value = result.

    ELSE.

*      CALL METHOD mo_request_cloud->('GET_COOKIE')
*        EXPORTING
*          i_name  = lv_val
*        RECEIVING
*          r_value = result.

    ENDIF.

  ENDMETHOD.

  METHOD get_header_field.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    DATA temp795 TYPE string.
    temp795 = val.
    DATA lv_val LIKE temp795.
    lv_val = temp795.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('REQUEST') TO <any>.
      object = <any>.

      CALL METHOD object->('GET_HEADER_FIELD')
        EXPORTING
          name  = lv_val
        RECEIVING
          value = result.

    ELSE.

      CALL METHOD mo_request_cloud->('IF_WEB_HTTP_REQUEST~GET_HEADER_FIELD')
        EXPORTING
          i_name  = lv_val
        RECEIVING
          r_value = result.

    ENDIF.

  ENDMETHOD.

  METHOD set_header_field.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    DATA temp796 TYPE string.
    temp796 = n.
    DATA lv_n LIKE temp796.
    lv_n = temp796.
    DATA temp797 TYPE string.
    temp797 = v.
    DATA lv_v LIKE temp797.
    lv_v = temp797.
    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('RESPONSE') TO <any>.
      object = <any>.

      CALL METHOD object->('SET_HEADER_FIELD')
        EXPORTING
          name  = lv_n
          value = lv_v.

    ELSE.

      CALL METHOD mo_response_cloud->('IF_WEB_HTTP_RESPONSE~SET_HEADER_FIELD')
        EXPORTING
          i_name  = lv_n
          i_value = lv_v.

    ENDIF.

  ENDMETHOD.

  METHOD factory.

    CREATE OBJECT result.
    result->mo_server_onprem = server.

  ENDMETHOD.

  METHOD factory_cloud.

    CREATE OBJECT result.
    result->mo_request_cloud  = req.
    result->mo_response_cloud = res.

  ENDMETHOD.

  METHOD get_cdata.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('REQUEST') TO <any>.
      object = <any>.

      CALL METHOD object->('GET_CDATA')
        RECEIVING
          data = result.

    ELSE.

      CALL METHOD mo_request_cloud->('IF_WEB_HTTP_REQUEST~GET_TEXT')
        RECEIVING
          r_value = result.

    ENDIF.

  ENDMETHOD.

  METHOD get_method.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('REQUEST') TO <any>.
      object = <any>.

      CALL METHOD object->('IF_HTTP_REQUEST~GET_METHOD')
        RECEIVING
          method = result.

    ELSE.

      CALL METHOD mo_request_cloud->('IF_WEB_HTTP_REQUEST~GET_METHOD')
        RECEIVING
          r_value = result.

    ENDIF.

  ENDMETHOD.

  METHOD set_cdata.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('RESPONSE') TO <any>.
      object = <any>.

      CALL METHOD object->('SET_CDATA')
        EXPORTING
          data = val.

    ELSE.

      CALL METHOD mo_response_cloud->('IF_WEB_HTTP_RESPONSE~SET_TEXT')
        EXPORTING
          i_text = val.

    ENDIF.

  ENDMETHOD.

  METHOD set_status.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.

    DATA temp798 TYPE string.
    temp798 = reason.
    DATA lv_reason LIKE temp798.
    lv_reason = temp798.

    IF mo_server_onprem IS BOUND.

      ASSIGN mo_server_onprem->('RESPONSE') TO <any>.
      object = <any>.

      CALL METHOD object->('IF_HTTP_RESPONSE~SET_STATUS')
        EXPORTING
          code   = code
          reason = lv_reason.

    ELSE.

      CALL METHOD mo_response_cloud->('IF_WEB_HTTP_RESPONSE~SET_STATUS')
        EXPORTING
          i_code   = code
          i_reason = lv_reason.

    ENDIF.

  ENDMETHOD.

  METHOD set_session_stateful.

    IF mo_server_onprem IS BOUND.

      CALL METHOD mo_server_onprem->('SET_SESSION_STATEFUL')
        EXPORTING
          stateful = val.

    ELSE.

      ASSERT 1 = 'NO_STATEFUL_FEATURE_IN_CLOUD_ERROR'.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_util_abap IMPLEMENTATION.
  METHOD context_check_abap_cloud.

    TRY.
        cl_abap_typedescr=>describe_by_name( 'T100' ).
        result = abap_false.
      CATCH cx_root.
        result = abap_true.
    ENDTRY.

  ENDMETHOD.

  METHOD rtti_get_t_fixvalues.

    TYPES:
      BEGIN OF fixvalue,
        low        TYPE c LENGTH 10,
        high       TYPE c LENGTH 10,
        option     TYPE c LENGTH 2,
        ddlanguage TYPE c LENGTH 1,
        ddtext     TYPE c LENGTH 60,
      END OF fixvalue.
    TYPES fixvalues TYPE STANDARD TABLE OF fixvalue WITH DEFAULT KEY.
    DATA lt_values TYPE fixvalues.

    DATA lv_langu TYPE c LENGTH 1.
    DATA temp1 LIKE LINE OF lt_values.
    DATA lr_fix LIKE REF TO temp1.
    DATA temp2 TYPE z2ui5_cl_util_abap=>ty_s_fix_val.
    lv_langu = ' '.
    lv_langu = langu.

    CALL METHOD elemdescr->('GET_DDIC_FIXED_VALUES')
      EXPORTING
        p_langu        = lv_langu
      RECEIVING
        p_fixed_values = lt_values
      EXCEPTIONS
        not_found      = 1
        no_ddic_type   = 2
        OTHERS         = 3.

    LOOP AT lt_values REFERENCE INTO lr_fix.
      CLEAR temp2.
      temp2-low = lr_fix->low.
      temp2-high = lr_fix->high.
      temp2-descr = lr_fix->ddtext.
      INSERT temp2
             INTO TABLE result.

    ENDLOOP.

  ENDMETHOD.

  METHOD conv_decode_x_base64.
    DATA lv_web_http_name TYPE c LENGTH 19.
    DATA classname TYPE c LENGTH 15.

    TRY.
        lv_web_http_name = 'CL_WEB_HTTP_UTILITY'.
        CALL METHOD (lv_web_http_name)=>('DECODE_X_BASE64')
          EXPORTING
            encoded = val
          RECEIVING
            decoded = result.

      CATCH cx_root.
        classname = 'CL_HTTP_UTILITY'.
        CALL METHOD (classname)=>('DECODE_X_BASE64')
          EXPORTING
            encoded = val
          RECEIVING
            decoded = result.

    ENDTRY.

  ENDMETHOD.

  METHOD conv_encode_x_base64.
    DATA lv_web_http_name TYPE c LENGTH 19.
    DATA classname TYPE c LENGTH 15.

    TRY.
        lv_web_http_name = 'CL_WEB_HTTP_UTILITY'.
        CALL METHOD (lv_web_http_name)=>('ENCODE_X_BASE64')
          EXPORTING
            unencoded = val
          RECEIVING
            encoded   = result.

      CATCH cx_root.
        classname = 'CL_HTTP_UTILITY'.
        CALL METHOD (classname)=>('ENCODE_X_BASE64')
          EXPORTING
            unencoded = val
          RECEIVING
            encoded   = result.

    ENDTRY.

  ENDMETHOD.

  METHOD conv_get_string_by_xstring.

    DATA conv TYPE REF TO object.
    DATA conv_codepage TYPE c LENGTH 21.
    DATA conv_in_class TYPE c LENGTH 18.

    TRY.

        conv_codepage = 'CL_ABAP_CONV_CODEPAGE'.
        CALL METHOD (conv_codepage)=>create_in
          RECEIVING
            instance = conv.

        CALL METHOD conv->('IF_ABAP_CONV_IN~CONVERT')
          EXPORTING
            source = val
          RECEIVING
            result = result.

      CATCH cx_root.
        conv_in_class = 'CL_ABAP_CONV_IN_CE'.
        CALL METHOD (conv_in_class)=>create
          EXPORTING
            encoding = 'UTF-8'
          RECEIVING
            conv     = conv.

        CALL METHOD conv->('CONVERT')
          EXPORTING
            input = val
          IMPORTING
            data  = result.
    ENDTRY.

  ENDMETHOD.

  METHOD conv_get_xstring_by_string.

    DATA conv TYPE REF TO object.
    DATA conv_codepage TYPE c LENGTH 21.
    DATA conv_out_class TYPE c LENGTH 19.

    TRY.

        conv_codepage = 'CL_ABAP_CONV_CODEPAGE'.
        CALL METHOD (conv_codepage)=>create_out
          RECEIVING
            instance = conv.

        CALL METHOD conv->('IF_ABAP_CONV_OUT~CONVERT')
          EXPORTING
            source = val
          RECEIVING
            result = result.

      CATCH cx_root.
        conv_out_class = 'CL_ABAP_CONV_OUT_CE'.
        CALL METHOD (conv_out_class)=>create
          EXPORTING
            encoding = 'UTF-8'
          RECEIVING
            conv     = conv.

        CALL METHOD conv->('CONVERT')
          EXPORTING
            data   = val
          IMPORTING
            buffer = result.
    ENDTRY.

  ENDMETHOD.

  METHOD source_get_method.

    DATA object TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.
    DATA lt_source TYPE string_table.
    DATA lt_string TYPE string_table.
    DATA lv_class TYPE string.
    DATA lv_method TYPE string.
    DATA xco_cp_abap TYPE c LENGTH 11.
    DATA lv_name TYPE c LENGTH 13.
    DATA lv_check_method LIKE abap_false.
    DATA lv_source LIKE LINE OF lt_source.
    DATA lv_source_upper TYPE string.

    TRY.
        lv_class  = to_upper( iv_classname ).

        lv_method = to_upper( iv_methodname ).
        xco_cp_abap = 'XCO_CP_ABAP'.
        CALL METHOD (xco_cp_abap)=>('CLASS')
          EXPORTING
            iv_name  = lv_class
          RECEIVING
            ro_class = object.

        ASSIGN ('OBJECT->IF_XCO_AO_CLASS~IMPLEMENTATION') TO <any>.
        ASSERT sy-subrc = 0.
        object = <any>.

        CALL METHOD object->('IF_XCO_CLAS_IMPLEMENTATION~METHOD')
          EXPORTING
            iv_name   = lv_method
          RECEIVING
            ro_method = object.

        CALL METHOD object->('IF_XCO_CLAS_I_METHOD~CONTENT')
          RECEIVING
            ro_content = object.

        CALL METHOD object->('IF_XCO_CLAS_I_METHOD_CONTENT~GET_SOURCE')
          RECEIVING
            rt_source = result.

      CATCH cx_root.
        lv_name = 'CL_OO_FACTORY'.
        CALL METHOD (lv_name)=>('CREATE_INSTANCE')
          RECEIVING
            result = object.

        CALL METHOD object->('IF_OO_CLIF_SOURCE_FACTORY~CREATE_CLIF_SOURCE')
          EXPORTING
            clif_name = lv_class
          RECEIVING
            result    = object.

        CALL METHOD object->('IF_OO_CLIF_SOURCE~GET_SOURCE')
          IMPORTING
            source = lt_source.
        lv_check_method = abap_false.

        LOOP AT lt_source INTO lv_source.

          lv_source_upper = to_upper( lv_source ).

          IF lv_source_upper CS `ENDMETHOD`.
            lv_check_method = abap_false.
          ENDIF.

          IF lv_source_upper CS |METHOD { lv_method }|.
            lv_check_method = abap_true.
            CONTINUE.
          ENDIF.

          IF lv_check_method = abap_true.
            INSERT lv_source INTO TABLE lt_string.
          ENDIF.

        ENDLOOP.

    ENDTRY.

    result = lt_string.

  ENDMETHOD.

  METHOD rtti_get_classes_impl_intf.

    DATA obj TYPE REF TO object.
    FIELD-SYMBOLS <any> TYPE any.
    DATA lt_implementation_names TYPE string_table.
    TYPES BEGIN OF ty_s_impl.
    TYPES   clsname    TYPE c LENGTH 30.
    TYPES   refclsname TYPE c LENGTH 30.
    TYPES END OF ty_s_impl.
    TYPES temp8 TYPE STANDARD TABLE OF ty_s_impl WITH DEFAULT KEY.
DATA lt_impl TYPE temp8.
    TYPES BEGIN OF ty_s_key.
    TYPES   intkey TYPE c LENGTH 30.
    TYPES END OF ty_s_key.
    DATA ls_key TYPE ty_s_key.
    DATA BEGIN OF ls_clskey.
    DATA   clsname TYPE c LENGTH 30.
    DATA END OF ls_clskey.
    DATA class TYPE REF TO data.
    DATA xco_cp_abap TYPE c LENGTH 11.
    DATA temp3 TYPE z2ui5_cl_util_abap=>ty_t_classes.
    DATA implementation_name LIKE LINE OF lt_implementation_names.
    DATA temp4 LIKE LINE OF temp3.
    DATA lv_fm TYPE string.
    DATA type TYPE c LENGTH 12.
    FIELD-SYMBOLS <class> TYPE data.
    DATA temp5 LIKE LINE OF lt_impl.
    DATA lr_impl LIKE REF TO temp5.
    FIELD-SYMBOLS <description> TYPE any.
    DATA temp6 TYPE z2ui5_cl_util_abap=>ty_s_class_descr.

    TRY.

        ls_clskey-clsname = val.
        xco_cp_abap = 'XCO_CP_ABAP'.
        CALL METHOD (xco_cp_abap)=>interface
          EXPORTING
            iv_name      = ls_clskey-clsname
          RECEIVING
            ro_interface = obj.

        ASSIGN obj->('IF_XCO_AO_INTERFACE~IMPLEMENTATIONS') TO <any>.
        IF sy-subrc <> 0.
          RAISE EXCEPTION TYPE cx_sy_dyn_call_illegal_class.
        ENDIF.
        obj = <any>.

        ASSIGN obj->('IF_XCO_INTF_IMPLEMENTATIONS_FC~ALL') TO <any>.
        IF sy-subrc <> 0.
          RAISE EXCEPTION TYPE cx_sy_dyn_call_illegal_class.
        ENDIF.
        obj = <any>.

        CALL METHOD obj->('IF_XCO_INTF_IMPLEMENTATIONS~GET_NAMES')
          RECEIVING
            rt_names = lt_implementation_names.
        CLEAR temp3.

        LOOP AT lt_implementation_names INTO implementation_name.

          temp4-classname = implementation_name.
          temp4-description = rtti_get_class_descr_on_cloud( implementation_name ).
          INSERT temp4 INTO TABLE temp3.
        ENDLOOP.
        result = temp3.

      CATCH cx_root.

        ls_key-intkey = val.
        lv_fm = `SEO_INTERFACE_IMPLEM_GET_ALL`.
        CALL FUNCTION lv_fm
          EXPORTING
            intkey       = ls_key
          IMPORTING
            impkeys      = lt_impl
          EXCEPTIONS
            not_existing = 1
            OTHERS       = 2.
        IF sy-subrc <> 0.
          RETURN.
        ENDIF.
        type = 'SEOC_CLASS_R'.
        CREATE DATA class TYPE (type).

        ASSIGN class->* TO <class>.

        LOOP AT lt_impl REFERENCE INTO lr_impl.

          CLEAR <class>.

          ls_clskey-clsname = lr_impl->clsname.

          lv_fm = `SEO_CLASS_READ`.
          CALL FUNCTION lv_fm
            EXPORTING
              clskey = ls_clskey
            IMPORTING
              class  = <class>.
          ASSIGN
            COMPONENT 'DESCRIPT'
            OF STRUCTURE <class>
            TO <description>.
          ASSERT sy-subrc = 0.
          CLEAR temp6.
          temp6-classname = lr_impl->clsname.
          temp6-description = <description>.
          INSERT
            temp6
            INTO TABLE result.
        ENDLOOP.

    ENDTRY.

  ENDMETHOD.

  METHOD rtti_get_data_element_texts.

    DATA ddic_ref     TYPE REF TO data.
    DATA data_element TYPE REF TO object.
    DATA content      TYPE REF TO object.
    DATA: BEGIN OF ddic,
            reptext   TYPE string,
            scrtext_s TYPE string,
            scrtext_m TYPE string,
            scrtext_l TYPE string,
          END OF ddic.
    DATA exists TYPE abap_bool.

    DATA data_element_name LIKE i_data_element_name.
    DATA temp7 TYPE REF TO cl_abap_structdescr.
    DATA struct_desrc LIKE temp7.
    FIELD-SYMBOLS <ddic> TYPE data.
    DATA lo_typedescr TYPE REF TO cl_abap_typedescr.
    DATA temp8 TYPE REF TO cl_abap_datadescr.
    DATA data_descr LIKE temp8.
    DATA xco_cp_abap_dictionary TYPE c LENGTH 22.
    data_element_name = i_data_element_name.

    TRY.
        cl_abap_typedescr=>describe_by_name( 'T100' ).
        temp7 ?= cl_abap_structdescr=>describe_by_name( 'DFIES' ).

        struct_desrc = temp7.

        CREATE DATA ddic_ref TYPE HANDLE struct_desrc.

        ASSIGN ddic_ref->* TO <ddic>.
        ASSERT sy-subrc = 0.
        cl_abap_elemdescr=>describe_by_name( EXPORTING  p_name      = data_element_name
                                             RECEIVING  p_descr_ref = lo_typedescr
                                             EXCEPTIONS OTHERS      = 1 ).
        IF sy-subrc <> 0.
          RETURN.
        ENDIF.
        temp8 ?= lo_typedescr.

        data_descr = temp8.

        CALL METHOD data_descr->('GET_DDIC_FIELD')
          RECEIVING
            p_flddescr   = <ddic>
          EXCEPTIONS
            not_found    = 1
            no_ddic_type = 2
            OTHERS       = 3.
        IF sy-subrc <> 0.
          RETURN.
        ENDIF.

        MOVE-CORRESPONDING <ddic> TO ddic.
        result-header = ddic-reptext.
        result-short  = ddic-scrtext_s.
        result-medium = ddic-scrtext_m.
        result-long   = ddic-scrtext_l.

      CATCH cx_root.
        TRY.

            xco_cp_abap_dictionary = 'XCO_CP_ABAP_DICTIONARY'.
            CALL METHOD (xco_cp_abap_dictionary)=>('DATA_ELEMENT')
              EXPORTING
                iv_name         = data_element_name
              RECEIVING
                ro_data_element = data_element.

            CALL METHOD data_element->('IF_XCO_AD_DATA_ELEMENT~EXISTS')
              RECEIVING
                rv_exists = exists.

            IF exists = abap_false.
              RETURN.
            ENDIF.

            CALL METHOD data_element->('IF_XCO_AD_DATA_ELEMENT~CONTENT')
              RECEIVING
                ro_content = content.

            CALL METHOD content->('IF_XCO_DTEL_CONTENT~GET_HEADING_FIELD_LABEL')
              RECEIVING
                rs_heading_field_label = result-header.

            CALL METHOD content->('IF_XCO_DTEL_CONTENT~GET_SHORT_FIELD_LABEL')
              RECEIVING
                rs_short_field_label = result-short.

            CALL METHOD content->('IF_XCO_DTEL_CONTENT~GET_MEDIUM_FIELD_LABEL')
              RECEIVING
                rs_medium_field_label = result-medium.

            CALL METHOD content->('IF_XCO_DTEL_CONTENT~GET_LONG_FIELD_LABEL')
              RECEIVING
                rs_long_field_label = result-long.

          CATCH cx_root.
        ENDTRY.
    ENDTRY.

  ENDMETHOD.

  METHOD uuid_get_c22.

    DATA lv_uuid TYPE c LENGTH 22.
    DATA lv_classname TYPE string.
    DATA lv_fm TYPE string.

    TRY.

        TRY.

            lv_classname = `CL_SYSTEM_UUID`.
            CALL METHOD (lv_classname)=>if_system_uuid_static~create_uuid_c22
              RECEIVING
                uuid = lv_uuid.

          CATCH cx_sy_dyn_call_illegal_class.
            lv_fm = `GUID_CREATE`.
            CALL FUNCTION lv_fm
              IMPORTING
                ev_guid_22 = lv_uuid.

        ENDTRY.

        result = lv_uuid.

      CATCH cx_root.
        ASSERT 1 = 0.
    ENDTRY.

    result = replace( val  = result
                      sub  = `}`
                      with = `0`
                      occ  = 0 ).
    result = replace( val  = result
                      sub  = `{`
                      with = `0`
                      occ  = 0 ).
    result = replace( val  = result
                      sub  = `"`
                      with = `0`
                      occ  = 0 ).
    result = replace( val  = result
                      sub  = `'`
                      with = `0`
                      occ  = 0 ).

  ENDMETHOD.

  METHOD uuid_get_c32.
    DATA lv_uuid TYPE c LENGTH 32.
    DATA lv_classname TYPE string.
    DATA lv_fm TYPE string.

    TRY.

        TRY.

            lv_classname = `CL_SYSTEM_UUID`.
            CALL METHOD (lv_classname)=>if_system_uuid_static~create_uuid_c32
              RECEIVING
                uuid = lv_uuid.

          CATCH cx_root.
            lv_fm = `GUID_CREATE`.
            CALL FUNCTION lv_fm
              IMPORTING
                ev_guid_32 = lv_uuid.

        ENDTRY.

        result = lv_uuid.

      CATCH cx_root.
        ASSERT 1 = 0.
    ENDTRY.
  ENDMETHOD.

  METHOD rtti_get_class_descr_on_cloud.

    DATA obj          TYPE REF TO object.
    DATA content      TYPE REF TO object.
    DATA lv_classname TYPE c LENGTH 30.
    DATA xco_cp_abap TYPE c LENGTH 11.

    lv_classname = i_classname.
    xco_cp_abap = 'XCO_CP_ABAP'.
    CALL METHOD (xco_cp_abap)=>('CLASS')
      EXPORTING
        iv_name  = lv_classname
      RECEIVING
        ro_class = obj.

    CALL METHOD obj->('IF_XCO_AO_CLASS~CONTENT')
      RECEIVING
        ro_content = content.

    CALL METHOD content->('IF_XCO_CLAS_CONTENT~GET_SHORT_DESCRIPTION')
      RECEIVING
        rv_short_description = result.

  ENDMETHOD.

  METHOD rtti_get_t_attri_on_prem.

    DATA structdescr TYPE REF TO cl_abap_structdescr.
    DATA dfies       TYPE REF TO data.
    DATA s_dfies     TYPE ty_s_dfies.

    FIELD-SYMBOLS <dfies> TYPE STANDARD TABLE.
    FIELD-SYMBOLS <line>  TYPE any.

    DATA temp9 TYPE cl_abap_structdescr=>component_table.
    DATA comps LIKE temp9.
    DATA temp10 TYPE REF TO cl_abap_structdescr.
    DATA lo_struct LIKE temp10.
    DATA new_struct_desc TYPE REF TO cl_abap_structdescr.
    DATA new_table_desc TYPE REF TO cl_abap_tabledescr.
    DATA comp LIKE LINE OF comps.
    FIELD-SYMBOLS <value> TYPE any.
    FIELD-SYMBOLS <value_dest> TYPE any.
    CLEAR temp9.

    comps = temp9.

    temp10 ?= cl_abap_structdescr=>describe_by_name( 'DFIES' ).

    lo_struct = temp10.
    comps = lo_struct->get_components( ).

    TRY.
        new_struct_desc = cl_abap_structdescr=>create( comps ).

        new_table_desc = cl_abap_tabledescr=>create( p_line_type  = new_struct_desc
                                                           p_table_kind = cl_abap_tabledescr=>tablekind_std ).

        CREATE DATA dfies TYPE HANDLE new_table_desc.

        ASSIGN dfies->* TO <dfies>.
        IF <dfies> IS NOT ASSIGNED.
          RETURN.
        ENDIF.

        IF tabname IS INITIAL.

          RAISE EXCEPTION TYPE z2ui5_cx_util_error
            EXPORTING
              val = `RTTI_BY_NAME_TAB_INITIAL`.
        ENDIF.

        structdescr ?= cl_abap_structdescr=>describe_by_name( tabname ).
        <dfies> = structdescr->get_ddic_field_list( ).

        LOOP AT <dfies> ASSIGNING <line>.
          LOOP AT comps INTO comp.
            ASSIGN COMPONENT comp-name OF STRUCTURE <line> TO <value>.
            IF <value> IS NOT ASSIGNED.
              CONTINUE.
            ENDIF.
            ASSIGN COMPONENT comp-name OF STRUCTURE s_dfies TO <value_dest>.
            IF <value_dest> IS NOT ASSIGNED.
              CONTINUE.
            ENDIF.

            <value_dest> = <value>.

            UNASSIGN <value>.
            UNASSIGN <value_dest>.

          ENDLOOP.

          APPEND s_dfies TO result.
          CLEAR s_dfies.

        ENDLOOP.

      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD rtti_get_t_attri_on_cloud.

*    DATA db        TYPE REF TO object.
*    DATA fields    TYPE REF TO object.
*    DATA r_names   TYPE REF TO data.
*    DATA t_param   TYPE abap_parmbind_tab.
*    DATA field     TYPE REF TO object.
*    DATA content   TYPE REF TO object.
*    DATA r_content TYPE REF TO data.
*    DATA type      TYPE REF TO object.
*    DATA element   TYPE REF TO object.
*    DATA tab       TYPE c LENGTH 16.
*
*    FIELD-SYMBOLS <any>   TYPE any.
*    FIELD-SYMBOLS <names> TYPE STANDARD TABLE.
*    FIELD-SYMBOLS <name>  TYPE any.
*    FIELD-SYMBOLS <fiel>  TYPE REF TO object.
*
*    tab = tabname.
*
*    CALL METHOD ('XCO_CP_ABAP_DICTIONARY')=>database_table
*      EXPORTING
*        iv_name           = tab
*      RECEIVING
*        ro_database_table = db.
*
*    ASSIGN db->('IF_XCO_DATABASE_TABLE~FIELDS->IF_XCO_DBT_FIELDS_FACTORY~ALL') TO <any>.
*
*    IF sy-subrc <> 0.
*      RETURN.
*    ENDIF.
*
*    fields = <any>.
*
*    CREATE DATA r_names TYPE ('SXCO_T_AD_FIELD_NAMES').
*    ASSIGN r_names->* TO <Names>.
*    IF <Names> IS NOT ASSIGNED.
*      RETURN.
*    ENDIF.
*
*    CALL METHOD fields->('IF_XCO_DBT_FIELDS~GET_NAMES')
*      RECEIVING
*        rt_names = <Names>.
*
*    LOOP AT <Names> ASSIGNING <name>.
*
*      CLEAR t_param.
*
*      INSERT VALUE #( name  = 'IV_NAME'
*                      kind  = cl_abap_objectdescr=>exporting
*                      value = REF #( <name> ) ) INTO TABLE t_param.
*      INSERT VALUE #( name  = 'RO_FIELD'
*                      kind  = cl_abap_objectdescr=>receiving
*                      value = REF #( field ) ) INTO TABLE t_param.
*
*      CALL METHOD db->(`IF_XCO_DATABASE_TABLE~FIELD`)
*        PARAMETER-TABLE t_param.
*
*      ASSIGN t_param[ name = 'RO_FIELD' ] TO FIELD-SYMBOL(<line>).
*      IF <line> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*      ASSIGN <line>-value->* TO <fiel>.
*      IF <fiel> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*
*      CALL METHOD <fiel>->('IF_XCO_DBT_FIELD~CONTENT')
*        RECEIVING
*          ro_content = content.
*
*      CREATE DATA r_content TYPE ('IF_XCO_DBT_FIELD_CONTENT=>TS_CONTENT').
*      ASSIGN r_content->* TO FIELD-SYMBOL(<Content>) CASTING TYPE ('IF_XCO_DBT_FIELD_CONTENT=>TS_CONTENT').
*      IF <content> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*
*      CALL METHOD content->('IF_XCO_DBT_FIELD_CONTENT~GET')
*        RECEIVING
*          rs_content = <Content>.
*
*      ASSIGN COMPONENT 'KEY_INDICATOR' OF STRUCTURE <content> TO FIELD-SYMBOL(<key>).
*      IF <key> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*      ASSIGN COMPONENT 'SHORT_DESCRIPTION' OF STRUCTURE <content> TO FIELD-SYMBOL(<text>).
*      IF <text> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*      ASSIGN COMPONENT 'TYPE' OF STRUCTURE <content> TO FIELD-SYMBOL(<type>).
*      IF <type> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*
*      type = <type>.
*
*      CALL METHOD type->('IF_XCO_DBT_FIELD_TYPE~GET_DATA_ELEMENT')
*        RECEIVING
*          ro_data_element = element.
*
*      IF <text> IS INITIAL.
*        <text> = <name>.
*      ENDIF.
*
*      ASSIGN element->('IF_XCO_AD_OBJECT~NAME') TO FIELD-SYMBOL(<rname>).
*      IF <rname> IS NOT ASSIGNED.
*        CONTINUE.
*      ENDIF.
*
*      IF sy-subrc = 0.
*        result = VALUE #( BASE result
*                          ( fieldname = <name> keyflag = <key> tabname = tab scrtext_s = <text> rollname = <rname> ) ).
*      ELSE.
*        result = VALUE #( BASE result
*                          ( fieldname = <name> keyflag = <key> tabname = tab scrtext_s = <text> rollname = <name> ) ).
*      ENDIF.
*
*      UNASSIGN <Content>.
*      UNASSIGN <key>.
*      UNASSIGN <Text>.
*      UNASSIGN <type>.
*      UNASSIGN <rname>.
*
*    ENDLOOP.

  ENDMETHOD.

  METHOD rtti_get_t_dfies_by_table_name.

    IF context_check_abap_cloud( ) IS NOT INITIAL.
      result = rtti_get_t_attri_on_cloud( table_name ).
    ELSE.
      result = rtti_get_t_attri_on_prem( table_name ).
    ENDIF.

  ENDMETHOD.
ENDCLASS.
CLASS kHGwlIiCDAqWuzmHSWUVKThwDidmDe DEFINITION DEFERRED.
CLASS kHGwlIiCDAqWuzmHSWUVSQazryNNUC DEFINITION DEFERRED.
* renamed: z2ui5_cl_util :: lcl_range_to_sql
CLASS kHGwlIiCDAqWuzmHSWUVSQazryNNUC DEFINITION
  FINAL CREATE PUBLIC.

  PUBLIC SECTION.

    CONSTANTS: BEGIN OF signs,
                 including TYPE string VALUE 'I',
                 excluding TYPE string VALUE 'E',
               END OF signs.

    CONSTANTS: BEGIN OF options,
                 equal                TYPE string VALUE 'EQ',
                 not_equal            TYPE string VALUE 'NE',
                 between              TYPE string VALUE 'BT',
                 not_between          TYPE string VALUE 'NB',
                 contains_pattern     TYPE string VALUE 'CP',
                 not_contains_pattern TYPE string VALUE 'NP',
                 greater_than         TYPE string VALUE 'GT',
                 greater_equal        TYPE string VALUE 'GE',
                 less_equal           TYPE string VALUE 'LE',
                 less_than            TYPE string VALUE 'LT',
               END OF options.

    METHODS constructor
      IMPORTING
        iv_fieldname TYPE clike
        ir_range     TYPE REF TO data.

    METHODS get_sql
      RETURNING
        VALUE(result) TYPE string.

  PROTECTED SECTION.
    DATA mv_fieldname TYPE string.
    DATA mr_range     TYPE REF TO data.

    CLASS-METHODS quote
      IMPORTING
        val        TYPE clike
      RETURNING
        VALUE(out) TYPE string.

ENDCLASS.
CLASS kHGwlIiCDAqWuzmHSWUVSQazryNNUC IMPLEMENTATION.
  METHOD constructor.

    mr_range = ir_range.
    mv_fieldname = |{ to_upper( iv_fieldname ) }|.

  ENDMETHOD.

  METHOD get_sql.

    FIELD-SYMBOLS <lt_range> TYPE STANDARD TABLE.

    ASSIGN me->mr_range->* TO <lt_range>.

    DATA temp4 TYPE xsdboolean.
    temp4 = boolc( <lt_range> IS INITIAL ).
    IF temp4 = abap_true.
      RETURN.
    ENDIF.

    result = `(`.

    FIELD-SYMBOLS <ls_range_item> TYPE ANY.
    LOOP AT <lt_range> ASSIGNING <ls_range_item>.

      FIELD-SYMBOLS <lv_sign> TYPE any.
      ASSIGN COMPONENT 'SIGN' OF STRUCTURE <ls_range_item> TO <lv_sign>.
      FIELD-SYMBOLS <lv_option> TYPE any.
      ASSIGN COMPONENT 'OPTION' OF STRUCTURE <ls_range_item> TO <lv_option>.
      FIELD-SYMBOLS <lv_low> TYPE any.
      ASSIGN COMPONENT 'LOW' OF STRUCTURE <ls_range_item> TO <lv_low>.
      FIELD-SYMBOLS <lv_high> TYPE any.
      ASSIGN COMPONENT 'HIGH' OF STRUCTURE <ls_range_item> TO <lv_high>.

      IF sy-tabix <> 1.
        result = |{ result } OR|.
      ENDIF.

      IF <lv_sign> = signs-excluding.
        result = |{ result } NOT|.
      ENDIF.

      result = |{ result } { me->mv_fieldname }|.

      CASE <lv_option>.
        WHEN options-equal OR
             options-not_equal OR
             options-greater_than OR
             options-greater_equal OR
             options-less_equal OR
             options-less_than.
          result = |{ result } { <lv_option> } { quote( <lv_low> ) }|.

        WHEN options-between.
          result = |{ result } BETWEEN { quote( <lv_low> ) } AND { quote( <lv_high> ) }|.

        WHEN options-not_between.
          result = |{ result } NOT BETWEEN { quote( <lv_low> ) } AND { quote( <lv_high> ) }|.

        WHEN options-contains_pattern.
          TRANSLATE <lv_low> USING '*%'.
          result = |{ result } LIKE { quote( <lv_low> ) }|.

        WHEN options-not_contains_pattern.
          TRANSLATE <lv_low> USING '*%'.
          result = |{ result } NOT LIKE { quote( <lv_low> ) }|.
      ENDCASE.
    ENDLOOP.

    result = |{ result } )|.

  ENDMETHOD.

  METHOD quote.
    out = |'{ replace( val  = val
                       sub  = `'`
                       with = `''`
                       occ  = 0 ) }'|.
  ENDMETHOD.
ENDCLASS.

* renamed: z2ui5_cl_util :: lcl_msp_mapper
CLASS kHGwlIiCDAqWuzmHSWUVKThwDidmDe DEFINITION
  FINAL CREATE PUBLIC.

  PUBLIC SECTION.
    CLASS-METHODS msg_map
      IMPORTING
        name          TYPE clike
        val           TYPE data
        is_msg        TYPE z2ui5_cl_util=>ty_s_msg
      RETURNING
        VALUE(result) TYPE z2ui5_cl_util=>ty_s_msg.

    CLASS-METHODS msg_get
      IMPORTING
        val           TYPE any
      RETURNING
        VALUE(result) TYPE z2ui5_cl_util=>ty_t_msg.

ENDCLASS.

CLASS kHGwlIiCDAqWuzmHSWUVKThwDidmDe IMPLEMENTATION.

  METHOD msg_get.

    DATA lv_kind TYPE string.
    lv_kind = z2ui5_cl_util=>rtti_get_type_kind( val ).
    CASE lv_kind.

      WHEN cl_abap_datadescr=>typekind_table.
        FIELD-SYMBOLS <tab> TYPE ANY TABLE.
        ASSIGN val TO <tab>.
        FIELD-SYMBOLS <row> TYPE ANY.
        LOOP AT <tab> ASSIGNING <row>.
          DATA lt_tab TYPE z2ui5_cl_util=>ty_t_msg.
          lt_tab = msg_get( <row> ).
          INSERT LINES OF lt_tab INTO TABLE result.
        ENDLOOP.

      WHEN cl_abap_datadescr=>typekind_struct1 OR cl_abap_datadescr=>typekind_struct2.

        IF val IS INITIAL.
          RETURN.
        ENDIF.

        DATA lt_attri TYPE abap_component_tab.
        lt_attri = z2ui5_cl_util=>rtti_get_t_attri_by_any( val ).

        DATA temp799 TYPE z2ui5_cl_util=>ty_s_msg.
        CLEAR temp799.
        DATA ls_result LIKE temp799.
        ls_result = temp799.
        DATA temp800 LIKE LINE OF lt_attri.
        DATA ls_attri LIKE REF TO temp800.
        LOOP AT lt_attri REFERENCE INTO ls_attri.
          DATA lv_name TYPE string.
          lv_name = |VAL-{ ls_attri->name }|.
          FIELD-SYMBOLS <comp> TYPE any.
          ASSIGN (lv_name) TO <comp>.

          IF ls_attri->name = 'ITEM'.
            lt_tab = msg_get( <comp> ).
            INSERT LINES OF lt_tab INTO TABLE result.
            RETURN.
          ELSE.
            ls_result = msg_map( name = ls_attri->name val = <comp> is_msg = ls_result ).
          ENDIF.

        ENDLOOP.
        IF ls_result-text IS INITIAL AND ls_result-id IS NOT INITIAL.
          MESSAGE ID ls_result-id TYPE 'I' NUMBER ls_result-no
                  WITH ls_result-v1 ls_result-v2 ls_result-v3 ls_result-v4
                  INTO ls_result-text.
        ENDIF.
        INSERT ls_result INTO TABLE result.

      WHEN cl_abap_datadescr=>typekind_oref.
        TRY.
            DATA temp801 TYPE REF TO cx_root.
            temp801 ?= val.
            DATA lx LIKE temp801.
            lx = temp801.
            CLEAR ls_result.
            ls_result-type = 'E'.
            ls_result-text = lx->get_text( ).
            DATA lt_attri_o TYPE abap_attrdescr_tab.
            lt_attri_o = z2ui5_cl_util=>rtti_get_t_attri_by_oref( val ).
            DATA temp802 LIKE LINE OF lt_attri_o.
            DATA ls_attri_o LIKE REF TO temp802.
            LOOP AT lt_attri_o REFERENCE INTO ls_attri_o
                 WHERE visibility = 'U'.
              lv_name = |VAL->{ ls_attri_o->name }|.
              ASSIGN (lv_name) TO <comp>.
              ls_result = msg_map( name = ls_attri_o->name val = <comp> is_msg = ls_result ).
            ENDLOOP.
            INSERT ls_result INTO TABLE result.
          CATCH cx_root.

            DATA obj TYPE REF TO object.
            obj = val.

            TRY.

                DATA lr_tab TYPE REF TO data.
                CREATE DATA lr_tab TYPE ('if_bali_log=>ty_item_table').
                FIELD-SYMBOLS <tab2> TYPE data.
                ASSIGN lr_tab->* TO <tab2>.

                CALL METHOD obj->(`IF_BALI_LOG~GET_ALL_ITEMS`)
                  RECEIVING
                    item_table = <tab2>.

                DATA lt_tab2 TYPE z2ui5_cl_util=>ty_t_msg.
                lt_tab2 = msg_get( <tab2> ).
                INSERT LINES OF lt_tab2 INTO TABLE result.

              CATCH cx_root.

                TRY.

                    CREATE DATA lr_tab TYPE ('BAPIRETTAB').
                    ASSIGN lr_tab->* TO <tab2>.

                    CALL METHOD obj->(`ZIF_LOGGER~EXPORT_TO_TABLE`)
                      RECEIVING
                        rt_bapiret = <tab2>.

                    lt_tab2 = msg_get( <tab2> ).
                    INSERT LINES OF lt_tab2 INTO TABLE result.

                    DATA lx2 TYPE REF TO cx_root.
                  CATCH cx_root INTO lx2.
                    lt_attri_o = z2ui5_cl_util=>rtti_get_t_attri_by_oref( val ).
                    LOOP AT lt_attri_o REFERENCE INTO ls_attri_o
                         WHERE visibility = 'U'.
                      lv_name = |OBJ->{ ls_attri_o->name }|.
                      ASSIGN (lv_name) TO <comp>.
                      ls_result = msg_map( name = ls_attri_o->name val = <comp> is_msg = ls_result ).
                    ENDLOOP.
                    INSERT ls_result INTO TABLE result.

                ENDTRY.
            ENDTRY.
        ENDTRY.

      WHEN OTHERS.

        IF z2ui5_cl_util=>rtti_check_clike( val ) IS NOT INITIAL.
          DATA temp803 TYPE z2ui5_cl_util=>ty_s_msg.
          CLEAR temp803.
          temp803-text = val.
          INSERT temp803
                 INTO TABLE result.
        ENDIF.
    ENDCASE.

  ENDMETHOD.

  METHOD msg_map.

    result = is_msg.
    CASE name.
      WHEN 'ID' OR 'MSGID'.
        result-id = val.
      WHEN 'NO' OR 'NUMBER' OR 'MSGNO'.
        result-no = val.
      WHEN 'MESSAGE' OR 'TEXT'.
        result-text = val.
      WHEN 'TYPE' OR 'MSGTY'.
        result-type = val.
      WHEN 'MESSAGE_V1' OR 'MSGV1' OR 'V1'.
        result-v1 = val.
      WHEN 'MESSAGE_V2' OR 'MSGV2' OR 'V2'.
        result-v2 = val.
      WHEN 'MESSAGE_V3' OR 'MSGV3' OR 'V3'.
        result-v3 = val.
      WHEN 'MESSAGE_V4' OR 'MSGV4' OR 'V4'.
        result-v4 = val.
      WHEN 'TIME_STMP'.
        result-timestampl = val.
    ENDCASE.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_util IMPLEMENTATION.
  METHOD boolean_abap_2_json.

    IF boolean_check_by_data( val ) IS NOT INITIAL.
      DATA temp804 TYPE string.
      IF val = abap_true.
        temp804 = `true`.
      ELSE.
        temp804 = `false`.
      ENDIF.
      result = temp804.
    ELSE.
      result = val.
    ENDIF.

  ENDMETHOD.

  METHOD boolean_check_by_data.

    TRY.
        DATA lv_type_name TYPE string.
        lv_type_name = rtti_get_type_name( val ).
        result = boolean_check_by_name( lv_type_name ).
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD boolean_check_by_name.

    CASE val.
      WHEN 'ABAP_BOOL'
          OR 'XSDBOOLEAN'
          OR 'FLAG'
          OR 'XFLAG'
          OR 'XFELD'
          OR 'ABAP_BOOLEAN'
          OR 'WDY_BOOLEAN'
          OR 'BOOLE_D'
          OR 'OS_BOOLEAN'.
        result = abap_true.
    ENDCASE.

  ENDMETHOD.

  METHOD check_bound_a_not_inital.

    IF val IS NOT BOUND.
      result = abap_false.
      RETURN.
    ENDIF.
    DATA temp5 TYPE xsdboolean.
    temp5 = boolc( check_unassign_inital( val ) = abap_false ).
    result = temp5.

  ENDMETHOD.

  METHOD check_unassign_inital.

    IF val IS INITIAL.
      result = abap_true.
      RETURN.
    ENDIF.

    FIELD-SYMBOLS <any> TYPE data.
    ASSIGN val->* TO <any>.

    DATA temp6 TYPE xsdboolean.
    temp6 = boolc( <any> IS INITIAL ).
    result = temp6.

  ENDMETHOD.

  METHOD conv_copy_ref_data.

    FIELD-SYMBOLS <from>   TYPE data.
    FIELD-SYMBOLS <result> TYPE data.

    IF rtti_check_ref_data( from ) IS NOT INITIAL.
      ASSIGN from->* TO <from>.
    ELSE.
      ASSIGN from TO <from>.
    ENDIF.
    CREATE DATA result LIKE <from>.
    ASSIGN result->* TO <result>.

    <result> = <from>.

  ENDMETHOD.

  METHOD conv_get_as_data_ref.

    GET REFERENCE OF val INTO result.

  ENDMETHOD.

  METHOD c_trim.

    DATA temp805 TYPE string.
    temp805 = val.
    result = shift_left( shift_right( temp805 ) ).
    result = shift_right( val = result
                          sub = cl_abap_char_utilities=>horizontal_tab ).
    result = shift_left( val = result
                         sub = cl_abap_char_utilities=>horizontal_tab ).
    result = shift_left( shift_right( result ) ).

  ENDMETHOD.

  METHOD c_trim_lower.

    DATA temp806 TYPE string.
    temp806 = val.
    result = to_lower( c_trim( temp806 ) ).

  ENDMETHOD.

  METHOD c_trim_upper.

    DATA temp807 TYPE string.
    temp807 = val.
    result = to_upper( c_trim( temp807 ) ).

  ENDMETHOD.

  METHOD filter_itab.

    DATA ref TYPE REF TO data.

    LOOP AT val REFERENCE INTO ref.

      DATA ls_filter LIKE LINE OF filter.
      LOOP AT filter INTO ls_filter.

        FIELD-SYMBOLS <field> TYPE any.
        ASSIGN ref->(ls_filter-name) TO <field>.
        IF sy-subrc <> 0.
          CONTINUE.
        ENDIF.
        IF <field> NOT IN ls_filter-t_range.
          DELETE val.
          EXIT.
        ENDIF.

      ENDLOOP.

    ENDLOOP.

  ENDMETHOD.

  METHOD filter_get_multi_by_data.

    DATA temp808 TYPE abap_component_tab.
    temp808 = rtti_get_t_attri_by_any( val ).
    DATA temp28 LIKE LINE OF temp808.
    DATA lr_comp LIKE REF TO temp28.
    LOOP AT temp808 REFERENCE INTO lr_comp.
      DATA temp809 TYPE z2ui5_cl_util=>ty_s_filter_multi.
      CLEAR temp809.
      temp809-name = lr_comp->name.
      INSERT temp809 INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD filter_get_range_by_token.

    DATA lv_length TYPE i.
    lv_length = strlen( value ) - 1.
    CASE value(1).

      WHEN `=`.
        CLEAR result.
        result-sign = `I`.
        result-option = `EQ`.
        result-low = value+1.
      WHEN `<`.
        IF value+1(1) = `=`.
          CLEAR result.
          result-sign = `I`.
          result-option = `LE`.
          result-low = value+2.
        ELSE.
          CLEAR result.
          result-sign = `I`.
          result-option = `LT`.
          result-low = value+1.
        ENDIF.
      WHEN `>`.
        IF value+1(1) = `=`.
          CLEAR result.
          result-sign = `I`.
          result-option = `GE`.
          result-low = value+2.
        ELSE.
          CLEAR result.
          result-sign = `I`.
          result-option = `GT`.
          result-low = value+1.
        ENDIF.

      WHEN `*`.
        IF value+lv_length(1) = `*`.
          SHIFT value RIGHT DELETING TRAILING `*`.
          SHIFT value LEFT DELETING LEADING `*`.
          CLEAR result.
          result-sign = `I`.
          result-option = `CP`.
          result-low = value.
        ENDIF.

      WHEN OTHERS.
        IF value CP `...`.
          SPLIT value AT `...` INTO result-low result-high.
          result-option = `BT`.
        ELSE.
          CLEAR result.
          result-sign = `I`.
          result-option = `EQ`.
          result-low = value.
        ENDIF.

    ENDCASE.

  ENDMETHOD.

  METHOD filter_update_tokens.

    result = val.
    FIELD-SYMBOLS <temp810> TYPE z2ui5_cl_util=>ty_s_filter_multi.
    READ TABLE result WITH KEY name = name ASSIGNING <temp810>.
IF sy-subrc <> 0.
  ASSERT 1 = 0.
ENDIF.
DATA lr_filter LIKE REF TO <temp810>.
GET REFERENCE OF <temp810> INTO lr_filter.
    DATA ls_token LIKE LINE OF lr_filter->t_token_removed.
    LOOP AT lr_filter->t_token_removed INTO ls_token.
      DELETE lr_filter->t_token WHERE key = ls_token-key.
    ENDLOOP.

    LOOP AT lr_filter->t_token_added INTO ls_token.
      DATA temp811 TYPE z2ui5_cl_util=>ty_s_token.
      CLEAR temp811.
      temp811-key = ls_token-key.
      temp811-text = ls_token-text.
      temp811-visible = abap_true.
      temp811-editable = abap_true.
      INSERT temp811 INTO TABLE lr_filter->t_token.
    ENDLOOP.

    CLEAR lr_filter->t_token_removed.
    CLEAR lr_filter->t_token_added.

    " TODO: variable is assigned but never used (ABAP cleaner)
    DATA lt_token TYPE z2ui5_cl_util=>ty_t_token.
    DATA temp29 LIKE LINE OF result.
    DATA temp30 LIKE sy-tabix.
    temp30 = sy-tabix.
    READ TABLE result WITH KEY name = name INTO temp29.
    sy-tabix = temp30.
    IF sy-subrc <> 0.
      ASSERT 1 = 0.
    ENDIF.
    lt_token = temp29-t_token.
    DATA lt_range TYPE z2ui5_cl_util=>ty_t_range.
    DATA temp31 LIKE LINE OF result.
    DATA temp32 LIKE sy-tabix.
    temp32 = sy-tabix.
    READ TABLE result WITH KEY name = name INTO temp31.
    sy-tabix = temp32.
    IF sy-subrc <> 0.
      ASSERT 1 = 0.
    ENDIF.
    lt_range = z2ui5_cl_util=>filter_get_range_t_by_token_t( temp31-t_token ).
    lr_filter->t_range = lt_range.

  ENDMETHOD.

  METHOD filter_get_range_t_by_token_t.

    DATA ls_token LIKE LINE OF val.
    LOOP AT val INTO ls_token.
      INSERT filter_get_range_by_token( ls_token-text ) INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD filter_get_token_range_mapping.

    DATA temp812 TYPE z2ui5_cl_util=>ty_t_name_value.
    CLEAR temp812.
    DATA temp813 LIKE LINE OF temp812.
    temp813-n = `EQ`.
    temp813-v = `={LOW}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `LT`.
    temp813-v = `<{LOW}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `LE`.
    temp813-v = `<={LOW}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `GT`.
    temp813-v = `>{LOW}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `GE`.
    temp813-v = `>={LOW}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `CP`.
    temp813-v = `*{LOW}*`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `BT`.
    temp813-v = `{LOW}...{HIGH}`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `NE`.
    temp813-v = `!(={LOW})`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `NE`.
    temp813-v = `!(<leer>)`.
    INSERT temp813 INTO TABLE temp812.
    temp813-n = `<leer>`.
    temp813-v = `<leer>`.
    INSERT temp813 INTO TABLE temp812.
    result = temp812.

  ENDMETHOD.

  METHOD filter_get_token_t_by_range_t.

    DATA lt_mapping TYPE z2ui5_cl_util=>ty_t_name_value.
    lt_mapping = filter_get_token_range_mapping( ).

    DATA temp814 TYPE ty_t_range.
    CLEAR temp814.
    DATA lt_tab LIKE temp814.
    lt_tab = temp814.

    itab_corresponding( EXPORTING val = val
                        CHANGING  tab = lt_tab
    ).

    DATA temp815 LIKE LINE OF lt_tab.
    DATA lr_row LIKE REF TO temp815.
    LOOP AT lt_tab REFERENCE INTO lr_row.

      DATA lv_value TYPE z2ui5_cl_util=>ty_s_name_value-v.
      DATA temp33 LIKE LINE OF lt_mapping.
      DATA temp34 LIKE sy-tabix.
      temp34 = sy-tabix.
      READ TABLE lt_mapping WITH KEY n = lr_row->option INTO temp33.
      sy-tabix = temp34.
      IF sy-subrc <> 0.
        ASSERT 1 = 0.
      ENDIF.
      lv_value = temp33-v.
      REPLACE `{LOW}`  IN lv_value WITH lr_row->low.
      REPLACE `{HIGH}` IN lv_value WITH lr_row->high.

      DATA temp816 TYPE z2ui5_cl_util=>ty_s_token.
      CLEAR temp816.
      temp816-key = lv_value.
      temp816-text = lv_value.
      temp816-visible = abap_true.
      temp816-editable = abap_true.
      INSERT temp816 INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD itab_filter_by_val.

    FIELD-SYMBOLS <row> TYPE any.

    LOOP AT tab ASSIGNING <row>.
      DATA lv_row TYPE string.
      lv_row = ``.
      DATA lv_index TYPE i.
      lv_index = 1.
      DO.
        FIELD-SYMBOLS <field> TYPE any.
        ASSIGN COMPONENT lv_index OF STRUCTURE <row> TO <field>.
        IF sy-subrc <> 0.
          EXIT.
        ENDIF.
        lv_row = lv_row && <field>.
        lv_index = lv_index + 1.
      ENDDO.

      IF lv_row NS val.
        DELETE tab.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.

  METHOD itab_get_csv_by_itab.

    FIELD-SYMBOLS <tab> TYPE table.

    ASSIGN val TO <tab>.
    DATA temp817 TYPE REF TO cl_abap_tabledescr.
    temp817 ?= cl_abap_typedescr=>describe_by_data( <tab> ).
    DATA tab LIKE temp817.
    tab = temp817.

    DATA temp818 TYPE REF TO cl_abap_structdescr.
    temp818 ?= tab->get_table_line_type( ).
    DATA struc LIKE temp818.
    struc = temp818.

    DATA temp819 TYPE abap_component_tab.
    temp819 = struc->get_components( ).
    DATA temp35 LIKE LINE OF temp819.
    DATA lr_comp LIKE REF TO temp35.
    LOOP AT temp819 REFERENCE INTO lr_comp.
      result = |{ result }{ lr_comp->name };|.
    ENDLOOP.

    result = result && cl_abap_char_utilities=>cr_lf.

    DATA lr_row TYPE REF TO data.
    LOOP AT <tab> REFERENCE INTO lr_row.

      DATA lv_index TYPE i.
      lv_index = 1.
      DO.
        FIELD-SYMBOLS <row> TYPE data.
        ASSIGN lr_row->* TO <row>.
        FIELD-SYMBOLS <field> TYPE any.
        ASSIGN COMPONENT lv_index OF STRUCTURE <row> TO <field>.
        IF sy-subrc <> 0.
          EXIT.
        ENDIF.
        lv_index = lv_index + 1.
        result = |{ result }{ <field> };|.
      ENDDO.
      result = result && cl_abap_char_utilities=>cr_lf.
    ENDLOOP.

  ENDMETHOD.

  METHOD itab_get_itab_by_csv.

    DATA lt_comp TYPE cl_abap_structdescr=>component_table.
    FIELD-SYMBOLS <tab> TYPE STANDARD TABLE.
    DATA lr_row TYPE REF TO data.

    TYPES temp9 TYPE STANDARD TABLE OF string WITH DEFAULT KEY.
DATA lt_rows TYPE temp9.
    SPLIT val AT cl_abap_char_utilities=>newline INTO TABLE lt_rows.
    TYPES temp10 TYPE STANDARD TABLE OF string WITH DEFAULT KEY.
DATA lt_cols TYPE temp10.
    DATA temp36 LIKE LINE OF lt_rows.
    DATA temp37 LIKE sy-tabix.
    temp37 = sy-tabix.
    READ TABLE lt_rows INDEX 1 INTO temp36.
    sy-tabix = temp37.
    IF sy-subrc <> 0.
      ASSERT 1 = 0.
    ENDIF.
    SPLIT temp36 AT ';' INTO TABLE lt_cols.

    DATA temp820 LIKE LINE OF lt_cols.
    DATA lr_col LIKE REF TO temp820.
    LOOP AT lt_cols REFERENCE INTO lr_col.

      DATA lv_name TYPE string.
      lv_name = c_trim_upper( lr_col->* ).
      REPLACE ` ` IN lv_name WITH `_`.

      DATA temp821 TYPE abap_componentdescr.
      CLEAR temp821.
      temp821-name = lv_name.
      temp821-type = cl_abap_elemdescr=>get_c( 40 ).
      INSERT temp821 INTO TABLE lt_comp.
    ENDLOOP.

    DATA struc TYPE REF TO cl_abap_structdescr.
    struc = cl_abap_structdescr=>get( lt_comp ).
    DATA temp822 TYPE REF TO cl_abap_datadescr.
    temp822 ?= struc.
    DATA data LIKE temp822.
    data = temp822.
    DATA o_table_desc TYPE REF TO cl_abap_tabledescr.
    o_table_desc = cl_abap_tabledescr=>create( p_line_type  = data
                                                     p_table_kind = cl_abap_tabledescr=>tablekind_std
                                                     p_unique     = abap_false ).

    CREATE DATA result TYPE HANDLE o_table_desc.
    ASSIGN result->* TO <tab>.
    DELETE lt_rows WHERE table_line IS INITIAL.

    DATA temp823 LIKE LINE OF lt_rows.
    DATA lr_rows LIKE REF TO temp823.
    LOOP AT lt_rows REFERENCE INTO lr_rows FROM 2.

      SPLIT lr_rows->* AT ';' INTO TABLE lt_cols.
      CREATE DATA lr_row TYPE HANDLE struc.

      LOOP AT lt_cols REFERENCE INTO lr_col.
        FIELD-SYMBOLS <row> TYPE data.
        ASSIGN lr_row->* TO <row>.
        FIELD-SYMBOLS <field> TYPE any.
        ASSIGN COMPONENT sy-tabix OF STRUCTURE <row> TO <field>.
        ASSERT sy-subrc = 0.
        <field> = lr_col->*.
      ENDLOOP.

      INSERT <row> INTO TABLE <tab>.
    ENDLOOP.

  ENDMETHOD.

  METHOD json_parse.
    TRY.

        z2ui5_cl_ajson=>parse( val )->to_abap( EXPORTING iv_corresponding = abap_true
                                               IMPORTING ev_container     = data ).

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x IS NOT BOUND.
    ENDTRY.
  ENDMETHOD.

  METHOD json_stringify.
    TRY.

        DATA temp824 TYPE REF TO z2ui5_if_ajson.
        temp824 ?= z2ui5_cl_ajson=>create_empty( ).
        DATA li_ajson LIKE temp824.
        li_ajson = temp824.
        result = li_ajson->set( iv_path = `/`
                                iv_val  = any )->stringify( ).

        DATA x TYPE REF TO cx_root.
      CATCH cx_root INTO x.
        ASSERT x IS NOT BOUND.
    ENDTRY.
  ENDMETHOD.

  METHOD rtti_check_class_exists.

    TRY.
        cl_abap_classdescr=>describe_by_name( EXPORTING  p_name         = val
                                              EXCEPTIONS type_not_found = 1 ).
        IF sy-subrc = 0.
          result = abap_true.
        ENDIF.

      CATCH cx_root.
        " cx_sy_rtti_syntax_error
    ENDTRY.

  ENDMETHOD.

  METHOD rtti_check_ref_data.

    TRY.
        DATA lo_typdescr TYPE REF TO cl_abap_typedescr.
        lo_typdescr = cl_abap_typedescr=>describe_by_data( val ).
        DATA temp825 TYPE REF TO cl_abap_refdescr.
        temp825 ?= lo_typdescr.
        DATA lo_ref LIKE temp825.
        lo_ref = temp825.
        result = abap_true.
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD rtti_check_type_kind_dref.

    DATA lv_type_kind TYPE abap_typekind.
    lv_type_kind = cl_abap_datadescr=>get_data_type_kind( val ).
    DATA temp7 TYPE xsdboolean.
    temp7 = boolc( lv_type_kind = cl_abap_typedescr=>typekind_dref ).
    result = temp7.

  ENDMETHOD.

  METHOD rtti_get_classname_by_ref.

    DATA lv_classname TYPE abap_abstypename.
    lv_classname = cl_abap_classdescr=>get_class_name( in ).
    result = substring_after( val = lv_classname
                              sub = `\CLASS=` ).

  ENDMETHOD.

  METHOD rtti_get_intfname_by_ref.

    DATA rtti TYPE REF TO cl_abap_typedescr.
    rtti = cl_abap_typedescr=>describe_by_data( in  ).
    DATA temp826 TYPE REF TO cl_abap_refdescr.
    temp826 ?= rtti.
    DATA ref LIKE temp826.
    ref = temp826.
    DATA name TYPE abap_abstypename.
    name = ref->get_referenced_type( )->absolute_name.
    result = substring_after( val = name
                              sub = `\INTERFACE=` ).

  ENDMETHOD.

  METHOD rtti_get_type_kind.

    result = cl_abap_datadescr=>get_data_type_kind( val ).

  ENDMETHOD.

  METHOD rtti_get_type_name.
    TRY.

        DATA lo_descr TYPE REF TO cl_abap_typedescr.
        lo_descr = cl_abap_elemdescr=>describe_by_data( val ).
        DATA temp827 TYPE REF TO cl_abap_elemdescr.
        temp827 ?= lo_descr.
        DATA lo_ele LIKE temp827.
        lo_ele = temp827.
        result = lo_ele->get_relative_name( ).

      CATCH cx_root.
    ENDTRY.
  ENDMETHOD.

  METHOD rtti_get_t_attri_by_include.

    DATA temp828 TYPE REF TO cl_abap_structdescr.
    temp828 ?= cl_abap_typedescr=>describe_by_name( type->absolute_name ).
    DATA sdescr LIKE temp828.
    sdescr = temp828.
    DATA comps TYPE abap_component_tab.
    comps = sdescr->get_components( ).

    DATA temp829 LIKE LINE OF comps.
    DATA lr_comp LIKE REF TO temp829.
    LOOP AT comps REFERENCE INTO lr_comp.

      IF lr_comp->as_include = abap_true.

        DATA incl_comps TYPE abap_component_tab.
        incl_comps = rtti_get_t_attri_by_include( lr_comp->type ).

        DATA temp830 LIKE LINE OF incl_comps.
        DATA lr_incl_comp LIKE REF TO temp830.
        LOOP AT incl_comps REFERENCE INTO lr_incl_comp.
          lr_incl_comp->name = lr_incl_comp->name.
          APPEND lr_incl_comp->* TO result.
        ENDLOOP.

      ELSE.

        lr_comp->name = lr_comp->name.
        APPEND lr_comp->* TO result.

      ENDIF.

    ENDLOOP.

  ENDMETHOD.

  METHOD rtti_get_t_attri_by_oref.

    DATA lo_obj_ref TYPE REF TO cl_abap_typedescr.
    lo_obj_ref = cl_abap_objectdescr=>describe_by_object_ref( val ).
    DATA temp831 TYPE REF TO cl_abap_classdescr.
    temp831 ?= lo_obj_ref.
    result = temp831->attributes.

  ENDMETHOD.

  METHOD rtti_get_t_attri_by_any.

    TRY.
        DATA lo_type TYPE REF TO cl_abap_typedescr.
        lo_type = cl_abap_typedescr=>describe_by_data( val ).
        DATA temp832 TYPE REF TO cl_abap_structdescr.
        temp832 ?= lo_type.
        DATA lo_struct LIKE temp832.
        lo_struct = temp832.
      CATCH cx_root.
        TRY.
            DATA temp833 TYPE REF TO cl_abap_tabledescr.
            temp833 ?= lo_type.
            DATA lo_tab LIKE temp833.
            lo_tab = temp833.
            DATA temp834 TYPE REF TO cl_abap_structdescr.
            temp834 ?= lo_tab->get_table_line_type( ).
            lo_struct = temp834.
          CATCH cx_root.
            TRY.
                DATA lo_ref TYPE REF TO cl_abap_typedescr.
                lo_ref = cl_abap_typedescr=>describe_by_data_ref( val ).
                DATA temp835 TYPE REF TO cl_abap_structdescr.
                temp835 ?= lo_ref.
                lo_struct = temp835.
              CATCH cx_root.
                DATA temp836 TYPE REF TO cl_abap_tabledescr.
                temp836 ?= lo_ref.
                lo_tab = temp836.
                DATA temp837 TYPE REF TO cl_abap_structdescr.
                temp837 ?= lo_tab->get_table_line_type( ).
                lo_struct = temp837.
            ENDTRY.
        ENDTRY.
    ENDTRY.

    result = lo_struct->get_components( ).

    DATA temp838 LIKE LINE OF result.
    DATA lr_comp LIKE REF TO temp838.
    LOOP AT result REFERENCE INTO lr_comp
         WHERE as_include = abap_true.

      DATA lt_attri TYPE abap_component_tab.
      lt_attri = rtti_get_t_attri_by_include( lr_comp->type ).

      DELETE result.
      INSERT LINES OF lt_attri INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD rtti_get_t_ddic_fixed_values.

    IF rollname IS INITIAL.
      RETURN.
    ENDIF.

    TRY.

        DATA temp839 TYPE string.
        temp839 = rollname.
        DATA typedescr TYPE REF TO cl_abap_typedescr.
        cl_abap_typedescr=>describe_by_name( EXPORTING  p_name         = temp839
                                             RECEIVING  p_descr_ref    = typedescr
                                             EXCEPTIONS type_not_found = 1
                                                        OTHERS         = 2 ).
        IF sy-subrc <> 0.
          RETURN.
        ENDIF.

        DATA temp840 TYPE REF TO cl_abap_elemdescr.
        temp840 ?= typedescr.
        DATA elemdescr LIKE temp840.
        elemdescr = temp840.

        result = rtti_get_t_fixvalues( elemdescr = elemdescr
                                       langu     = langu ).

      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD rtti_tab_get_relative_name.

    FIELD-SYMBOLS <table> TYPE any.

    TRY.
        DATA typedesc TYPE REF TO cl_abap_typedescr.
        typedesc = cl_abap_typedescr=>describe_by_data( table ).

        CASE typedesc->kind.

          WHEN cl_abap_typedescr=>kind_table.
            DATA temp841 TYPE REF TO cl_abap_tabledescr.
            temp841 ?= typedesc.
            DATA tabledesc LIKE temp841.
            tabledesc = temp841.
            DATA temp842 TYPE REF TO cl_abap_structdescr.
            temp842 ?= tabledesc->get_table_line_type( ).
            DATA structdesc LIKE temp842.
            structdesc = temp842.
            result = structdesc->get_relative_name( ).
            RETURN.

          WHEN typedesc->kind_ref.

            ASSIGN table->* TO <table>.
            result = rtti_tab_get_relative_name( <table> ).

        ENDCASE.
      CATCH cx_root.
    ENDTRY.

  ENDMETHOD.

  METHOD source_get_file_types.

    DATA lv_types TYPE string.
    lv_types = |abap, abc, actionscript, ada, apache_conf, applescript, asciidoc, assembly_x86, autohotkey, batchfile, bro, c9search, c_cpp, cirru, clojure, cobol, coffee, coldfusion, csharp, css, curly, d, dart, diff, django, dockerfile, | &&
|dot, drools, eiffel, yaml, ejs, elixir, elm, erlang, forth, fortran, ftl, gcode, gherkin, gitignore, glsl, gobstones, golang, groovy, haml, handlebars, haskell, haskell_cabal, haxe, hjson, html, html_elixir, html_ruby, ini, io, jack, jade, java, ja| &&
      |vascri| &&
|pt, json, jsoniq, jsp, jsx, julia, kotlin, latex, lean, less, liquid, lisp, live_script, livescript, logiql, lsl, lua, luapage, lucene, makefile, markdown, mask, matlab, mavens_mate_log, maze, mel, mips_assembler, mipsassembler, mushcode, mysql, ni| &&
|x, nsis, objectivec, ocaml, pascal, perl, pgsql, php, plain_text, powershell, praat, prolog, properties, protobuf, python, r, razor, rdoc, rhtml, rst, ruby, rust, sass, scad, scala, scheme, scss, sh, sjs, smarty, snippets, soy_template, space, sql,| &&
      | sqlserver, stylus, svg, swift, swig, tcl, tex, text, textile, toml, tsx, twig, typescript, vala, vbscript, velocity, verilog, vhdl, wollok, xml, xquery, terraform, slim, redshift, red, puppet, php_laravel_blade, mixal, jssm, fsharp, edifact,| &&
      | csp, cssound_score, cssound_orchestra, cssound_document|.
    SPLIT lv_types AT ',' INTO TABLE result.

  ENDMETHOD.

  METHOD source_get_method2.

    DATA lt_source TYPE string_table.
    lt_source = source_get_method( iv_classname  = iv_classname
                                         iv_methodname = iv_methodname ).

    result = source_method_to_file( lt_source ).

  ENDMETHOD.

  METHOD source_method_to_file.

    DATA lv_source LIKE LINE OF it_source.
    LOOP AT it_source INTO lv_source.
      TRY.
          result = result && lv_source+1 && cl_abap_char_utilities=>newline.
        CATCH cx_root.
      ENDTRY.
    ENDLOOP.

  ENDMETHOD.

  METHOD filter_get_sql_by_sql_string.

    DATA temp843 TYPE string.
    temp843 = val.
    DATA lv_sql LIKE temp843.
    lv_sql = temp843.
    REPLACE ALL OCCURRENCES OF ` ` IN lv_sql WITH ``.
    lv_sql = to_upper( lv_sql ).
    DATA lv_dummy TYPE string.
    DATA lv_tab TYPE string.
    SPLIT lv_sql AT 'SELECTFROM' INTO lv_dummy lv_tab.
    SPLIT lv_tab AT `FIELDS` INTO lv_tab lv_dummy.

    result-tabname = lv_tab.

  ENDMETHOD.

  METHOD time_get_date_by_stampl.
    " TODO: variable is assigned but never used (ABAP cleaner)
    DATA lv_dummy TYPE t.
    CONVERT TIME STAMP val TIME ZONE sy-zonlo INTO DATE result TIME lv_dummy.
  ENDMETHOD.

  METHOD time_get_timestampl.
    GET TIME STAMP FIELD result.
  ENDMETHOD.

  METHOD time_get_time_by_stampl.
    " TODO: variable is assigned but never used (ABAP cleaner)
    DATA lv_dummy TYPE d.
    CONVERT TIME STAMP val TIME ZONE sy-zonlo INTO DATE lv_dummy TIME result.
  ENDMETHOD.

  METHOD time_substract_seconds.

    result = cl_abap_tstmp=>subtractsecs( tstmp = time
                                          secs  = seconds ).
  ENDMETHOD.

  METHOD unassign_data.

    FIELD-SYMBOLS <unassign> TYPE any.

    ASSIGN val->* TO <unassign>.
    result = <unassign>.

  ENDMETHOD.

  METHOD unassign_object.

    FIELD-SYMBOLS <unassign> TYPE any.

    ASSIGN val->* TO <unassign>.
    result = <unassign>.

  ENDMETHOD.

  METHOD url_param_create_url.

    DATA ls_param LIKE LINE OF t_params.
    LOOP AT t_params INTO ls_param.
      result = |{ result }{ ls_param-n }={ ls_param-v }&|.
    ENDLOOP.
    result = shift_right( val = result
                          sub = `&` ).

  ENDMETHOD.

  METHOD url_param_get.

    DATA lt_params TYPE z2ui5_cl_util=>ty_t_name_value.
    lt_params = url_param_get_tab( url ).
    DATA lv_val TYPE string.
    lv_val = c_trim_lower( val ).
    DATA temp844 TYPE string.
    CLEAR temp844.
    DATA temp845 TYPE z2ui5_cl_util=>ty_s_name_value.
    READ TABLE lt_params INTO temp845 WITH KEY n = lv_val.
    IF sy-subrc = 0.
      temp844 = temp845-v.
    ENDIF.
    result = temp844.

  ENDMETHOD.

  METHOD url_param_get_tab.

    DATA lv_search TYPE string.
    lv_search = replace( val  = i_val
                               sub  = `%3D`
                               with = '='
                               occ  = 0 ).

    lv_search = replace( val  = lv_search
                         sub  = `%26`
                         with = '&'
                         occ  = 0 ).

    lv_search = shift_left( val = lv_search
                            sub = `?` ).
*    lv_search = c_trim_lower( lv_search ).

    DATA lv_search2 TYPE string.
    lv_search2 = substring_after( val = lv_search
                                        sub = `&sap-startup-params=` ).
    DATA temp846 TYPE string.
    IF lv_search2 IS NOT INITIAL.
      temp846 = lv_search2.
    ELSE.
      temp846 = lv_search.
    ENDIF.
    lv_search = temp846.

    lv_search2 = substring_after( val = c_trim_lower( lv_search )
                                  sub = `?` ).
    IF lv_search2 IS NOT INITIAL.
      lv_search = lv_search2.
    ENDIF.

    TYPES temp11 TYPE STANDARD TABLE OF string WITH DEFAULT KEY.
DATA lt_param TYPE temp11.
    SPLIT lv_search AT `&` INTO TABLE lt_param.

    DATA temp847 LIKE LINE OF lt_param.
    DATA lr_param LIKE REF TO temp847.
    LOOP AT lt_param REFERENCE INTO lr_param.
      DATA lv_name TYPE string.
      DATA lv_value TYPE string.
      SPLIT lr_param->* AT `=` INTO lv_name lv_value.
*      INSERT VALUE #( n = c_trim_lower( lv_name )
*                      v = c_trim_lower( lv_value ) ) INTO TABLE rt_params.
      DATA temp848 TYPE z2ui5_cl_util=>ty_s_name_value.
      CLEAR temp848.
      temp848-n = lv_name.
      temp848-v = lv_value.
      INSERT temp848 INTO TABLE rt_params.
    ENDLOOP.

  ENDMETHOD.

  METHOD url_param_set.

    DATA lt_params TYPE z2ui5_cl_util=>ty_t_name_value.
    lt_params = url_param_get_tab( url ).
    DATA lv_n TYPE string.
    lv_n = c_trim_lower( name ).

    DATA temp849 LIKE LINE OF lt_params.
    DATA lr_params LIKE REF TO temp849.
    LOOP AT lt_params REFERENCE INTO lr_params
         WHERE n = lv_n.
      lr_params->v = c_trim_lower( value ).
    ENDLOOP.
    IF sy-subrc <> 0.
      DATA temp850 TYPE z2ui5_cl_util=>ty_s_name_value.
      CLEAR temp850.
      temp850-n = lv_n.
      temp850-v = c_trim_lower( value ).
      INSERT temp850 INTO TABLE lt_params.
    ENDIF.

    result = url_param_create_url( lt_params ).

  ENDMETHOD.

  METHOD context_get_user_tech.
    result = sy-uname.
  ENDMETHOD.

  METHOD xml_parse.

    CALL TRANSFORMATION id
         SOURCE XML xml
         RESULT data = any.

  ENDMETHOD.

  METHOD xml_srtti_parse.

    DATA srtti TYPE REF TO object.
    CALL TRANSFORMATION id SOURCE XML rtti_data RESULT srtti = srtti.

    DATA rtti_type TYPE REF TO cl_abap_typedescr.
    CALL METHOD srtti->('GET_RTTI')
      RECEIVING
        rtti = rtti_type.

    DATA lo_datadescr TYPE REF TO cl_abap_datadescr.
    lo_datadescr ?= rtti_type.

    CREATE DATA result TYPE HANDLE lo_datadescr.
    FIELD-SYMBOLS <variable> TYPE data.
    ASSIGN result->* TO <variable>.
    CALL TRANSFORMATION id SOURCE XML rtti_data RESULT dobj = <variable>.

  ENDMETHOD.

  METHOD xml_srtti_stringify.

    IF rtti_check_class_exists( 'ZCL_SRTTI_TYPEDESCR' ) = abap_true.

      DATA srtti TYPE REF TO object.
      DATA lv_classname TYPE string.
      lv_classname = `ZCL_SRTTI_TYPEDESCR`.
      CALL METHOD (lv_classname)=>('CREATE_BY_DATA_OBJECT')
        EXPORTING
          data_object = data
        RECEIVING
          srtti       = srtti.

      CALL TRANSFORMATION id SOURCE srtti = srtti dobj = data RESULT XML result.

    ELSE.

      TRY.
          CALL METHOD z2ui5_cl_srt_typedescr=>('CREATE_BY_DATA_OBJECT')
            EXPORTING
              data_object = data
            RECEIVING
              srtti       = srtti.

          CALL TRANSFORMATION id SOURCE srtti = srtti dobj = data RESULT XML result.

        CATCH cx_root.

          DATA lv_text TYPE string.
          lv_text = `UNSUPPORTED_FEATURE - Please install the open-source project S-RTTI by sandraros and try again: https://github.com/sandraros/S-RTTI`.
          RAISE EXCEPTION TYPE z2ui5_cx_util_error
            EXPORTING
              val = lv_text.

      ENDTRY.

    ENDIF.

  ENDMETHOD.

  METHOD xml_stringify.

    CALL TRANSFORMATION id
         SOURCE data = any
         RESULT XML result
         OPTIONS data_refs = `heap-or-create`.

  ENDMETHOD.

  METHOD x_check_raise.

    IF when = abap_true.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = v.
    ENDIF.

  ENDMETHOD.

  METHOD x_get_last_t100.

    DATA x LIKE val.
    x = val.
    DO.

      IF x->previous IS BOUND.
        x = x->previous.
        CONTINUE.
      ENDIF.

      EXIT.
    ENDDO.

    result = x->get_text( ).

  ENDMETHOD.

  METHOD x_raise.

    RAISE EXCEPTION TYPE z2ui5_cx_util_error
      EXPORTING
        val = v.

  ENDMETHOD.
  METHOD rtti_get_t_attri_by_table_name.

    IF table_name IS INITIAL.
      RAISE EXCEPTION TYPE z2ui5_cx_util_error
        EXPORTING
          val = 'TABLE_NAME_INITIAL_ERROR'.
    ENDIF.

    TRY.
        DATA lo_obj TYPE REF TO cl_abap_typedescr.
        cl_abap_structdescr=>describe_by_name( EXPORTING  p_name         = table_name
                                               RECEIVING  p_descr_ref    = lo_obj
                                               EXCEPTIONS type_not_found = 1
                                                          OTHERS         = 2
            ).

        IF sy-subrc <> 0.
          RAISE EXCEPTION TYPE z2ui5_cx_util_error
            EXPORTING
              val = |TABLE_NOT_FOUD_NAME___{ table_name }|.
        ENDIF.
        DATA temp851 TYPE REF TO cl_abap_structdescr.
        temp851 ?= lo_obj.
        DATA lo_struct LIKE temp851.
        lo_struct = temp851.

      CATCH cx_root.

        TRY.
            cl_abap_structdescr=>describe_by_name( EXPORTING  p_name         = table_name
                                                   RECEIVING  p_descr_ref    = lo_obj
                                                   EXCEPTIONS type_not_found = 1
                                                              OTHERS         = 2
            ).
            IF sy-subrc <> 0.
              RAISE EXCEPTION TYPE z2ui5_cx_util_error
                EXPORTING
                  val = |TABLE_NOT_FOUD_NAME___{ table_name }|.
            ENDIF.

            DATA temp852 TYPE REF TO cl_abap_tabledescr.
            temp852 ?= lo_obj.
            DATA lo_tab LIKE temp852.
            lo_tab = temp852.
            DATA temp853 TYPE REF TO cl_abap_structdescr.
            temp853 ?= lo_tab->get_table_line_type( ).
            lo_struct = temp853.
          CATCH cx_root.
            RETURN.
        ENDTRY.

    ENDTRY.

    result = lo_struct->get_components( ).

    DATA temp854 LIKE LINE OF result.
    DATA lr_comp LIKE REF TO temp854.
    LOOP AT result REFERENCE INTO lr_comp
         WHERE as_include = abap_true.

      DATA lt_attri TYPE abap_component_tab.
      lt_attri = rtti_get_t_attri_by_include( lr_comp->type ).

      DELETE result.
      INSERT LINES OF lt_attri INTO TABLE result.
    ENDLOOP.

  ENDMETHOD.

  METHOD itab_corresponding.

    FIELD-SYMBOLS <row_in>  TYPE any.
    FIELD-SYMBOLS <row_out> TYPE any.

    LOOP AT val ASSIGNING <row_in>.

      IF lines( tab ) = 0.
        DATA lv_lines TYPE i.
        lv_lines = 1.
      ELSE.
        lv_lines = lines( tab ).
      ENDIF.

      INSERT INITIAL LINE INTO tab ASSIGNING <row_out> INDEX lv_lines.
      MOVE-CORRESPONDING <row_in> TO <row_out>.

    ENDLOOP.

  ENDMETHOD.

  METHOD itab_filter_by_t_range.

  ENDMETHOD.

  METHOD filter_get_data_by_multi.

  ENDMETHOD.

  METHOD filter_get_sql_where.

    DATA ls_filter LIKE LINE OF val.
    LOOP AT val INTO ls_filter.

      " TODO: variable is assigned but never used (ABAP cleaner)
      DATA lo_range TYPE REF TO kHGwlIiCDAqWuzmHSWUVSQazryNNUC.

      DATA temp855 LIKE REF TO ls_filter-t_range.
      GET REFERENCE OF ls_filter-t_range INTO temp855.
CREATE OBJECT lo_range EXPORTING iv_fieldname = ls_filter-name ir_range = temp855.

    ENDLOOP.

  ENDMETHOD.

  METHOD msg_get.

    result = kHGwlIiCDAqWuzmHSWUVKThwDidmDe=>msg_get( val ).

  ENDMETHOD.

  METHOD rtti_check_clike.

    DATA lv_type TYPE string.
    lv_type = rtti_get_type_kind( val ).
    CASE lv_type.
      WHEN cl_abap_datadescr=>typekind_char OR
          cl_abap_datadescr=>typekind_clike OR
          cl_abap_datadescr=>typekind_csequence OR
          cl_abap_datadescr=>typekind_string.
        result = abap_true.
    ENDCASE.

  ENDMETHOD.

  METHOD ui5_get_msg_type.

    DATA temp856 TYPE string.
    CASE val.
      WHEN 'E'.
        temp856 = `Error`.
      WHEN 'S'.
        temp856 = `Success`.
      WHEN `W`.
        temp856 = `Warning`.
      WHEN OTHERS.
        temp856 = `Information`.
    ENDCASE.
    result = temp856.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cx_srt IMPLEMENTATION.
  METHOD constructor ##ADT_SUPPRESS_GENERATION.
    CALL METHOD super->constructor
      EXPORTING
        previous = previous.
    CLEAR me->textid.
    IF textid IS INITIAL.
      if_t100_message~t100key = if_t100_message=>default_textid.
    ELSE.
      if_t100_message~t100key = textid.
    ENDIF.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_typedescr IMPLEMENTATION.
  METHOD constructor.
    absolute_name = rtti->absolute_name.
    type_kind     = rtti->type_kind.
    length        = rtti->length.
    decimals      = rtti->decimals.
    kind          = rtti->kind.
    is_ddic_type  = rtti->is_ddic_type( ).
    IF rtti->absolute_name CP '\TYPE=%_T*'.
      technical_type = abap_true.
    ENDIF.
  ENDMETHOD.

  METHOD create_by_data_object.
    srtti = create_by_rtti( cl_abap_typedescr=>describe_by_data( data_object ) ).
  ENDMETHOD.

  METHOD create_by_rtti.
    DATA elem_rtti   TYPE REF TO cl_abap_elemdescr.
    DATA struct_rtti TYPE REF TO cl_abap_structdescr.
    DATA table_rtti  TYPE REF TO cl_abap_tabledescr.
    DATA ref_rtti    TYPE REF TO cl_abap_refdescr.
    DATA class_rtti  TYPE REF TO cl_abap_classdescr.
    DATA intf_rtti   TYPE REF TO cl_abap_intfdescr.

    CASE rtti->kind.
      WHEN cl_abap_typedescr=>kind_elem.

        elem_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_elemdescr
          EXPORTING
            rtti = elem_rtti.

      WHEN cl_abap_typedescr=>kind_struct.

        struct_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_structdescr
          EXPORTING
            rtti = struct_rtti.

      WHEN cl_abap_typedescr=>kind_table.

        table_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_tabledescr
          EXPORTING
            rtti = table_rtti.

      WHEN cl_abap_typedescr=>kind_ref.

        ref_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_refdescr
          EXPORTING
            rtti = ref_rtti.

      WHEN cl_abap_typedescr=>kind_class.

        class_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_classdescr
          EXPORTING
            rtti = class_rtti.

      WHEN cl_abap_typedescr=>kind_intf.

        intf_rtti ?= rtti.
        CREATE OBJECT srtti TYPE z2ui5_cl_srt_intfdescr
          EXPORTING
            rtti = intf_rtti.

      WHEN OTHERS.
        " Unsupported (new ABAP features in the future)
        RAISE EXCEPTION TYPE z2ui5_cx_srt.
    ENDCASE.
  ENDMETHOD.

  METHOD get_rtti.
    " default behavior
    IF technical_type = abap_false.
      rtti = cl_abap_typedescr=>describe_by_name( absolute_name ).
    ENDIF.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_tabledescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).
    key            = rtti->key.
    initial_size   = rtti->initial_size.
    key_defkind    = rtti->key_defkind.
    has_unique_key = rtti->has_unique_key.
    table_kind     = rtti->table_kind.

    line_type ?= z2ui5_cl_srt_typedescr=>create_by_rtti( rtti->get_table_line_type( ) ).
    IF line_type->not_serializable = abap_true.
      not_serializable = abap_true.
    ENDIF.
  ENDMETHOD.

  METHOD get_rtti.
    DATA lt_empty_key TYPE abap_keydescr_tab.
    DATA lo_data_rtti TYPE REF TO cl_abap_datadescr.
    DATA lo_error     TYPE REF TO cx_sy_table_creation.

    FIELD-SYMBOLS <lt_key> TYPE abap_keydescr_tab.

    CLEAR lt_empty_key.
    CASE key_defkind.
      WHEN cl_abap_tabledescr=>keydefkind_user.
        ASSIGN key TO <lt_key>.
      WHEN OTHERS.
        ASSIGN lt_empty_key TO <lt_key>.
    ENDCASE.
    TRY.

        lo_data_rtti ?= line_type->get_rtti( ).
        rtti = cl_abap_tabledescr=>create( p_line_type  = lo_data_rtti
                                           p_table_kind = table_kind
                                           p_unique     = has_unique_key
                                           p_key        = <lt_key>
                                           p_key_kind   = key_defkind ).

      CATCH cx_sy_table_creation INTO lo_error.
        RAISE EXCEPTION TYPE z2ui5_cx_srt
          EXPORTING
            previous = lo_error.
    ENDTRY.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_structdescr IMPLEMENTATION.
  METHOD constructor.
    DATA components_rtti TYPE abap_component_tab.
    DATA scomponent      TYPE sabap_componentdescr.
    DATA scomponent_rtti TYPE REF TO z2ui5_cl_srt_datadescr.

    FIELD-SYMBOLS <component> TYPE abap_componentdescr.

    super->constructor( rtti ).

    struct_kind = rtti->struct_kind.
    has_include = rtti->has_include.

    components_rtti = rtti->get_components( ).

    LOOP AT components_rtti ASSIGNING <component>.

      CLEAR scomponent.
      scomponent-name = <component>-name.

      scomponent_rtti ?= z2ui5_cl_srt_datadescr=>create_by_rtti( <component>-type ).
      scomponent-type       = scomponent_rtti.
      scomponent-as_include = <component>-as_include.
      scomponent-suffix     = <component>-suffix.

      APPEND scomponent TO components.
      IF scomponent-type->not_serializable = abap_true.
        not_serializable = abap_true.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.

  METHOD get_rtti.
    DATA components_rtti TYPE cl_abap_structdescr=>component_table.
    DATA component_rtti  TYPE abap_componentdescr.

    FIELD-SYMBOLS <component> TYPE sabap_componentdescr.

    CLEAR components_rtti.
    LOOP AT components ASSIGNING <component>.

      CLEAR component_rtti.
      component_rtti-name        = <component>-name.
      component_rtti-type       ?= <component>-type->get_rtti( ).
      component_rtti-as_include  = <component>-as_include.
      component_rtti-suffix      = <component>-suffix.

      APPEND component_rtti TO components_rtti.
    ENDLOOP.
    rtti = cl_abap_structdescr=>create( components_rtti ).
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_refdescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).
    CREATE OBJECT referenced_type TYPE z2ui5_cl_srt_typedescr
      EXPORTING
        rtti = rtti->get_referenced_type( ).
    IF referenced_type->not_serializable = abap_true.
      not_serializable = abap_true.
    ENDIF.
  ENDMETHOD.

  METHOD get_rtti.
    IF referenced_type->type_kind = cl_abap_typedescr=>typekind_data.
      rtti = cl_abap_refdescr=>get_ref_to_data( ).
    ELSEIF referenced_type->absolute_name = '\CLASS=OBJECT'.
      rtti = cl_abap_refdescr=>get_ref_to_object( ).
    ELSE.
      rtti = referenced_type->get_rtti( ).
    ENDIF.
    rtti = cl_abap_refdescr=>create( rtti ).
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_objectdescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).

    interfaces = rtti->interfaces.
    types      = rtti->types.
    attributes = rtti->attributes.
    methods    = rtti->methods.
    events     = rtti->events.

    READ TABLE interfaces WITH KEY name = 'IF_SERIALIZABLE_OBJECT' TRANSPORTING NO FIELDS.
    IF sy-subrc <> 0.
      not_serializable = abap_true.
    ENDIF.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_intfdescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).
    intf_kind = rtti->intf_kind.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_elemdescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).

    edit_mask     = rtti->edit_mask.
    help_id       = rtti->help_id.
    output_length = rtti->output_length.
  ENDMETHOD.
  METHOD get_rtti.
    rtti = super->get_rtti( ).
    IF rtti IS BOUND.
      RETURN.
    ENDIF.

    IF     is_ddic_type   = abap_true
       AND technical_type = abap_false.
      " If XML transformations are used, they may be based on
      " the data element, for instance XSDBOOLEAN will convert "true"
      " into "X" during deserialization.
      rtti = cl_abap_typedescr=>describe_by_name( absolute_name ).
    ELSE.
      rtti = get_rtti_by_type_kind( type_kind ).
    ENDIF.
  ENDMETHOD.
  METHOD get_rtti_by_type_kind.
    DATA l_length TYPE i.

    CASE i_type_kind.
      WHEN cl_abap_typedescr=>typekind_num.
        l_length = length / cl_abap_char_utilities=>charsize.
        rtti = cl_abap_elemdescr=>get_n( l_length ).
      WHEN cl_abap_typedescr=>typekind_char.
        l_length = length / cl_abap_char_utilities=>charsize.
        rtti = cl_abap_elemdescr=>get_c( l_length ).
      WHEN cl_abap_typedescr=>typekind_string.
        rtti = cl_abap_elemdescr=>get_string( ).
      WHEN cl_abap_typedescr=>typekind_xstring.
        rtti = cl_abap_elemdescr=>get_xstring( ).
      WHEN cl_abap_typedescr=>typekind_int.
        rtti = cl_abap_elemdescr=>get_i( ).
      WHEN cl_abap_typedescr=>typekind_float.
        rtti = cl_abap_elemdescr=>get_f( ).
      WHEN cl_abap_typedescr=>typekind_date.
        rtti = cl_abap_elemdescr=>get_d( ).
      WHEN cl_abap_typedescr=>typekind_time.
        rtti = cl_abap_elemdescr=>get_t( ).
      WHEN cl_abap_typedescr=>typekind_hex.
        rtti = cl_abap_elemdescr=>get_x( length ).
      WHEN cl_abap_typedescr=>typekind_packed.
        rtti = cl_abap_elemdescr=>get_p( p_length   = length
                                         p_decimals = decimals ).
      WHEN cl_abap_typedescr=>typekind_decfloat16.
        rtti = cl_abap_elemdescr=>get_decfloat16( ).
      WHEN cl_abap_typedescr=>typekind_decfloat34.
        rtti = cl_abap_elemdescr=>get_decfloat34( ).
      WHEN OTHERS.
        RAISE EXCEPTION TYPE z2ui5_cx_srt.
    ENDCASE.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_srt_datadescr IMPLEMENTATION.
ENDCLASS.

CLASS z2ui5_cl_srt_complexdescr IMPLEMENTATION.
ENDCLASS.

CLASS z2ui5_cl_srt_classdescr IMPLEMENTATION.
  METHOD constructor.
    super->constructor( rtti ).
    class_kind        = rtti->class_kind.
    create_visibility = rtti->create_visibility.
  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cx_ajson_error IMPLEMENTATION.
  METHOD constructor.
    CALL METHOD super->constructor
      EXPORTING
        previous = previous.
    me->rc = rc .
    me->message = message .
    me->location = location .
    me->a1 = a1 .
    me->a2 = a2 .
    me->a3 = a3 .
    me->a4 = a4 .
    CLEAR me->textid.
    IF textid IS INITIAL.
      if_t100_message~t100key = zcx_ajson_error .
    ELSE.
      if_t100_message~t100key = textid.
    ENDIF.
  ENDMETHOD.
  METHOD raise.

    DATA lx TYPE REF TO z2ui5_cx_ajson_error.

    CREATE OBJECT lx EXPORTING message = iv_msg.
    lx->set_location(
      iv_location = iv_location
      is_node     = is_node ).
    RAISE EXCEPTION lx.

  ENDMETHOD.
  METHOD set_location.

    DATA ls_msg TYPE ty_message_parts.
    DATA lv_location TYPE string.
    DATA lv_tmp TYPE string.
    FIELD-SYMBOLS <path> TYPE string.
    FIELD-SYMBOLS <name> TYPE string.

    IF iv_location IS NOT INITIAL.
      lv_location = iv_location.
    ELSEIF is_node IS NOT INITIAL.
      ASSIGN COMPONENT 'PATH' OF STRUCTURE is_node TO <path>.
      ASSIGN COMPONENT 'NAME' OF STRUCTURE is_node TO <name>.
      IF <path> IS ASSIGNED AND <name> IS ASSIGNED.
        lv_location = <path> && <name>.
      ENDIF.
    ENDIF.

    IF lv_location IS NOT INITIAL.
      lv_tmp = message && | @{ lv_location }|.
    ELSE.
      lv_tmp = message.
    ENDIF.

    ls_msg = lv_tmp.

    location = lv_location.
    a1       = ls_msg-a1.
    a2       = ls_msg-a2.
    a3       = ls_msg-a3.
    a4       = ls_msg-a4.

  ENDMETHOD.
ENDCLASS.

CLASS z2ui5_cl_ajson_utilities IMPLEMENTATION.
  METHOD delete_empty_nodes.

    DATA ls_json_tree LIKE LINE OF io_json->mt_json_tree.
    DATA lv_done TYPE abap_bool.

    DO.
      lv_done = abap_true.

      IF iv_keep_empty_arrays = abap_false.
        LOOP AT io_json->mt_json_tree INTO ls_json_tree
          WHERE type = z2ui5_if_ajson_types=>node_type-array AND children = 0.

          io_json->delete( ls_json_tree-path && ls_json_tree-name ).

        ENDLOOP.
        IF sy-subrc = 0.
          lv_done = abap_false.
        ENDIF.
      ENDIF.

      LOOP AT io_json->mt_json_tree INTO ls_json_tree
        WHERE type = z2ui5_if_ajson_types=>node_type-object AND children = 0.

        io_json->delete( ls_json_tree-path && ls_json_tree-name ).

      ENDLOOP.
      IF sy-subrc = 0.
        lv_done = abap_false.
      ENDIF.

      IF lv_done = abap_true.
        EXIT. " nothing else to delete
      ENDIF.
    ENDDO.

  ENDMETHOD.
  METHOD diff.

    mo_json_a = normalize_input(
      iv_json = iv_json_a
      io_json = io_json_a ).

    mo_json_b = normalize_input(
      iv_json = iv_json_b
      io_json = io_json_b ).

    mo_insert = z2ui5_cl_ajson=>create_empty( ).
    mo_delete = z2ui5_cl_ajson=>create_empty( ).
    mo_change = z2ui5_cl_ajson=>create_empty( ).

    diff_a_b( '/' ).
    diff_b_a( '/' ).

    eo_insert ?= mo_insert.
    eo_delete ?= mo_delete.
    eo_change ?= mo_change.

    delete_empty_nodes(
      io_json              = eo_insert
      iv_keep_empty_arrays = iv_keep_empty_arrays ).
    delete_empty_nodes(
      io_json              = eo_delete
      iv_keep_empty_arrays = iv_keep_empty_arrays ).
    delete_empty_nodes(
      io_json              = eo_change
      iv_keep_empty_arrays = iv_keep_empty_arrays ).

  ENDMETHOD.
  METHOD diff_a_b.

    DATA:
      lv_path_a TYPE string,
      lv_path_b TYPE string.

    FIELD-SYMBOLS:
      <node_a> LIKE LINE OF mo_json_a->mt_json_tree,
      <node_b> LIKE LINE OF mo_json_a->mt_json_tree.

    LOOP AT mo_json_a->mt_json_tree ASSIGNING <node_a> WHERE path = iv_path.
      lv_path_a = <node_a>-path && <node_a>-name && '/'.

      READ TABLE mo_json_b->mt_json_tree ASSIGNING <node_b>
        WITH TABLE KEY path = <node_a>-path name = <node_a>-name.
      IF sy-subrc = 0.
        lv_path_b = <node_b>-path && <node_b>-name && '/'.

        IF <node_a>-type = <node_b>-type.
          CASE <node_a>-type.
            WHEN z2ui5_if_ajson_types=>node_type-array.
              mo_insert->touch_array( lv_path_a ).
              mo_change->touch_array( lv_path_a ).
              mo_delete->touch_array( lv_path_a ).
              diff_a_b( lv_path_a ).
            WHEN z2ui5_if_ajson_types=>node_type-object.
              diff_a_b( lv_path_a ).
            WHEN OTHERS.
              IF <node_a>-value <> <node_b>-value.
                " save as changed value
                mo_change->set(
                  iv_path      = lv_path_b
                  iv_val       = <node_b>-value
                  iv_node_type = <node_b>-type ).
              ENDIF.
          ENDCASE.
        ELSE.
          " save changed type as delete + insert
          CASE <node_a>-type.
            WHEN z2ui5_if_ajson_types=>node_type-array.
              mo_delete->touch_array( lv_path_a ).
              diff_a_b( lv_path_a ).
            WHEN z2ui5_if_ajson_types=>node_type-object.
              diff_a_b( lv_path_a ).
            WHEN OTHERS.
              mo_delete->set(
                iv_path      = lv_path_a
                iv_val       = <node_a>-value
                iv_node_type = <node_a>-type ).
          ENDCASE.
          CASE <node_b>-type.
            WHEN z2ui5_if_ajson_types=>node_type-array.
              mo_insert->touch_array( lv_path_b ).
              diff_b_a( lv_path_b ).
            WHEN z2ui5_if_ajson_types=>node_type-object.
              diff_b_a( lv_path_b ).
            WHEN OTHERS.
              mo_insert->set(
                iv_path      = lv_path_b
                iv_val       = <node_b>-value
                iv_node_type = <node_b>-type ).
          ENDCASE.
        ENDIF.
      ELSE.
        " save as delete
        CASE <node_a>-type.
          WHEN z2ui5_if_ajson_types=>node_type-array.
            mo_delete->touch_array( lv_path_a ).
            diff_a_b( lv_path_a ).
          WHEN z2ui5_if_ajson_types=>node_type-object.
            diff_a_b( lv_path_a ).
          WHEN OTHERS.
            mo_delete->set(
              iv_path      = lv_path_a
              iv_val       = <node_a>-value
              iv_node_type = <node_a>-type ).
        ENDCASE.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.
  METHOD diff_b_a.

    DATA lv_path TYPE string.

    FIELD-SYMBOLS <node_b> LIKE LINE OF mo_json_b->mt_json_tree.

    LOOP AT mo_json_b->mt_json_tree ASSIGNING <node_b> WHERE path = iv_path.
      lv_path = <node_b>-path && <node_b>-name && '/'.

      CASE <node_b>-type.
        WHEN z2ui5_if_ajson_types=>node_type-array.
          mo_insert->touch_array( lv_path ).
          diff_b_a(
            iv_path  = lv_path
            iv_array = abap_true ).
        WHEN z2ui5_if_ajson_types=>node_type-object.
          diff_b_a( lv_path ).
        WHEN OTHERS.
          IF iv_array = abap_false.
            READ TABLE mo_json_a->mt_json_tree TRANSPORTING NO FIELDS
              WITH TABLE KEY path = <node_b>-path name = <node_b>-name.
            IF sy-subrc <> 0.
              " save as insert
              mo_insert->set(
                iv_path      = lv_path
                iv_val       = <node_b>-value
                iv_node_type = <node_b>-type ).
            ENDIF.
          ELSE.
            READ TABLE mo_insert->mt_json_tree TRANSPORTING NO FIELDS
              WITH KEY path = <node_b>-path value = <node_b>-value.
            IF sy-subrc <> 0.
              " save as new array value
              mo_insert->push(
                iv_path = iv_path
                iv_val  = <node_b>-value ).
            ENDIF.
          ENDIF.
      ENDCASE.
    ENDLOOP.

  ENDMETHOD.
  METHOD is_equal.

    DATA li_ins TYPE REF TO z2ui5_if_ajson.
    DATA li_del TYPE REF TO z2ui5_if_ajson.
    DATA li_mod TYPE REF TO z2ui5_if_ajson.

    diff(
      EXPORTING
        iv_json_a = iv_json_a
        iv_json_b = iv_json_b
        io_json_a = ii_json_a
        io_json_b = ii_json_b
      IMPORTING
        eo_insert = li_ins
        eo_delete = li_del
        eo_change = li_mod ).

    rv_yes = boolc(
      li_ins->is_empty( ) = abap_true AND
      li_del->is_empty( ) = abap_true AND
      li_mod->is_empty( ) = abap_true ).

  ENDMETHOD.
  METHOD merge.

    mo_json_a = normalize_input(
      iv_json = iv_json_a
      io_json = io_json_a ).

    mo_json_b = normalize_input(
      iv_json = iv_json_b
      io_json = io_json_b ).

    " Start with first JSON...
    mo_insert = mo_json_a.

    " ...and add all nodes from second JSON
    diff_b_a( '/' ).

    ro_json ?= mo_insert.

    delete_empty_nodes(
      io_json              = ro_json
      iv_keep_empty_arrays = iv_keep_empty_arrays ).

  ENDMETHOD.
  METHOD new.
    CREATE OBJECT ro_instance.
  ENDMETHOD.
  METHOD normalize_input.

    IF boolc( iv_json IS INITIAL ) = boolc( io_json IS INITIAL ).
      z2ui5_cx_ajson_error=>raise( 'Either supply JSON string or instance, but not both' ).
    ENDIF.

    IF iv_json IS NOT INITIAL.
      ro_json = z2ui5_cl_ajson=>parse( iv_json ).
    ELSEIF io_json IS NOT INITIAL.
      ro_json = io_json.
    ELSE.
      z2ui5_cx_ajson_error=>raise( 'Supply either JSON string or instance' ).
    ENDIF.

  ENDMETHOD.
  METHOD sort.

    DATA lo_json TYPE REF TO z2ui5_if_ajson.

    lo_json = normalize_input(
      iv_json = iv_json
      io_json = io_json ).

    " Nodes are parsed into a sorted table, so no explicit sorting required
    rv_sorted = lo_json->stringify( 2 ).

  ENDMETHOD.
ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxTFhfUGDgXz IMPLEMENTATION. "DEPRECATED
  METHOD constructor.

    DATA ls_mapping_field LIKE LINE OF mt_mapping_fields.

    LOOP AT it_mapping_fields INTO ls_mapping_field.
      ls_mapping_field-abap = to_upper( ls_mapping_field-abap ).
      INSERT ls_mapping_field INTO TABLE mt_mapping_fields.
    ENDLOOP.

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_abap.

    DATA ls_mapping_field LIKE LINE OF mt_mapping_fields.

    READ TABLE mt_mapping_fields INTO ls_mapping_field
      WITH KEY json COMPONENTS json = iv_name.
    IF sy-subrc = 0.
      rv_result = ls_mapping_field-abap.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_json.

    DATA lv_field TYPE string.
    DATA ls_mapping_field LIKE LINE OF mt_mapping_fields.

    lv_field = to_upper( iv_name ).

    READ TABLE mt_mapping_fields INTO ls_mapping_field
      WITH KEY abap COMPONENTS abap = lv_field.
    IF sy-subrc = 0.
      rv_result = ls_mapping_field-json.
    ENDIF.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

  ENDMETHOD.

ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxcwrelrEIET IMPLEMENTATION.

  METHOD constructor.
    mt_rename_map = it_rename_map.
    mv_rename_by = iv_rename_by.
  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_abap.
  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_json.
  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    DATA lv_full_path TYPE string.
    DATA lv_pair_found TYPE abap_bool.
    FIELD-SYMBOLS <r> LIKE LINE OF mt_rename_map.

    CASE mv_rename_by.
      WHEN z2ui5_cl_ajson_mapping=>rename_by-attr_name.
        READ TABLE mt_rename_map ASSIGNING <r> WITH TABLE KEY by_name COMPONENTS from = cv_name.
        lv_pair_found = boolc( sy-subrc = 0 ).
      WHEN z2ui5_cl_ajson_mapping=>rename_by-full_path.
        lv_full_path = is_node-path && cv_name.
        READ TABLE mt_rename_map ASSIGNING <r> WITH TABLE KEY by_name COMPONENTS from = lv_full_path.
        lv_pair_found = boolc( sy-subrc = 0 ).
      WHEN z2ui5_cl_ajson_mapping=>rename_by-pattern.
        lv_full_path = is_node-path && cv_name.
        LOOP AT mt_rename_map ASSIGNING <r>.
          IF lv_full_path CP <r>-from.
            lv_pair_found = abap_true.
            EXIT.
          ENDIF.
        ENDLOOP.
      WHEN OTHERS.
        lv_pair_found = abap_false. " No rename
    ENDCASE.

    IF lv_pair_found = abap_true.
      cv_name = <r>-to.
    ENDIF.

  ENDMETHOD.

ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxayhtkOTSGN IMPLEMENTATION.
  METHOD constructor.

    mi_mapping_fields = z2ui5_cl_ajson_mapping=>create_field_mapping( it_mapping_fields ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_abap.

    rv_result = mi_mapping_fields->to_abap( iv_path = iv_path
                                            iv_name = iv_name ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_json.

    rv_result = mi_mapping_fields->to_json( iv_path = iv_path
                                            iv_name = iv_name ).

    IF rv_result IS NOT INITIAL. " Mapping found
      RETURN.
    ENDIF.

    rv_result = to_upper( iv_name ).

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    cv_name = to_upper( cv_name ).

  ENDMETHOD.

ENDCLASS.
CLASS kHGwlQWxBzogSXFKnfTxIaLFAtEmIg IMPLEMENTATION.
  METHOD constructor.

    mi_mapping_fields = z2ui5_cl_ajson_mapping=>create_field_mapping( it_mapping_fields ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_abap.

    rv_result = mi_mapping_fields->to_abap( iv_path = iv_path
                                            iv_name = iv_name ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_json.

    rv_result = mi_mapping_fields->to_json( iv_path = iv_path
                                            iv_name = iv_name ).

    IF rv_result IS NOT INITIAL. " Mapping found
      RETURN.
    ENDIF.

    rv_result = to_lower( iv_name ).

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    cv_name = to_lower( cv_name ).

  ENDMETHOD.

ENDCLASS.
CLASS kHGwlQWxBzogSXFKnfTxYWDnXPYsQA IMPLEMENTATION. "DEPRECATED
  METHOD constructor.

    mi_mapping_fields   = z2ui5_cl_ajson_mapping=>create_field_mapping( it_mapping_fields ).
    mv_first_json_upper = iv_first_json_upper.

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_abap.

    rv_result = mi_mapping_fields->to_abap( iv_path = iv_path
                                            iv_name = iv_name ).

    IF rv_result IS NOT INITIAL. " Mapping found
      RETURN.
    ENDIF.

    rv_result = iv_name.

    REPLACE ALL OCCURRENCES OF REGEX `([a-z])([A-Z])` IN rv_result WITH `$1_$2`.

  ENDMETHOD.
  METHOD z2ui5_if_ajson_mapping~to_json.

    TYPES ty_token TYPE c LENGTH 255.
    TYPES temp12 TYPE STANDARD TABLE OF ty_token.
DATA lt_tokens TYPE temp12.
    DATA lv_from TYPE i.
    FIELD-SYMBOLS <token> LIKE LINE OF lt_tokens.

    rv_result = mi_mapping_fields->to_json( iv_path = iv_path
                                            iv_name = iv_name ).

    IF rv_result IS NOT INITIAL. " Mapping found
      RETURN.
    ENDIF.

    rv_result = iv_name.

    REPLACE ALL OCCURRENCES OF `__` IN rv_result WITH `*`.

    TRANSLATE rv_result TO LOWER CASE.
    TRANSLATE rv_result USING `/_:_~_`.

    IF mv_first_json_upper = abap_true.
      lv_from = 1.
    ELSE.
      lv_from = 2.
    ENDIF.

    SPLIT rv_result AT `_` INTO TABLE lt_tokens.
    LOOP AT lt_tokens ASSIGNING <token> FROM lv_from.
      TRANSLATE <token>(1) TO UPPER CASE.
    ENDLOOP.

    CONCATENATE LINES OF lt_tokens INTO rv_result.
    REPLACE ALL OCCURRENCES OF `*` IN rv_result WITH `_`.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

  ENDMETHOD.

ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxoAlevhaDMg IMPLEMENTATION.

  METHOD constructor.
    mt_queue = it_queue.
  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    DATA ls_node LIKE is_node.
    DATA li_mapper LIKE LINE OF mt_queue.

    ls_node = is_node.

    LOOP AT mt_queue INTO li_mapper.
      li_mapper->rename_node(
        EXPORTING
          is_node = ls_node
        CHANGING
          cv_name = cv_name ).
      ls_node-name = cv_name.
    ENDLOOP.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_abap.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_json.

  ENDMETHOD.

ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxrCLylKulMM IMPLEMENTATION.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    REPLACE ALL OCCURRENCES OF REGEX `([a-z])([A-Z])` IN cv_name WITH `$1_$2`.
    cv_name = to_lower( cv_name ).

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_abap.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_json.

  ENDMETHOD.

ENDCLASS.

CLASS kHGwlQWxBzogSXFKnfTxWRsLzEdjUi IMPLEMENTATION.

  METHOD constructor.
    mv_first_json_upper = iv_first_json_upper.
  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~rename_node.

    TYPES lty_token TYPE c LENGTH 255.
    CONSTANTS lc_forced_underscore_marker TYPE c LENGTH 1 VALUE cl_abap_char_utilities=>horizontal_tab.

    TYPES temp13 TYPE STANDARD TABLE OF lty_token.
DATA lt_tokens TYPE temp13.
    DATA lv_from TYPE i.
    FIELD-SYMBOLS <token> LIKE LINE OF lt_tokens.

    IF mv_first_json_upper = abap_true.
      lv_from = 1.
    ELSE.
      lv_from = 2.
    ENDIF.
    REPLACE ALL OCCURRENCES OF `__` IN cv_name WITH lc_forced_underscore_marker. " Force underscore

    SPLIT cv_name AT `_` INTO TABLE lt_tokens.
    DELETE lt_tokens WHERE table_line IS INITIAL.
    LOOP AT lt_tokens ASSIGNING <token> FROM lv_from.
      TRANSLATE <token>+0(1) TO UPPER CASE.
    ENDLOOP.

    CONCATENATE LINES OF lt_tokens INTO cv_name.
    REPLACE ALL OCCURRENCES OF lc_forced_underscore_marker IN cv_name WITH `_`.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_abap.

  ENDMETHOD.

  METHOD z2ui5_if_ajson_mapping~to_json.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_ajson_mapping IMPLEMENTATION.
  METHOD create_camel_case.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxYWDnXPYsQA
      EXPORTING
        it_mapping_fields   = it_mapping_fields
        iv_first_json_upper = iv_first_json_upper.

  ENDMETHOD.
  METHOD create_compound_mapper.

    DATA lt_queue TYPE z2ui5_if_ajson_mapping=>ty_table_of.

    APPEND ii_mapper1 TO lt_queue.
    APPEND ii_mapper2 TO lt_queue.
    APPEND ii_mapper3 TO lt_queue.
    APPEND LINES OF it_more TO lt_queue.
    DELETE lt_queue WHERE table_line IS INITIAL.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxoAlevhaDMg
      EXPORTING
        it_queue = lt_queue.

  ENDMETHOD.
  METHOD create_field_mapping.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxTFhfUGDgXz
      EXPORTING
        it_mapping_fields = it_mapping_fields.

  ENDMETHOD.
  METHOD create_lower_case.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxIaLFAtEmIg
      EXPORTING
        it_mapping_fields = it_mapping_fields.

  ENDMETHOD.
  METHOD create_rename.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxcwrelrEIET
      EXPORTING
        it_rename_map = it_rename_map
        iv_rename_by  = iv_rename_by.

  ENDMETHOD.
  METHOD create_to_camel_case.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxWRsLzEdjUi
      EXPORTING
        iv_first_json_upper = iv_first_json_upper.

  ENDMETHOD.
  METHOD create_to_snake_case.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxrCLylKulMM.

  ENDMETHOD.
  METHOD create_upper_case.

    CREATE OBJECT ri_mapping TYPE kHGwlQWxBzogSXFKnfTxayhtkOTSGN
      EXPORTING
        it_mapping_fields = it_mapping_fields.

  ENDMETHOD.
ENDCLASS.

CLASS kHGwlWxTjQFgGKrGWSYparIhEaaLQd DEFINITION DEFERRED.
CLASS kHGwlWxTjQFgGKrGWSYpKlBZxFUUhA DEFINITION DEFERRED.
CLASS kHGwlWxTjQFgGKrGWSYpHkqTfrNjtW DEFINITION DEFERRED.
**********************************************************************
*  FILTER EMPTY VALUES
**********************************************************************

* renamed: z2ui5_cl_ajson_filter_lib :: lcl_empty_filter
CLASS kHGwlWxTjQFgGKrGWSYpHkqTfrNjtW DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_filter.
ENDCLASS.

CLASS kHGwlWxTjQFgGKrGWSYpHkqTfrNjtW IMPLEMENTATION.
  METHOD z2ui5_if_ajson_filter~keep_node.

    rv_keep = boolc(
      ( iv_visit = z2ui5_if_ajson_filter=>visit_type-value AND is_node-value IS NOT INITIAL ) OR
      ( iv_visit <> z2ui5_if_ajson_filter=>visit_type-value AND is_node-children > 0 ) ).
    " children = 0 on open for initially empty nodes and on close for filtered ones

  ENDMETHOD.
ENDCLASS.

**********************************************************************
*  FILTER PREDEFINED PATHS
**********************************************************************

* renamed: z2ui5_cl_ajson_filter_lib :: lcl_paths_filter
CLASS kHGwlWxTjQFgGKrGWSYpKlBZxFUUhA DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_filter.
    METHODS constructor
      IMPORTING
        it_skip_paths     TYPE string_table OPTIONAL
        iv_skip_paths     TYPE string OPTIONAL
        iv_pattern_search TYPE abap_bool
      RAISING
        z2ui5_cx_ajson_error.
  PRIVATE SECTION.
    TYPES temp14_5411e312ea TYPE HASHED TABLE OF string WITH UNIQUE KEY table_line.
DATA mt_skip_paths TYPE temp14_5411e312ea.
    DATA mv_pattern_search TYPE abap_bool.
ENDCLASS.

CLASS kHGwlWxTjQFgGKrGWSYpKlBZxFUUhA IMPLEMENTATION.

  METHOD z2ui5_if_ajson_filter~keep_node.

    DATA lv_full_path TYPE string.
    FIELD-SYMBOLS <p> LIKE LINE OF mt_skip_paths.

    lv_full_path = is_node-path && is_node-name.

    IF mv_pattern_search = abap_true.
      rv_keep = abap_true.
      LOOP AT mt_skip_paths ASSIGNING <p>.
        IF lv_full_path CP <p>.
          rv_keep = abap_false.
          EXIT.
        ENDIF.
      ENDLOOP.
    ELSE.
      READ TABLE mt_skip_paths WITH KEY table_line = lv_full_path TRANSPORTING NO FIELDS.
      rv_keep = boolc( sy-subrc <> 0 ).
    ENDIF.

  ENDMETHOD.

  METHOD constructor.

    DATA lv_s TYPE string.
    DATA lt_tab TYPE string_table.
    FIELD-SYMBOLS <s> TYPE string.

    IF boolc( iv_skip_paths IS INITIAL ) = boolc( it_skip_paths IS INITIAL ). " XOR
      z2ui5_cx_ajson_error=>raise( 'no filter path specified' ).
    ENDIF.

    LOOP AT it_skip_paths INTO lv_s.
      lv_s = condense( lv_s ).
      APPEND lv_s TO lt_tab.
    ENDLOOP.

    IF iv_skip_paths IS NOT INITIAL.
      SPLIT iv_skip_paths AT ',' INTO TABLE lt_tab.
      LOOP AT lt_tab ASSIGNING <s>.
        IF <s> IS INITIAL.
          DELETE lt_tab INDEX sy-tabix.
          CONTINUE.
        ENDIF.
        <s> = condense( <s> ).
      ENDLOOP.
    ENDIF.

    SORT lt_tab BY table_line.
    DELETE ADJACENT DUPLICATES FROM lt_tab.

    mt_skip_paths = lt_tab.
    mv_pattern_search = iv_pattern_search.

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* MULTI FILTER
**********************************************************************

* renamed: z2ui5_cl_ajson_filter_lib :: lcl_and_filter
CLASS kHGwlWxTjQFgGKrGWSYparIhEaaLQd DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES z2ui5_if_ajson_filter.
    METHODS constructor
      IMPORTING
        it_filters TYPE z2ui5_if_ajson_filter=>ty_filter_tab
      RAISING
        z2ui5_cx_ajson_error.
  PRIVATE SECTION.
    DATA mt_filters TYPE z2ui5_if_ajson_filter=>ty_filter_tab.
ENDCLASS.

CLASS kHGwlWxTjQFgGKrGWSYparIhEaaLQd IMPLEMENTATION.

  METHOD z2ui5_if_ajson_filter~keep_node.

    DATA li_filter LIKE LINE OF mt_filters.

    rv_keep = abap_true.
    LOOP AT mt_filters INTO li_filter.
      rv_keep = li_filter->keep_node(
        is_node  = is_node
        iv_visit = iv_visit ).
      IF rv_keep = abap_false.
        RETURN.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.

  METHOD constructor.

    DATA li_filter LIKE LINE OF it_filters.

    LOOP AT it_filters INTO li_filter WHERE table_line IS BOUND.
      APPEND li_filter TO mt_filters.
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_ajson_filter_lib IMPLEMENTATION.
  METHOD create_and_filter.
    CREATE OBJECT ri_filter TYPE kHGwlWxTjQFgGKrGWSYparIhEaaLQd
      EXPORTING
        it_filters = it_filters.
  ENDMETHOD.
  METHOD create_empty_filter.
    CREATE OBJECT ri_filter TYPE kHGwlWxTjQFgGKrGWSYpHkqTfrNjtW.
  ENDMETHOD.
  METHOD create_path_filter.
    CREATE OBJECT ri_filter TYPE kHGwlWxTjQFgGKrGWSYpKlBZxFUUhA
      EXPORTING
        iv_pattern_search = iv_pattern_search
        it_skip_paths     = it_skip_paths
        iv_skip_paths     = iv_skip_paths.
  ENDMETHOD.
ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmucOpllUiAS DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmhFTcRDbOtm DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmlwblMIpVBS DEFINITION DEFERRED.
INTERFACE iUFTszUrcuWxYGvxpUmmtzVIYRIbuu DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmeJqampzabz DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmXxNdxsjJjI DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmFgyFungUrS DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmfipvepHQnc DEFINITION DEFERRED.
CLASS kHGwlzUrcuWxYGvxpUmmzByNvbZmNu DEFINITION DEFERRED.
INTERFACE iUFTszUrcuWxYGvxpUmmdAMURRqLkF DEFERRED.
**********************************************************************
* UTILS
**********************************************************************

* renamed: z2ui5_cl_ajson :: lif_kind
INTERFACE iUFTszUrcuWxYGvxpUmmdAMURRqLkF.

  TYPES ty_kind TYPE c LENGTH 1.

  CONSTANTS:
    any         TYPE ty_kind VALUE cl_abap_typedescr=>typekind_any,
    date        TYPE ty_kind VALUE cl_abap_typedescr=>typekind_date,
    time        TYPE ty_kind VALUE cl_abap_typedescr=>typekind_time,
    packed      TYPE ty_kind VALUE cl_abap_typedescr=>typekind_packed,
    table       TYPE ty_kind VALUE cl_abap_typedescr=>typekind_table,
    struct_flat TYPE ty_kind VALUE cl_abap_typedescr=>typekind_struct1,
    struct_deep TYPE ty_kind VALUE cl_abap_typedescr=>typekind_struct2,
    data_ref    TYPE ty_kind VALUE cl_abap_typedescr=>typekind_dref,
    object_ref  TYPE ty_kind VALUE cl_abap_typedescr=>typekind_oref,
    enum        TYPE ty_kind VALUE 'k'. " cl_abap_typedescr=>typekind_enum not in lower releases

  CONSTANTS:
    BEGIN OF numeric,
      int1       TYPE ty_kind VALUE cl_abap_typedescr=>typekind_int1,
      int2       TYPE ty_kind VALUE cl_abap_typedescr=>typekind_int2,
      int4       TYPE ty_kind VALUE cl_abap_typedescr=>typekind_int,
      int8       TYPE ty_kind VALUE '8', " cl_abap_typedescr=>typekind_int8 not in lower releases
      float      TYPE ty_kind VALUE cl_abap_typedescr=>typekind_float,
      packed     TYPE ty_kind VALUE cl_abap_typedescr=>typekind_packed,
      decfloat16 TYPE ty_kind VALUE cl_abap_typedescr=>typekind_decfloat16,
      decfloat34 TYPE ty_kind VALUE cl_abap_typedescr=>typekind_decfloat34,
    END OF numeric.

  CONSTANTS:
    BEGIN OF texts,
      char   TYPE ty_kind VALUE cl_abap_typedescr=>typekind_char,
      numc   TYPE ty_kind VALUE cl_abap_typedescr=>typekind_num,
      string TYPE ty_kind VALUE cl_abap_typedescr=>typekind_string,
    END OF texts.

  CONSTANTS:
    BEGIN OF binary,
      hex     TYPE ty_kind VALUE cl_abap_typedescr=>typekind_hex,
      xstring TYPE ty_kind VALUE cl_abap_typedescr=>typekind_xstring,
    END OF binary.

  CONSTANTS:
    BEGIN OF deep_targets,
      table       TYPE ty_kind VALUE cl_abap_typedescr=>typekind_table,
      struct_flat TYPE ty_kind VALUE cl_abap_typedescr=>typekind_struct1,
      struct_deep TYPE ty_kind VALUE cl_abap_typedescr=>typekind_struct2,
      data_ref    TYPE ty_kind VALUE cl_abap_typedescr=>typekind_dref,
      object_ref  TYPE ty_kind VALUE cl_abap_typedescr=>typekind_oref,
    END OF deep_targets.

ENDINTERFACE.

* renamed: z2ui5_cl_ajson :: lcl_utils
CLASS kHGwlzUrcuWxYGvxpUmmzByNvbZmNu DEFINITION FINAL.
  PUBLIC SECTION.

    CLASS-METHODS normalize_path
      IMPORTING
        iv_path        TYPE string
      RETURNING
        VALUE(rv_path) TYPE string.
    CLASS-METHODS split_path
      IMPORTING
        iv_path             TYPE string
      RETURNING
        VALUE(rv_path_name) TYPE z2ui5_if_ajson_types=>ty_path_name.
    CLASS-METHODS validate_array_index
      IMPORTING
        iv_path         TYPE string
        iv_index        TYPE string
      RETURNING
        VALUE(rv_index) TYPE i
      RAISING
        z2ui5_cx_ajson_error.
    CLASS-METHODS string_to_xstring_utf8
      IMPORTING
        iv_str         TYPE string
      RETURNING
        VALUE(rv_xstr) TYPE xstring.
    CLASS-METHODS xstring_to_string_utf8
      IMPORTING
        iv_xstr       TYPE xstring
      RETURNING
        VALUE(rv_str) TYPE string.
    CLASS-METHODS any_to_xstring
      IMPORTING
        iv_data        TYPE any
      RETURNING
        VALUE(rv_xstr) TYPE xstring
      RAISING
        z2ui5_cx_ajson_error.
    CLASS-METHODS any_to_string
      IMPORTING
        iv_data       TYPE any
      RETURNING
        VALUE(rv_str) TYPE string
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmzByNvbZmNu IMPLEMENTATION.

  METHOD string_to_xstring_utf8.

    DATA lo_conv TYPE REF TO object.
    DATA lv_out_ce TYPE string.

    lv_out_ce = 'CL_ABAP_CONV_OUT_CE'.

    TRY.
        CALL METHOD ('CL_ABAP_CONV_CODEPAGE')=>create_out
          RECEIVING
            instance = lo_conv.
        CALL METHOD lo_conv->('IF_ABAP_CONV_OUT~CONVERT')
          EXPORTING
            source = iv_str
          RECEIVING
            result = rv_xstr.
      CATCH cx_sy_dyn_call_illegal_class.
        CALL METHOD (lv_out_ce)=>create
          EXPORTING
            encoding = 'UTF-8'
          RECEIVING
            conv     = lo_conv.
        CALL METHOD lo_conv->('CONVERT')
          EXPORTING
            data   = iv_str
          IMPORTING
            buffer = rv_xstr.
    ENDTRY.

  ENDMETHOD.

  METHOD xstring_to_string_utf8.

    DATA lo_conv TYPE REF TO object.
    DATA lv_in_ce TYPE string.

    lv_in_ce = 'CL_ABAP_CONV_IN_CE'.

    TRY.
        CALL METHOD ('CL_ABAP_CONV_CODEPAGE')=>create_in
          RECEIVING
            instance = lo_conv.
        CALL METHOD lo_conv->('IF_ABAP_CONV_IN~CONVERT')
          EXPORTING
            source = iv_xstr
          RECEIVING
            result = rv_str.
      CATCH cx_sy_dyn_call_illegal_class.
        CALL METHOD (lv_in_ce)=>create
          EXPORTING
            encoding = 'UTF-8'
          RECEIVING
            conv     = lo_conv.
        CALL METHOD lo_conv->('CONVERT')
          EXPORTING
            data   = iv_xstr
          IMPORTING
            buffer = rv_str.
    ENDTRY.

  ENDMETHOD.

  METHOD validate_array_index.

    IF NOT iv_index CO '0123456789'.
      z2ui5_cx_ajson_error=>raise( |Cannot add non-numeric key [{ iv_index }] to array [{ iv_path }]| ).
    ENDIF.
    rv_index = iv_index.
    IF rv_index = 0.
      z2ui5_cx_ajson_error=>raise( |Cannot add zero key to array [{ iv_path }]| ).
    ENDIF.

  ENDMETHOD.

  METHOD normalize_path.

    rv_path = iv_path.
    IF strlen( rv_path ) = 0.
      rv_path = '/'.
    ENDIF.
    IF rv_path+0(1) <> '/'.
      rv_path = '/' && rv_path.
    ENDIF.
    IF substring( val = rv_path
                  off = strlen( rv_path ) - 1 ) <> '/'.
      rv_path = rv_path && '/'.
    ENDIF.

  ENDMETHOD.

  METHOD split_path.

    DATA lv_offs TYPE i.
    DATA lv_len TYPE i.
    DATA lv_trim_slash TYPE i.

    lv_len = strlen( iv_path ).
    IF lv_len = 0 OR iv_path = '/'.
      RETURN. " empty path is the alias for root item = '' + ''
    ENDIF.

    IF substring( val = iv_path
                  off = lv_len - 1 ) = '/'.
      lv_trim_slash = 1. " ignore last '/'
    ENDIF.

    lv_offs = find( val = reverse( iv_path )
                    sub = '/'
                    off = lv_trim_slash ).
    IF lv_offs = -1.
      lv_offs  = lv_len. " treat whole string as the 'name' part
    ENDIF.
    lv_offs = lv_len - lv_offs.

    rv_path_name-path = normalize_path( substring( val = iv_path
                                                   len = lv_offs ) ).
    rv_path_name-name = substring( val = iv_path
                                   off = lv_offs
                                   len = lv_len - lv_offs - lv_trim_slash ).

  ENDMETHOD.

  METHOD any_to_xstring.
    " supports xstring, char, string, or string_table as input

    DATA lo_type TYPE REF TO cl_abap_typedescr.
    DATA lo_table_type TYPE REF TO cl_abap_tabledescr.
    DATA lv_str TYPE string.

    FIELD-SYMBOLS: <data> TYPE STANDARD TABLE.

    lo_type = cl_abap_typedescr=>describe_by_data( iv_data ).

    CASE lo_type->type_kind.
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>binary-xstring.
        rv_xstr = iv_data.
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts-string OR iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts-char.
        rv_xstr = string_to_xstring_utf8( iv_data ).
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
        lo_table_type ?= lo_type.
        IF lo_table_type->table_kind <> cl_abap_tabledescr=>tablekind_std.
          z2ui5_cx_ajson_error=>raise( 'Unsupported type of input table (must be standard table)' ).
        ENDIF.
        TRY.
            ASSIGN iv_data TO <data>.
            lv_str = concat_lines_of( table = <data>
                                      sep = cl_abap_char_utilities=>newline ).
            rv_xstr = string_to_xstring_utf8( lv_str ).
          CATCH cx_root.
            z2ui5_cx_ajson_error=>raise( 'Error converting input table (should be string_table)' ).
        ENDTRY.
      WHEN OTHERS.
        z2ui5_cx_ajson_error=>raise( 'Unsupported type of input (must be char, string, string_table, or xstring)' ).
    ENDCASE.

  ENDMETHOD.

  METHOD any_to_string.
    " supports xstring, char, string, or string_table as input

    DATA lo_type TYPE REF TO cl_abap_typedescr.
    DATA lo_table_type TYPE REF TO cl_abap_tabledescr.

    FIELD-SYMBOLS: <data> TYPE STANDARD TABLE.

    lo_type = cl_abap_typedescr=>describe_by_data( iv_data ).

    CASE lo_type->type_kind.
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>binary-xstring.
        rv_str = xstring_to_string_utf8( iv_data ).
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts-string OR iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts-char.
        rv_str = iv_data.
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
        lo_table_type ?= lo_type.
        IF lo_table_type->table_kind <> cl_abap_tabledescr=>tablekind_std.
          z2ui5_cx_ajson_error=>raise( 'Unsupported type of input table (must be standard table)' ).
        ENDIF.
        TRY.
            ASSIGN iv_data TO <data>.
            rv_str = concat_lines_of( table = <data>
                                      sep = cl_abap_char_utilities=>newline ).
          CATCH cx_root.
            z2ui5_cx_ajson_error=>raise( 'Error converting input table (should be string_table)' ).
        ENDTRY.
      WHEN OTHERS.
        z2ui5_cx_ajson_error=>raise( 'Unsupported type of input (must be char, string, string_table, or xstring)' ).
    ENDCASE.

  ENDMETHOD.

ENDCLASS.
**********************************************************************
* PARSER
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_json_parser
CLASS kHGwlzUrcuWxYGvxpUmmfipvepHQnc DEFINITION FINAL.
  PUBLIC SECTION.

    METHODS parse
      IMPORTING
        iv_json             TYPE any
        iv_keep_item_order  TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rt_json_tree) TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

  PRIVATE SECTION.

    TYPES:
      ty_stack_tt TYPE STANDARD TABLE OF REF TO z2ui5_if_ajson_types=>ty_node.

    DATA mt_stack TYPE ty_stack_tt.
    DATA mv_stack_path TYPE string.
    DATA mv_keep_item_order TYPE abap_bool.

    METHODS raise
      IMPORTING
        iv_error TYPE string
      RAISING
        z2ui5_cx_ajson_error.

    METHODS _parse
      IMPORTING
        iv_json             TYPE xstring
      RETURNING
        VALUE(rt_json_tree) TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error cx_dynamic_check. " cx_sxml_error is not released on Steampunk #153

    METHODS _get_location
      IMPORTING
        iv_json            TYPE string
        iv_offset          TYPE i
      RETURNING
        VALUE(rv_location) TYPE string.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmfipvepHQnc IMPLEMENTATION.

  METHOD parse.
    DATA lx_sxml_parse TYPE REF TO cx_sxml_parse_error.
    DATA lx_sxml TYPE REF TO cx_dynamic_check.
    DATA lv_location TYPE string.
    DATA lv_json TYPE xstring.

    mv_keep_item_order = iv_keep_item_order.

    lv_json = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>any_to_xstring( iv_json ).

    TRY.
        " TODO sane JSON check:
        " JSON can be true,false,null,(-)digits
        " or start from " or from {
        rt_json_tree = _parse( lv_json ).
      CATCH cx_sxml_parse_error INTO lx_sxml_parse.
        lv_location = _get_location(
        iv_json   = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>any_to_string( iv_json )
        iv_offset = lx_sxml_parse->xml_offset ).
        z2ui5_cx_ajson_error=>raise(
        iv_msg      = |Json parsing error (SXML): { lx_sxml_parse->get_text( ) }|
        iv_location = lv_location ).
      CATCH cx_dynamic_check INTO lx_sxml. " cx_sxml_error
        z2ui5_cx_ajson_error=>raise(
        iv_msg      = |Json parsing error (SXML): { lx_sxml->get_text( ) }|
        iv_location = '@PARSER' ).
    ENDTRY.

  ENDMETHOD.

  METHOD _get_location.

    DATA lv_json TYPE string.
    DATA lv_offset TYPE i.
    TYPES temp15 TYPE TABLE OF string.
DATA lt_text TYPE temp15.
    DATA lv_text TYPE string.
    DATA lv_line TYPE i.
    DATA lv_pos TYPE i.

    lv_offset = iv_offset.
    IF lv_offset < 0.
      lv_offset = 0.
    ENDIF.
    IF lv_offset > strlen( iv_json ).
      lv_offset = strlen( iv_json ).
    ENDIF.

    lv_json = iv_json(lv_offset).

    REPLACE ALL OCCURRENCES OF cl_abap_char_utilities=>cr_lf
      IN lv_json WITH cl_abap_char_utilities=>newline.

    SPLIT lv_json AT cl_abap_char_utilities=>newline INTO TABLE lt_text.

    lv_line = lines( lt_text ).
    IF lv_line = 0.
      lv_line = 1.
      lv_pos = 1.
    ELSE.
      READ TABLE lt_text INDEX lv_line INTO lv_text.
      lv_pos = strlen( lv_text ) + 1.
    ENDIF.

    rv_location = |Line { lv_line }, Offset { lv_pos }|.

  ENDMETHOD.

  METHOD _parse.

    DATA lo_reader TYPE REF TO if_sxml_reader.
    DATA lr_stack_top LIKE LINE OF mt_stack.
    DATA lo_node TYPE REF TO if_sxml_node.
    FIELD-SYMBOLS <item> LIKE LINE OF rt_json_tree.

    CLEAR mt_stack.
    CLEAR mv_stack_path.
    IF iv_json IS INITIAL.
      RETURN.
    ENDIF.
    lo_reader = cl_sxml_string_reader=>create( iv_json ).

    " TODO: self protection, check non-empty, check starting from object ...

    DO.
      lo_node = lo_reader->read_next_node( ).
      IF lo_node IS NOT BOUND.
        EXIT.
      ENDIF.
      CASE lo_node->type.
        WHEN if_sxml_node=>co_nt_element_open.
          DATA lt_attributes TYPE if_sxml_attribute=>attributes.
          DATA lo_attr LIKE LINE OF lt_attributes.
          DATA lo_open TYPE REF TO if_sxml_open_element.
          lo_open ?= lo_node.

          APPEND INITIAL LINE TO rt_json_tree ASSIGNING <item>.

          <item>-type = lo_open->qname-name.

          READ TABLE mt_stack INDEX 1 INTO lr_stack_top.
          IF sy-subrc = 0.
            " Using string is faster than rebuilding path from stack
            <item>-path = mv_stack_path.
            lr_stack_top->children = lr_stack_top->children + 1.

            IF lr_stack_top->type = `array`. " This is parser type not ajson type
              <item>-name = |{ lr_stack_top->children }|.
              <item>-index = lr_stack_top->children.
            ELSE.
              lt_attributes = lo_open->get_attributes( ).
              LOOP AT lt_attributes INTO lo_attr.
                IF lo_attr->qname-name = 'name' AND lo_attr->value_type = if_sxml_value=>co_vt_text.
                  <item>-name = lo_attr->get_value( ).
                ENDIF.
              ENDLOOP.
              IF mv_keep_item_order = abap_true.
                <item>-order = lr_stack_top->children.
              ENDIF.
            ENDIF.
            IF <item>-name IS INITIAL.
              raise( 'Node without name (maybe not JSON)' ).
            ENDIF.
          ENDIF.

          GET REFERENCE OF <item> INTO lr_stack_top.
          INSERT lr_stack_top INTO mt_stack INDEX 1.
          " add path component
          mv_stack_path = mv_stack_path && <item>-name && '/'.

        WHEN if_sxml_node=>co_nt_element_close.
          DATA lo_close TYPE REF TO if_sxml_close_element.
          lo_close ?= lo_node.

          READ TABLE mt_stack INDEX 1 INTO lr_stack_top.
          DELETE mt_stack INDEX 1.
          IF lo_close->qname-name <> lr_stack_top->type.
            raise( 'Unexpected closing node type' ).
          ENDIF.

          " remove last path component
          mv_stack_path = substring( val = mv_stack_path
                                     len = find( val = mv_stack_path sub = '/' occ = -2 ) + 1 ).
        WHEN if_sxml_node=>co_nt_value.
          DATA lo_value TYPE REF TO if_sxml_value_node.
          lo_value ?= lo_node.

          <item>-value = lo_value->get_value( ).

        WHEN OTHERS.
          raise( 'Unexpected node type' ).
      ENDCASE.
    ENDDO.

    IF lines( mt_stack ) > 0.
      raise( 'Unexpected end of data' ).
    ENDIF.

  ENDMETHOD.

  METHOD raise.

    z2ui5_cx_ajson_error=>raise(
      iv_location = mv_stack_path
      iv_msg      = |JSON PARSER: { iv_error } @ { mv_stack_path }| ).

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* SERIALIZER
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_json_serializer
CLASS kHGwlzUrcuWxYGvxpUmmFgyFungUrS DEFINITION FINAL CREATE PRIVATE.
  PUBLIC SECTION.

    CLASS-METHODS stringify
      IMPORTING
        it_json_tree          TYPE z2ui5_if_ajson_types=>ty_nodes_ts
        iv_indent             TYPE i DEFAULT 0
        iv_keep_item_order    TYPE abap_bool DEFAULT abap_false
      RETURNING
        VALUE(rv_json_string) TYPE string
      RAISING
        z2ui5_cx_ajson_error.

    CLASS-METHODS class_constructor.

  PRIVATE SECTION.

    CLASS-DATA gv_comma_with_lf TYPE string.

    DATA mt_json_tree TYPE z2ui5_if_ajson_types=>ty_nodes_ts.
    DATA mv_keep_item_order TYPE abap_bool.
    DATA mt_buffer TYPE string_table.
    DATA mv_indent_step TYPE i.
    DATA mv_level TYPE i.

    CLASS-METHODS escape_string
      IMPORTING
        iv_unescaped      TYPE string
      RETURNING
        VALUE(rv_escaped) TYPE string.

    METHODS _stringify
      RETURNING
        VALUE(rv_json_string) TYPE string
      RAISING
        z2ui5_cx_ajson_error.

    METHODS stringify_node
      IMPORTING
        is_node TYPE z2ui5_if_ajson_types=>ty_node
      RAISING
        z2ui5_cx_ajson_error.

    METHODS stringify_set
      IMPORTING
        iv_parent_path TYPE string
        iv_array       TYPE abap_bool
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmFgyFungUrS IMPLEMENTATION.

  METHOD class_constructor.
    gv_comma_with_lf = ',' && cl_abap_char_utilities=>newline.
  ENDMETHOD.

  METHOD stringify.

    DATA lo TYPE REF TO kHGwlzUrcuWxYGvxpUmmFgyFungUrS.
    CREATE OBJECT lo.
    lo->mt_json_tree = it_json_tree.
    lo->mv_indent_step = iv_indent.
    lo->mv_keep_item_order = iv_keep_item_order.
    rv_json_string = lo->_stringify( ).

  ENDMETHOD.

  METHOD _stringify.

    FIELD-SYMBOLS <n> LIKE LINE OF mt_json_tree.
    READ TABLE mt_json_tree ASSIGNING <n>
      WITH KEY
        path = ''
        name = ''. " Root
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    stringify_node( <n> ).

    rv_json_string = concat_lines_of( table = mt_buffer ).

  ENDMETHOD.

  METHOD stringify_node.

    DATA lv_item TYPE string.
    DATA lv_indent_prefix TYPE string.

    IF mv_indent_step > 0.
      lv_indent_prefix = repeat( val = ` `
                                 occ = mv_indent_step * mv_level ).
      lv_item = lv_indent_prefix.
    ENDIF.

    IF is_node-name IS NOT INITIAL AND is_node-index IS INITIAL. " Not root, not array item
      IF mv_indent_step > 0.
        lv_item = lv_item && |"{ is_node-name }": |.
      ELSE.
        lv_item = |"{ is_node-name }":|.
      ENDIF.
    ENDIF.

    CASE is_node-type.
      WHEN z2ui5_if_ajson_types=>node_type-array.
        lv_item = lv_item && '['.
      WHEN z2ui5_if_ajson_types=>node_type-object.
        lv_item = lv_item && '{'.
      WHEN z2ui5_if_ajson_types=>node_type-string.
        lv_item = lv_item && |"{ escape_string( is_node-value ) }"|.
      WHEN z2ui5_if_ajson_types=>node_type-boolean OR z2ui5_if_ajson_types=>node_type-number.
        lv_item = lv_item && is_node-value.
      WHEN z2ui5_if_ajson_types=>node_type-null.
        lv_item = lv_item && 'null'.
      WHEN OTHERS.
        z2ui5_cx_ajson_error=>raise(
          iv_msg = |Unexpected type [{ is_node-type }]|
          iv_location = is_node-path && is_node-name ).
    ENDCASE.

    IF mv_indent_step > 0
      AND ( is_node-type = z2ui5_if_ajson_types=>node_type-array OR is_node-type = z2ui5_if_ajson_types=>node_type-object )
      AND is_node-children > 0.
      mv_level = mv_level + 1.
      lv_item = lv_item && cl_abap_char_utilities=>newline.
    ENDIF.

    APPEND lv_item TO mt_buffer.

    " finish complex item

    IF is_node-type = z2ui5_if_ajson_types=>node_type-array OR is_node-type = z2ui5_if_ajson_types=>node_type-object.
      DATA lv_children_path TYPE string.
      DATA lv_tail TYPE string.

      lv_children_path = is_node-path && is_node-name && '/'. " for root: path = '' and name = '', so result is '/'

      CASE is_node-type.
        WHEN z2ui5_if_ajson_types=>node_type-array.
          IF is_node-children > 0.
            stringify_set(
              iv_parent_path = lv_children_path
              iv_array       = abap_true ).
          ENDIF.
          lv_tail = ']'.
        WHEN z2ui5_if_ajson_types=>node_type-object.
          IF is_node-children > 0.
            stringify_set(
              iv_parent_path = lv_children_path
              iv_array       = abap_false ).
          ENDIF.
          lv_tail = '}'.
      ENDCASE.

      IF mv_indent_step > 0 AND is_node-children > 0.
        lv_tail = lv_indent_prefix && lv_tail.
        mv_level = mv_level - 1.
      ENDIF.
      APPEND lv_tail TO mt_buffer.
    ENDIF.

  ENDMETHOD.

  METHOD stringify_set.

    DATA lv_tab_key TYPE string.
    DATA lv_first_done TYPE abap_bool.
    FIELD-SYMBOLS <n> LIKE LINE OF mt_json_tree.

    IF iv_array = abap_true.
      lv_tab_key = 'array_index'. " path + index
    ELSEIF mv_keep_item_order = abap_true.
      lv_tab_key = 'item_order'. " path + order
    ELSE.
      lv_tab_key = 'primary_key'. " path + name
    ENDIF.

    LOOP AT mt_json_tree ASSIGNING <n> USING KEY (lv_tab_key) WHERE path = iv_parent_path.
      IF lv_first_done = abap_false.
        lv_first_done = abap_true.
      ELSEIF mv_indent_step > 0.
        APPEND gv_comma_with_lf TO mt_buffer.
      ELSE.
        APPEND ',' TO mt_buffer.
      ENDIF.
      stringify_node( <n> ).
    ENDLOOP.

    IF mv_indent_step > 0 AND lv_first_done = abap_true. " only of items were in the list
      APPEND cl_abap_char_utilities=>newline TO mt_buffer.
    ENDIF.

  ENDMETHOD.

  METHOD escape_string.

    rv_escaped = iv_unescaped.
    IF rv_escaped CA |"\\\t\n\r|.
      " TODO consider performance ...
      " see also https://www.json.org/json-en.html
      rv_escaped = replace(
        val = rv_escaped
        sub = '\'
        with = '\\'
        occ = 0 ).
      rv_escaped = replace(
        val = rv_escaped
        sub = |\n|
        with = '\n'
        occ = 0 ).
      rv_escaped = replace(
        val = rv_escaped
        sub = |\r|
        with = '\r'
        occ = 0 ).
      rv_escaped = replace(
        val = rv_escaped
        sub = |\t|
        with = '\t'
        occ = 0 ).
      rv_escaped = replace(
        val = rv_escaped
        sub = '"'
        with = '\"'
        occ = 0 ).

    ENDIF.

  ENDMETHOD.

ENDCLASS.
**********************************************************************
* JSON_TO_ABAP
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_json_to_abap
CLASS kHGwlzUrcuWxYGvxpUmmXxNdxsjJjI DEFINITION FINAL.
  PUBLIC SECTION.

    METHODS constructor
      IMPORTING
        !iv_corresponding  TYPE abap_bool DEFAULT abap_false
        !ii_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL.

    METHODS to_abap
      IMPORTING
        it_nodes    TYPE z2ui5_if_ajson_types=>ty_nodes_ts
      CHANGING
        c_container TYPE any
      RAISING
        z2ui5_cx_ajson_error.

    METHODS to_timestamp
      IMPORTING
        iv_value         TYPE z2ui5_if_ajson_types=>ty_node-value
      RETURNING
        VALUE(rv_result) TYPE timestamp
      RAISING
        z2ui5_cx_ajson_error.

    METHODS to_date
      IMPORTING
        iv_value         TYPE z2ui5_if_ajson_types=>ty_node-value
      RETURNING
        VALUE(rv_result) TYPE d
      RAISING
        z2ui5_cx_ajson_error.

    METHODS to_time
      IMPORTING
        iv_value         TYPE z2ui5_if_ajson_types=>ty_node-value
      RETURNING
        VALUE(rv_result) TYPE t
      RAISING
        z2ui5_cx_ajson_error.

  PRIVATE SECTION.

    TYPES:
      BEGIN OF ty_type_cache,
        type_path         TYPE string,
        target_field_name TYPE string,
        dd                TYPE REF TO cl_abap_datadescr,
        type_kind         LIKE iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>any,
        tab_item_buf      TYPE REF TO data,
      END OF ty_type_cache.
    TYPES temp16_2bef26ae20 TYPE HASHED TABLE OF ty_type_cache WITH UNIQUE KEY type_path.
DATA mt_node_type_cache TYPE temp16_2bef26ae20.

    DATA mr_nodes TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.
    DATA mi_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping.
    DATA mv_corresponding TYPE abap_bool.

    METHODS any_to_abap
      IMPORTING
        iv_path         TYPE string
        is_parent_type  TYPE ty_type_cache OPTIONAL
        i_container_ref TYPE REF TO data
      RAISING
        z2ui5_cx_ajson_error.

    METHODS value_to_abap
      IMPORTING
        is_node         TYPE z2ui5_if_ajson_types=>ty_node
        is_node_type    TYPE ty_type_cache
        i_container_ref TYPE REF TO data
      RAISING
        z2ui5_cx_ajson_error
        cx_sy_conversion_no_number.

    METHODS get_node_type
      IMPORTING
        is_node             TYPE z2ui5_if_ajson_types=>ty_node OPTIONAL " Empty for root
        is_parent_type      TYPE ty_type_cache OPTIONAL
        i_container_ref     TYPE REF TO data OPTIONAL
      RETURNING
        VALUE(rs_node_type) TYPE ty_type_cache
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmXxNdxsjJjI IMPLEMENTATION.

  METHOD constructor.
    mi_custom_mapping = ii_custom_mapping.
    mv_corresponding  = iv_corresponding.
  ENDMETHOD.

  METHOD to_abap.

    DATA lr_ref TYPE REF TO data.

    CLEAR c_container. " what about data/obj refs ?
    CLEAR mt_node_type_cache.

    GET REFERENCE OF c_container INTO lr_ref.
    GET REFERENCE OF it_nodes INTO mr_nodes.

    get_node_type( i_container_ref = lr_ref ). " Pre-cache root node type

    any_to_abap(
      iv_path         = ''
      i_container_ref = lr_ref ).

  ENDMETHOD.

  METHOD get_node_type.

    DATA lv_node_type_path TYPE string.
    DATA lo_sdescr TYPE REF TO cl_abap_structdescr.
    DATA lo_tdescr TYPE REF TO cl_abap_tabledescr.
    DATA lo_ddescr TYPE REF TO cl_abap_datadescr.

    " Calculate type path
    IF is_parent_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
      lv_node_type_path = is_parent_type-type_path && '/-'. " table item type
    ELSEIF is_parent_type-type_kind IS NOT INITIAL.
      lv_node_type_path = is_parent_type-type_path && '/' && is_node-name.
    ENDIF. " For root node lv_node_type_path remains ''

    " Get or create cached
    READ TABLE mt_node_type_cache INTO rs_node_type WITH KEY type_path = lv_node_type_path.
    IF sy-subrc <> 0.

      rs_node_type-type_path         = lv_node_type_path.

      IF mi_custom_mapping IS BOUND.
        rs_node_type-target_field_name = to_upper( mi_custom_mapping->to_abap(
          iv_path = is_node-path
          iv_name = is_node-name ) ).
        IF rs_node_type-target_field_name IS INITIAL.
          rs_node_type-target_field_name = to_upper( is_node-name ).
        ENDIF.
      ELSE.
        rs_node_type-target_field_name = to_upper( is_node-name ).
      ENDIF.

      CASE is_parent_type-type_kind.
        WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
          lo_tdescr ?= is_parent_type-dd.
          rs_node_type-dd = lo_tdescr->get_table_line_type( ).

        WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_flat OR iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_deep.
          lo_sdescr ?= is_parent_type-dd.
          lo_sdescr->get_component_type(
            EXPORTING
              p_name      = rs_node_type-target_field_name
            RECEIVING
              p_descr_ref = rs_node_type-dd
            EXCEPTIONS
              component_not_found = 4 ).
          IF sy-subrc <> 0.
            IF mv_corresponding = abap_false.
              z2ui5_cx_ajson_error=>raise( |Path not found| ).
            ELSE.
              CLEAR rs_node_type.
              RETURN.
            ENDIF.
          ENDIF.

        WHEN ''. " Root node
          rs_node_type-dd ?= cl_abap_typedescr=>describe_by_data_ref( i_container_ref ).

        WHEN OTHERS.
          z2ui5_cx_ajson_error=>raise( |Unexpected parent type| ).
      ENDCASE.

      rs_node_type-type_kind         = rs_node_type-dd->type_kind. " for caching and cleaner uninitialized access
      IF rs_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
        lo_tdescr ?= rs_node_type-dd.
        IF lo_tdescr->table_kind <> cl_abap_tabledescr=>tablekind_std.
          lo_ddescr = lo_tdescr->get_table_line_type( ).
          CREATE DATA rs_node_type-tab_item_buf TYPE HANDLE lo_ddescr.
        ENDIF.
      ENDIF.

      INSERT rs_node_type INTO TABLE mt_node_type_cache.
    ENDIF.

  ENDMETHOD.

  METHOD any_to_abap.

    DATA ls_node_type LIKE LINE OF mt_node_type_cache.
    DATA lx_ajson TYPE REF TO z2ui5_cx_ajson_error.
    DATA lx_root TYPE REF TO cx_root.
    DATA lr_target_field TYPE REF TO data.

    FIELD-SYMBOLS <n> TYPE z2ui5_if_ajson_types=>ty_node.
    FIELD-SYMBOLS <parent_stdtab> TYPE STANDARD TABLE.
    FIELD-SYMBOLS <parent_anytab> TYPE ANY TABLE.
    FIELD-SYMBOLS <parent_struc> TYPE any.
    FIELD-SYMBOLS <tab_item> TYPE any.

    " Assign container
    CASE is_parent_type-type_kind.
      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
        IF is_parent_type-tab_item_buf IS BOUND. " Indirect hint that table was sorted/hashed, see get_node_type.
          ASSIGN i_container_ref->* TO <parent_anytab>.
          ASSERT sy-subrc = 0.

          lr_target_field = is_parent_type-tab_item_buf. " For hashed/sorted table - same buffer for all children
          ASSIGN is_parent_type-tab_item_buf->* TO <tab_item>.
          ASSERT sy-subrc = 0.

        ELSE.
          ASSIGN i_container_ref->* TO <parent_stdtab>.
          ASSERT sy-subrc = 0.
        ENDIF.

      WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_flat OR iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_deep.
        ASSIGN i_container_ref->* TO <parent_struc>.
        ASSERT sy-subrc = 0.
    ENDCASE.

    TRY.

        " array_index because stringified index goes in wrong order [1, 10, 2 ...]
        LOOP AT mr_nodes->* ASSIGNING <n> USING KEY array_index WHERE path = iv_path.

          " Get or create type cache record
          IF is_parent_type-type_kind <> iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table OR ls_node_type-type_kind IS INITIAL.
            " table records are the same, no need to refetch twice

            ls_node_type = get_node_type(
            is_node        = <n>
            is_parent_type = is_parent_type ).

            IF mv_corresponding = abap_true AND ls_node_type IS INITIAL.
              CONTINUE.
            ENDIF.

          ENDIF.

          " Validate node type
          IF ls_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>data_ref OR
           ls_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>object_ref.
            " TODO maybe in future
            z2ui5_cx_ajson_error=>raise( 'Cannot assign to ref' ).
          ENDIF.

          " Find target field reference
          CASE is_parent_type-type_kind.
            WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
              IF NOT ls_node_type-target_field_name CO '0123456789'.
                " Does not affect anything actually but for integrity
                z2ui5_cx_ajson_error=>raise( 'Need index to access tables' ).
              ENDIF.

              IF is_parent_type-tab_item_buf IS NOT BOUND. " Indirect hint that table was srt/hsh, see get_node_type
                APPEND INITIAL LINE TO <parent_stdtab> REFERENCE INTO lr_target_field.
                ASSERT sy-subrc = 0.
              ELSE.
                CLEAR <tab_item>.
              ENDIF.

            WHEN iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_flat OR iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_deep.
              FIELD-SYMBOLS <field> TYPE any.
              ASSIGN COMPONENT ls_node_type-target_field_name OF STRUCTURE <parent_struc> TO <field>.
              ASSERT sy-subrc = 0.
              GET REFERENCE OF <field> INTO lr_target_field.

            WHEN ''. " Root node
              lr_target_field = i_container_ref.

            WHEN OTHERS.
              z2ui5_cx_ajson_error=>raise( 'Unexpected parent type' ).
          ENDCASE.

          " Process value assignment
          CASE <n>-type.
            WHEN z2ui5_if_ajson_types=>node_type-object.
              IF ls_node_type-type_kind <> iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_flat AND
               ls_node_type-type_kind <> iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>struct_deep.
                z2ui5_cx_ajson_error=>raise( 'Expected structure' ).
              ENDIF.
              any_to_abap(
              iv_path         = <n>-path && <n>-name && '/'
              is_parent_type  = ls_node_type
              i_container_ref = lr_target_field ).

            WHEN z2ui5_if_ajson_types=>node_type-array.
              IF NOT ls_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>table.
                z2ui5_cx_ajson_error=>raise( 'Expected table' ).
              ENDIF.
              any_to_abap(
              iv_path         = <n>-path && <n>-name && '/'
              is_parent_type  = ls_node_type
              i_container_ref = lr_target_field ).

            WHEN OTHERS.
              value_to_abap(
              is_node         = <n>
              is_node_type    = ls_node_type
              i_container_ref = lr_target_field ).
          ENDCASE.

          IF is_parent_type-tab_item_buf IS BOUND. " Indirect hint that table was sorted/hashed, see get_node_type.
            TRY.
                INSERT <tab_item> INTO TABLE <parent_anytab>.
                IF sy-subrc <> 0.
                  z2ui5_cx_ajson_error=>raise( 'Duplicate insertion' ).
                ENDIF.
              CATCH cx_sy_itab_duplicate_key.
                z2ui5_cx_ajson_error=>raise( 'Duplicate insertion' ).
            ENDTRY.
          ENDIF.

        ENDLOOP.

      CATCH z2ui5_cx_ajson_error INTO lx_ajson.
        IF lx_ajson->location IS INITIAL.
          lx_ajson->set_location( <n>-path && <n>-name ).
        ENDIF.
        RAISE EXCEPTION lx_ajson.
      CATCH cx_sy_conversion_no_number.
        z2ui5_cx_ajson_error=>raise(
        iv_msg = 'Source is not a number'
        iv_location = <n>-path && <n>-name ).
      CATCH cx_root INTO lx_root.
        z2ui5_cx_ajson_error=>raise(
        iv_msg = lx_root->get_text( )
        iv_location = <n>-path && <n>-name ).
    ENDTRY.

  ENDMETHOD.

  METHOD value_to_abap.

    FIELD-SYMBOLS <container> TYPE any.

    IF is_node_type-type_kind CA iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>deep_targets.
      z2ui5_cx_ajson_error=>raise( |Unsupported target for value [{ is_node_type-type_kind }]| ).
    ENDIF.

    ASSIGN i_container_ref->* TO <container>.
    ASSERT sy-subrc = 0.

    CASE is_node-type.
      WHEN z2ui5_if_ajson_types=>node_type-null.
        " Do nothing
      WHEN z2ui5_if_ajson_types=>node_type-boolean.
        " TODO: check type ?
        <container> = boolc( is_node-value = 'true' ).
      WHEN z2ui5_if_ajson_types=>node_type-number.
        " TODO: check type ?
        <container> = is_node-value.

      WHEN z2ui5_if_ajson_types=>node_type-string.
        " TODO: check type ?
        IF is_node-value IS NOT INITIAL.
          IF is_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>date.
            <container> = to_date( is_node-value ).
          ELSEIF is_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>time.
            <container> = to_time( is_node-value ).
          ELSEIF is_node_type-dd->absolute_name = '\TYPE=TIMESTAMP'
            OR is_node_type-dd->absolute_name = '\TYPE=TIMESTAMPL'.
            <container> = to_timestamp( is_node-value ).
          ELSEIF is_node_type-type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>packed. " Number as a string, but not a timestamp
            <container> = is_node-value.
          ELSE.
            <container> = is_node-value.
          ENDIF.
        ELSE.
          <container> = is_node-value.
        ENDIF.
      WHEN OTHERS.
        z2ui5_cx_ajson_error=>raise( |Unexpected JSON type [{ is_node-type }]| ).
    ENDCASE.

  ENDMETHOD.

  METHOD to_date.

    DATA lv_y TYPE c LENGTH 4.
    DATA lv_m TYPE c LENGTH 2.
    DATA lv_d TYPE c LENGTH 2.

    FIND FIRST OCCURRENCE OF REGEX '^(\d{4})-(\d{2})-(\d{2})(T|$)'
      IN iv_value
      SUBMATCHES lv_y lv_m lv_d.
    IF sy-subrc <> 0.
      z2ui5_cx_ajson_error=>raise( 'Unexpected date format' ).
    ENDIF.
    CONCATENATE lv_y lv_m lv_d INTO rv_result.

  ENDMETHOD.

  METHOD to_timestamp.

    CONSTANTS lc_utc TYPE c LENGTH 6 VALUE 'UTC'.
    CONSTANTS lc_regex_ts_with_hour TYPE string
      VALUE `^(\d{4})-(\d{2})-(\d{2})(T)(\d{2}):(\d{2}):(\d{2})(\+)(\d{2}):(\d{2})`.
    CONSTANTS lc_regex_ts_utc TYPE string
      VALUE `^(\d{4})-(\d{2})-(\d{2})(T)(\d{2}):(\d{2}):(\d{2})(Z|$)`.

    DATA:
      BEGIN OF ls_timestamp,
        year         TYPE c LENGTH 4,
        month        TYPE c LENGTH 2,
        day          TYPE c LENGTH 2,
        t            TYPE c LENGTH 1,
        hour         TYPE c LENGTH 2,
        minute       TYPE c LENGTH 2,
        second       TYPE c LENGTH 2,
        local_sign   TYPE c LENGTH 1,
        local_hour   TYPE c LENGTH 2,
        local_minute TYPE c LENGTH 2,
      END OF ls_timestamp.

    DATA lv_date TYPE d.
    DATA lv_time TYPE t.
    DATA lv_seconds_conv TYPE i.
    DATA lv_timestamp TYPE timestampl.

    FIND FIRST OCCURRENCE OF REGEX lc_regex_ts_with_hour
      IN iv_value SUBMATCHES
        ls_timestamp-year ls_timestamp-month ls_timestamp-day ls_timestamp-t
        ls_timestamp-hour ls_timestamp-minute ls_timestamp-second
        ls_timestamp-local_sign ls_timestamp-local_hour ls_timestamp-local_minute.

    IF sy-subrc = 0.

      lv_seconds_conv = ( ls_timestamp-local_hour * 3600 ) + ( ls_timestamp-local_minute * 60 ).

    ELSE.

      FIND FIRST OCCURRENCE OF REGEX lc_regex_ts_utc
        IN iv_value SUBMATCHES
          ls_timestamp-year ls_timestamp-month ls_timestamp-day ls_timestamp-t
          ls_timestamp-hour ls_timestamp-minute ls_timestamp-second.

      IF sy-subrc <> 0.
        z2ui5_cx_ajson_error=>raise( 'Unexpected timestamp format' ).
      ENDIF.

    ENDIF.

    CONCATENATE ls_timestamp-year ls_timestamp-month ls_timestamp-day INTO lv_date.
    CONCATENATE ls_timestamp-hour ls_timestamp-minute ls_timestamp-second INTO lv_time.

    CONVERT DATE lv_date TIME lv_time INTO TIME STAMP lv_timestamp TIME ZONE lc_utc.

    TRY.

        CASE ls_timestamp-local_sign.
          WHEN '-'.
            lv_timestamp = cl_abap_tstmp=>add(
            tstmp = lv_timestamp
            secs  = lv_seconds_conv ).
          WHEN '+'.
            lv_timestamp = cl_abap_tstmp=>subtractsecs(
            tstmp = lv_timestamp
            secs  = lv_seconds_conv ).
        ENDCASE.

      CATCH cx_parameter_invalid_range cx_parameter_invalid_type.
        z2ui5_cx_ajson_error=>raise( 'Unexpected error calculating timestamp' ).
    ENDTRY.

    IF lv_timestamp IS NOT INITIAL.
      cl_abap_tstmp=>move(
        EXPORTING
          tstmp_src = lv_timestamp
        IMPORTING
          tstmp_tgt = rv_result ).
    ENDIF.

  ENDMETHOD.

  METHOD to_time.

    DATA lv_h TYPE c LENGTH 2.
    DATA lv_m TYPE c LENGTH 2.
    DATA lv_s TYPE c LENGTH 2.

    FIND FIRST OCCURRENCE OF REGEX '^(\d{2}):(\d{2}):(\d{2})(T|$)'
      IN iv_value
      SUBMATCHES lv_h lv_m lv_s.
    IF sy-subrc <> 0.
      z2ui5_cx_ajson_error=>raise( 'Unexpected time format' ).
    ENDIF.
    CONCATENATE lv_h lv_m lv_s INTO rv_result.

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* ABAP_TO_JSON
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_abap_to_json
CLASS kHGwlzUrcuWxYGvxpUmmeJqampzabz DEFINITION FINAL.
  PUBLIC SECTION.

    CLASS-METHODS convert
      IMPORTING
        iv_data           TYPE any
        is_prefix         TYPE z2ui5_if_ajson_types=>ty_path_name OPTIONAL
        iv_array_index    TYPE i DEFAULT 0
        ii_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        is_opts           TYPE z2ui5_if_ajson=>ty_opts OPTIONAL
        iv_item_order     TYPE i DEFAULT 0
      RETURNING
        VALUE(rt_nodes)   TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    CLASS-METHODS insert_with_type
      IMPORTING
        iv_data           TYPE any
        iv_type           TYPE z2ui5_if_ajson_types=>ty_node_type
        is_prefix         TYPE z2ui5_if_ajson_types=>ty_path_name OPTIONAL
        iv_array_index    TYPE i DEFAULT 0
        ii_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping OPTIONAL
        is_opts           TYPE z2ui5_if_ajson=>ty_opts OPTIONAL
        iv_item_order     TYPE i DEFAULT 0
      RETURNING
        VALUE(rt_nodes)   TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    CLASS-METHODS format_date
      IMPORTING
        iv_date       TYPE d
      RETURNING
        VALUE(rv_str) TYPE string.
    CLASS-METHODS format_time
      IMPORTING
        iv_time       TYPE t
      RETURNING
        VALUE(rv_str) TYPE string.
    CLASS-METHODS format_timestamp
      IMPORTING
        iv_ts         TYPE timestamp
      RETURNING
        VALUE(rv_str) TYPE string.

    CLASS-METHODS class_constructor.

  PRIVATE SECTION.

    CLASS-DATA gv_ajson_absolute_type_name TYPE string.
    DATA mi_custom_mapping TYPE REF TO z2ui5_if_ajson_mapping.
    DATA mv_keep_item_order TYPE abap_bool.
    DATA mv_format_datetime TYPE abap_bool.

    METHODS convert_any
      IMPORTING
        iv_data       TYPE any
        io_type       TYPE REF TO cl_abap_typedescr
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS convert_ajson
      IMPORTING
        io_json       TYPE REF TO z2ui5_if_ajson
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS convert_value
      IMPORTING
        iv_data       TYPE any
        io_type       TYPE REF TO cl_abap_typedescr
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS convert_ref
      IMPORTING
        iv_data       TYPE any
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS convert_struc
      IMPORTING
        iv_data       TYPE any
        io_type       TYPE REF TO cl_abap_typedescr
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS convert_table
      IMPORTING
        iv_data       TYPE any
        io_type       TYPE REF TO cl_abap_typedescr
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

    METHODS insert_value_with_type
      IMPORTING
        iv_data       TYPE any
        iv_type       TYPE z2ui5_if_ajson_types=>ty_node_type
        io_type       TYPE REF TO cl_abap_typedescr
        is_prefix     TYPE z2ui5_if_ajson_types=>ty_path_name
        iv_index      TYPE i DEFAULT 0
        iv_item_order TYPE i DEFAULT 0
      CHANGING
        ct_nodes      TYPE z2ui5_if_ajson_types=>ty_nodes_tt
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmeJqampzabz IMPLEMENTATION.

  METHOD class_constructor.

    DATA lo_dummy TYPE REF TO z2ui5_cl_ajson.
    DATA lo_type TYPE REF TO cl_abap_refdescr.
    lo_type ?= cl_abap_typedescr=>describe_by_data( lo_dummy ).
    gv_ajson_absolute_type_name = lo_type->get_referenced_type( )->absolute_name.

  ENDMETHOD.

  METHOD convert.

    DATA lo_type TYPE REF TO cl_abap_typedescr.
    DATA lo_converter TYPE REF TO kHGwlzUrcuWxYGvxpUmmeJqampzabz.

    lo_type = cl_abap_typedescr=>describe_by_data( iv_data ).

    CREATE OBJECT lo_converter.
    lo_converter->mi_custom_mapping  = ii_custom_mapping.
    lo_converter->mv_keep_item_order = is_opts-keep_item_order.
    lo_converter->mv_format_datetime = is_opts-format_datetime.

    lo_converter->convert_any(
      EXPORTING
        iv_data       = iv_data
        io_type       = lo_type
        is_prefix     = is_prefix
        iv_index      = iv_array_index
        iv_item_order = iv_item_order
      CHANGING
        ct_nodes = rt_nodes ).

  ENDMETHOD.

  METHOD convert_any.

    CASE io_type->kind.
      WHEN cl_abap_typedescr=>kind_elem.
        convert_value(
          EXPORTING
            iv_data   = iv_data
            io_type   = io_type
            is_prefix = is_prefix
            iv_index  = iv_index
            iv_item_order = iv_item_order
          CHANGING
            ct_nodes = ct_nodes ).

      WHEN cl_abap_typedescr=>kind_struct.
        convert_struc(
          EXPORTING
            iv_data   = iv_data
            io_type   = io_type
            is_prefix = is_prefix
            iv_index  = iv_index
            iv_item_order = iv_item_order
          CHANGING
            ct_nodes = ct_nodes ).

      WHEN cl_abap_typedescr=>kind_table.
        convert_table(
          EXPORTING
            iv_data   = iv_data
            io_type   = io_type
            is_prefix = is_prefix
            iv_index  = iv_index
            iv_item_order = iv_item_order
          CHANGING
            ct_nodes = ct_nodes ).

      WHEN OTHERS.

        IF io_type->type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>data_ref OR iv_data IS INITIAL.
          " Convert data references and initial references to other types (like ref to class or interface)
          " Initial references will result in "null"
          convert_ref(
            EXPORTING
              iv_data   = iv_data
              is_prefix = is_prefix
              iv_index  = iv_index
              iv_item_order = iv_item_order
            CHANGING
              ct_nodes = ct_nodes ).

        ELSEIF io_type->type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>object_ref
          AND cl_abap_typedescr=>describe_by_object_ref( iv_data )->absolute_name = gv_ajson_absolute_type_name.
          convert_ajson(
            EXPORTING
              io_json   = iv_data
              is_prefix = is_prefix
              iv_index  = iv_index
              iv_item_order = iv_item_order
            CHANGING
              ct_nodes = ct_nodes ).
        ELSE.
          z2ui5_cx_ajson_error=>raise( |Unsupported type [{ io_type->type_kind
            }] @{ is_prefix-path && is_prefix-name }| ).
        ENDIF.

    ENDCASE.

  ENDMETHOD.

  METHOD convert_ajson.

    FIELD-SYMBOLS <src> LIKE LINE OF ct_nodes.
    FIELD-SYMBOLS <dst> LIKE LINE OF ct_nodes.

    IF io_json IS NOT BOUND.
      RETURN.
    ENDIF.

    LOOP AT io_json->mt_json_tree ASSIGNING <src>.
      APPEND <src> TO ct_nodes ASSIGNING <dst>.

      IF <dst>-path IS INITIAL AND <dst>-name IS INITIAL. " root node
        <dst>-path  = is_prefix-path.
        <dst>-name  = is_prefix-name.
        <dst>-index = iv_index.
        <dst>-order = iv_item_order.
      ELSE.
        <dst>-path = is_prefix-path && is_prefix-name && <dst>-path.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.

  METHOD format_date.
    IF iv_date IS NOT INITIAL.
      rv_str = iv_date+0(4) && '-' && iv_date+4(2) && '-' && iv_date+6(2).
    ENDIF.
  ENDMETHOD.

  METHOD format_time.
    IF iv_time IS NOT INITIAL.
      rv_str = iv_time+0(2) && ':' && iv_time+2(2) && ':' && iv_time+4(2).
    ENDIF.
  ENDMETHOD.

  METHOD format_timestamp.

    CONSTANTS lc_utc TYPE c LENGTH 6 VALUE 'UTC'.

    DATA lv_date TYPE d.
    DATA lv_time TYPE t.

    CONVERT TIME STAMP iv_ts TIME ZONE lc_utc
      INTO DATE lv_date TIME lv_time.

    rv_str =
      lv_date+0(4) && '-' && lv_date+4(2) && '-' && lv_date+6(2) &&
      'T' &&
      lv_time+0(2) && ':' && lv_time+2(2) && ':' && lv_time+4(2) &&
      'Z'.

  ENDMETHOD.

  METHOD convert_value.

    DATA ls_node LIKE LINE OF ct_nodes.

    ls_node-path  = is_prefix-path.
    ls_node-name  = is_prefix-name.
    ls_node-index = iv_index.
    ls_node-order = iv_item_order.

    IF ls_node-name IS INITIAL.
      ls_node-name  = is_prefix-name.
    ENDIF.

    IF io_type->absolute_name = '\TYPE-POOL=ABAP\TYPE=ABAP_BOOL'
        OR io_type->absolute_name = '\TYPE=ABAP_BOOLEAN'
        OR io_type->absolute_name = '\TYPE=XSDBOOLEAN'
        OR io_type->absolute_name = '\TYPE=FLAG'
        OR io_type->absolute_name = '\TYPE=XFELD'.
      ls_node-type = z2ui5_if_ajson_types=>node_type-boolean.
      IF iv_data IS NOT INITIAL.
        ls_node-value = 'true'.
      ELSE.
        ls_node-value = 'false'.
      ENDIF.
    ELSEIF io_type->absolute_name = '\TYPE=TIMESTAMP'.
      IF mv_format_datetime = abap_true.
        ls_node-type  = z2ui5_if_ajson_types=>node_type-string.
        ls_node-value = format_timestamp( iv_data ).
      ELSE.
        ls_node-type  = z2ui5_if_ajson_types=>node_type-number.
        ls_node-value = |{ iv_data }|.
      ENDIF.
    ELSEIF io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts OR
           io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>binary OR
           io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>enum.
      ls_node-type = z2ui5_if_ajson_types=>node_type-string.
      ls_node-value = |{ iv_data }|.
    ELSEIF io_type->type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>date.
      ls_node-type = z2ui5_if_ajson_types=>node_type-string.
      IF mv_format_datetime = abap_true.
        ls_node-value = format_date( iv_data ).
      ELSE.
        ls_node-value = |{ iv_data }|.
      ENDIF.
    ELSEIF io_type->type_kind = iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>time.
      ls_node-type = z2ui5_if_ajson_types=>node_type-string.
      IF mv_format_datetime = abap_true.
        ls_node-value = format_time( iv_data ).
      ELSE.
        ls_node-value = |{ iv_data }|.
      ENDIF.
    ELSEIF io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>numeric.
      ls_node-type = z2ui5_if_ajson_types=>node_type-number.
      ls_node-value = |{ iv_data }|.
    ELSE.
      z2ui5_cx_ajson_error=>raise( |Unexpected elementary type [{
        io_type->type_kind }] @{ is_prefix-path && is_prefix-name }| ).
    ENDIF.

    APPEND ls_node TO ct_nodes.

  ENDMETHOD.

  METHOD convert_ref.

    DATA ls_node LIKE LINE OF ct_nodes.

    ls_node-path  = is_prefix-path.
    ls_node-name  = is_prefix-name.
    ls_node-index = iv_index.
    ls_node-order = iv_item_order.

    IF mi_custom_mapping IS BOUND.
      ls_node-name = mi_custom_mapping->to_json(
        iv_path = is_prefix-path
        iv_name = is_prefix-name ).
    ENDIF.

    IF ls_node-name IS INITIAL.
      ls_node-name  = is_prefix-name.
    ENDIF.

    IF iv_data IS INITIAL.
      ls_node-type  = z2ui5_if_ajson_types=>node_type-null.
      ls_node-value = 'null'.
    ELSE.
      " TODO support data references
      z2ui5_cx_ajson_error=>raise( |Unexpected reference @{ is_prefix-path && is_prefix-name }| ).
    ENDIF.

    APPEND ls_node TO ct_nodes.

  ENDMETHOD.

  METHOD convert_struc.

    DATA lo_struc TYPE REF TO cl_abap_structdescr.
    DATA lt_comps TYPE cl_abap_structdescr=>included_view.
    DATA ls_next_prefix LIKE is_prefix.
    DATA lv_mapping_prefix_name LIKE is_prefix-name.
    DATA lv_item_order TYPE i.
    DATA ls_root LIKE LINE OF ct_nodes.

    FIELD-SYMBOLS <root> LIKE ls_root.
    FIELD-SYMBOLS <c> LIKE LINE OF lt_comps.
    FIELD-SYMBOLS <val> TYPE any.

    " Object root

    ls_root-path  = is_prefix-path.
    ls_root-name  = is_prefix-name.
    ls_root-type  = z2ui5_if_ajson_types=>node_type-object.
    ls_root-index = iv_index.

    IF mi_custom_mapping IS BOUND.
      ls_root-name = mi_custom_mapping->to_json(
        iv_path = is_prefix-path
        iv_name = is_prefix-name ).
    ENDIF.

    IF ls_root-name IS INITIAL.
      ls_root-name  = is_prefix-name.
    ENDIF.

    ls_root-order = iv_item_order.

    APPEND ls_root TO ct_nodes ASSIGNING <root>.

    " Object attributes

    lo_struc ?= io_type.
    lt_comps = lo_struc->get_included_view( ).
    " replaced call to get_components() with get_included_view() to avoid problems with suffixes in includes.
    " get_components is potentially much slower than lo_struc->components
    " but ! we still need it to identify booleans
    " and rtti seems to cache type descriptions really well (https://github.com/sbcgua/benchmarks.git)
    " the structures will be repeated in real life

    ls_next_prefix-path = is_prefix-path && <root>-name && '/'.

    LOOP AT lt_comps ASSIGNING <c>.
      CLEAR lv_mapping_prefix_name.

      <root>-children = <root>-children + 1.
      ls_next_prefix-name = to_lower( <c>-name ).
      ASSIGN COMPONENT <c>-name OF STRUCTURE iv_data TO <val>.
      ASSERT sy-subrc = 0.

      IF mi_custom_mapping IS BOUND AND <c>-type->kind = cl_abap_typedescr=>kind_elem.
        lv_mapping_prefix_name = mi_custom_mapping->to_json( iv_path = ls_next_prefix-path
                                                             iv_name = ls_next_prefix-name ).
      ENDIF.

      IF lv_mapping_prefix_name IS NOT INITIAL.
        ls_next_prefix-name = lv_mapping_prefix_name.
      ENDIF.

      IF mv_keep_item_order = abap_true.
        lv_item_order = <root>-children.
      ENDIF.

      convert_any(
        EXPORTING
          iv_data   = <val>
          io_type   = <c>-type
          is_prefix = ls_next_prefix
          iv_item_order = lv_item_order
        CHANGING
          ct_nodes = ct_nodes ).

    ENDLOOP.

  ENDMETHOD.

  METHOD convert_table.

    DATA lo_table TYPE REF TO cl_abap_tabledescr.
    DATA lo_ltype TYPE REF TO cl_abap_typedescr.
    DATA ls_next_prefix LIKE is_prefix.
    DATA lv_tabix TYPE sy-tabix.
    DATA ls_root LIKE LINE OF ct_nodes.

    FIELD-SYMBOLS <root> LIKE ls_root.
    FIELD-SYMBOLS <tab> TYPE ANY TABLE.
    FIELD-SYMBOLS <val> TYPE any.

    " Array root

    ls_root-path  = is_prefix-path.
    ls_root-name  = is_prefix-name.
    ls_root-type  = z2ui5_if_ajson_types=>node_type-array.
    ls_root-index = iv_index.
    ls_root-order = iv_item_order.

    IF mi_custom_mapping IS BOUND.
      ls_root-name = mi_custom_mapping->to_json(
        iv_path = is_prefix-path
        iv_name = is_prefix-name ).
    ENDIF.

    IF ls_root-name IS INITIAL.
      ls_root-name  = is_prefix-name.
    ENDIF.

    APPEND ls_root TO ct_nodes ASSIGNING <root>.

    " Array items

    lo_table ?= io_type.
    lo_ltype  = lo_table->get_table_line_type( ).

    ls_next_prefix-path = is_prefix-path && <root>-name && '/'.
    ASSIGN iv_data TO <tab>.

    lv_tabix = 1.
    LOOP AT <tab> ASSIGNING <val>.
      ls_next_prefix-name = to_lower( |{ lv_tabix }| ).

      convert_any(
        EXPORTING
          iv_data   = <val>
          io_type   = lo_ltype
          is_prefix = ls_next_prefix
          iv_index  = <root>-children + 1
        CHANGING
          ct_nodes = ct_nodes ).

      <root>-children = <root>-children + 1.
      lv_tabix = lv_tabix + 1.
    ENDLOOP.

  ENDMETHOD.

  METHOD insert_with_type.

    DATA lo_type TYPE REF TO cl_abap_typedescr.
    DATA lo_converter TYPE REF TO kHGwlzUrcuWxYGvxpUmmeJqampzabz.

    lo_type = cl_abap_typedescr=>describe_by_data( iv_data ).

    CREATE OBJECT lo_converter.
    lo_converter->mi_custom_mapping  = ii_custom_mapping.
    lo_converter->mv_keep_item_order = is_opts-keep_item_order.
    lo_converter->mv_format_datetime = is_opts-format_datetime.

    lo_converter->insert_value_with_type(
      EXPORTING
        iv_data       = iv_data
        iv_type       = iv_type
        io_type       = lo_type
        is_prefix     = is_prefix
        iv_index      = iv_array_index
        iv_item_order = iv_item_order
      CHANGING
        ct_nodes = rt_nodes ).

  ENDMETHOD.

  METHOD insert_value_with_type.

    DATA lv_prefix TYPE string.
    DATA ls_node LIKE LINE OF ct_nodes.

    lv_prefix = is_prefix-path && is_prefix-name.
    IF io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>texts OR
       io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>date OR
       io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>time.
      IF iv_type = z2ui5_if_ajson_types=>node_type-boolean AND iv_data <> 'true' AND iv_data <> 'false'.
        z2ui5_cx_ajson_error=>raise( |Unexpected boolean value [{ iv_data }] @{ lv_prefix }| ).
      ELSEIF iv_type = z2ui5_if_ajson_types=>node_type-null AND iv_data IS NOT INITIAL.
        z2ui5_cx_ajson_error=>raise( |Unexpected null value [{ iv_data }] @{ lv_prefix }| ).
      ELSEIF iv_type = z2ui5_if_ajson_types=>node_type-number AND iv_data CN '0123456789. E+-'.
        z2ui5_cx_ajson_error=>raise( |Unexpected numeric value [{ iv_data }] @{ lv_prefix }| ).
      ELSEIF iv_type <> z2ui5_if_ajson_types=>node_type-string AND iv_type <> z2ui5_if_ajson_types=>node_type-boolean
        AND iv_type <> z2ui5_if_ajson_types=>node_type-null AND iv_type <> z2ui5_if_ajson_types=>node_type-number.
        z2ui5_cx_ajson_error=>raise( |Unexpected type for value [{ iv_type },{ iv_data }] @{ lv_prefix }| ).
      ENDIF.
    ELSEIF io_type->type_kind CO iUFTszUrcuWxYGvxpUmmdAMURRqLkF=>numeric.
      IF iv_type <> z2ui5_if_ajson_types=>node_type-number.
        z2ui5_cx_ajson_error=>raise( |Unexpected value for numeric [{ iv_data }] @{ lv_prefix }| ).
      ENDIF.
    ELSE.
      z2ui5_cx_ajson_error=>raise( |Unexpected type [{ io_type->type_kind }] @{ lv_prefix }| ).
    ENDIF.

    ls_node-path  = is_prefix-path.
    ls_node-name  = is_prefix-name.
    ls_node-index = iv_index.
    ls_node-value = iv_data.
    ls_node-type  = iv_type.
    ls_node-order = iv_item_order.

    IF mi_custom_mapping IS BOUND.
      ls_node-name = mi_custom_mapping->to_json(
        iv_path = is_prefix-path
        iv_name = is_prefix-name ).
    ENDIF.

    IF ls_node-name IS INITIAL.
      ls_node-name  = is_prefix-name.
    ENDIF.

    APPEND ls_node TO ct_nodes.

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* MUTATOR INTERFACE
**********************************************************************

* renamed: z2ui5_cl_ajson :: lif_mutator_runner
INTERFACE iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
  METHODS run
    IMPORTING
      it_source_tree TYPE z2ui5_if_ajson_types=>ty_nodes_ts
    EXPORTING
      et_dest_tree   TYPE z2ui5_if_ajson_types=>ty_nodes_ts
    RAISING
      z2ui5_cx_ajson_error.
ENDINTERFACE.

**********************************************************************
* FILTER RUNNER
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_filter_runner
CLASS kHGwlzUrcuWxYGvxpUmmlwblMIpVBS DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
    CLASS-METHODS new
      IMPORTING
        ii_filter          TYPE REF TO z2ui5_if_ajson_filter
      RETURNING
        VALUE(ro_instance) TYPE REF TO kHGwlzUrcuWxYGvxpUmmlwblMIpVBS.
    METHODS constructor
      IMPORTING
        ii_filter TYPE REF TO z2ui5_if_ajson_filter.

  PRIVATE SECTION.
    DATA mi_filter TYPE REF TO z2ui5_if_ajson_filter.
    DATA mr_source_tree TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.
    DATA mr_dest_tree TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.

    METHODS walk
      IMPORTING
        iv_path   TYPE string
      CHANGING
        cs_parent TYPE z2ui5_if_ajson_types=>ty_node OPTIONAL
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmlwblMIpVBS IMPLEMENTATION.

  METHOD new.
    CREATE OBJECT ro_instance EXPORTING ii_filter = ii_filter.
  ENDMETHOD.

  METHOD constructor.
    ASSERT ii_filter IS BOUND.
    mi_filter = ii_filter.
  ENDMETHOD.

  METHOD iUFTszUrcuWxYGvxpUmmtzVIYRIbuu~run.

    CLEAR et_dest_tree.
    GET REFERENCE OF it_source_tree INTO mr_source_tree.
    GET REFERENCE OF et_dest_tree INTO mr_dest_tree.

    walk( iv_path = '' ).

  ENDMETHOD.

  METHOD walk.

    DATA ls_node TYPE z2ui5_if_ajson_types=>ty_node.
    DATA lv_tab_key TYPE string.

    IF cs_parent-type = z2ui5_if_ajson_types=>node_type-array.
      lv_tab_key = 'array_index'. " path + index
    ENDIF.

    LOOP AT mr_source_tree->* INTO ls_node USING KEY (lv_tab_key) WHERE path = iv_path.
      CASE ls_node-type.
        WHEN z2ui5_if_ajson_types=>node_type-boolean OR z2ui5_if_ajson_types=>node_type-null
          OR z2ui5_if_ajson_types=>node_type-number OR z2ui5_if_ajson_types=>node_type-string.

          IF mi_filter->keep_node( ls_node ) = abap_false.
            CONTINUE.
          ENDIF.

        WHEN z2ui5_if_ajson_types=>node_type-array OR z2ui5_if_ajson_types=>node_type-object.

          IF mi_filter->keep_node(
              is_node  = ls_node
              iv_visit = z2ui5_if_ajson_filter=>visit_type-open ) = abap_false.
            CONTINUE.
          ENDIF.

          " Intentionally clear AFTER "open"
          CLEAR ls_node-children.

          walk(
            EXPORTING
              iv_path = iv_path && ls_node-name && `/`
            CHANGING
              cs_parent    = ls_node ).

          IF mi_filter->keep_node(
              is_node  = ls_node
              iv_visit = z2ui5_if_ajson_filter=>visit_type-close ) = abap_false.
            CONTINUE.
          ENDIF.

        WHEN OTHERS.
          z2ui5_cx_ajson_error=>raise( |Unexpected node type { ls_node-type }| ).
      ENDCASE.

      IF cs_parent IS SUPPLIED.
        cs_parent-children = cs_parent-children + 1.
        IF cs_parent-type = z2ui5_if_ajson_types=>node_type-array.
          ls_node-name  = |{ cs_parent-children }|.
          ls_node-index = cs_parent-children.
        ENDIF.
      ENDIF.
      INSERT ls_node INTO TABLE mr_dest_tree->*.

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* MAPPER RUNNER
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_mapper_runner
CLASS kHGwlzUrcuWxYGvxpUmmhFTcRDbOtm DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
    CLASS-METHODS new
      IMPORTING
        ii_mapper          TYPE REF TO z2ui5_if_ajson_mapping
      RETURNING
        VALUE(ro_instance) TYPE REF TO kHGwlzUrcuWxYGvxpUmmhFTcRDbOtm.
    METHODS constructor
      IMPORTING
        ii_mapper TYPE REF TO z2ui5_if_ajson_mapping.

  PRIVATE SECTION.
    DATA mi_mapper TYPE REF TO z2ui5_if_ajson_mapping.
    DATA mr_source_tree TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.
    DATA mr_dest_tree TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.

    METHODS process_deep_node
      IMPORTING
        iv_path         TYPE string
        iv_renamed_path TYPE string
        iv_node_type    TYPE z2ui5_if_ajson_types=>ty_node-type
      RAISING
        z2ui5_cx_ajson_error.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmhFTcRDbOtm IMPLEMENTATION.

  METHOD new.
    CREATE OBJECT ro_instance EXPORTING ii_mapper = ii_mapper.
  ENDMETHOD.

  METHOD constructor.
    ASSERT ii_mapper IS BOUND.
    mi_mapper = ii_mapper.
  ENDMETHOD.

  METHOD iUFTszUrcuWxYGvxpUmmtzVIYRIbuu~run.

    FIELD-SYMBOLS <root> LIKE LINE OF it_source_tree.

    READ TABLE it_source_tree WITH KEY path = `` name = `` ASSIGNING <root>.
    IF sy-subrc <> 0
      OR NOT ( <root>-type = z2ui5_if_ajson_types=>node_type-array OR <root>-type = z2ui5_if_ajson_types=>node_type-object ).
      " empty or one-value-only tree
      et_dest_tree = it_source_tree.
      RETURN.
    ENDIF.

    CLEAR et_dest_tree.
    GET REFERENCE OF it_source_tree INTO mr_source_tree.
    GET REFERENCE OF et_dest_tree INTO mr_dest_tree.
    INSERT <root> INTO TABLE et_dest_tree.

    process_deep_node(
      iv_path         = `/`
      iv_renamed_path = `/`
      iv_node_type    = <root>-type ).

  ENDMETHOD.

  METHOD process_deep_node.
    FIELD-SYMBOLS <item> LIKE LINE OF mr_source_tree->*.
    DATA ls_renamed_node LIKE <item>.

    LOOP AT mr_source_tree->* ASSIGNING <item> WHERE path = iv_path.
      ls_renamed_node = <item>.
      IF iv_node_type <> z2ui5_if_ajson_types=>node_type-array.
        " don't rename array item names -> they are numeric index
        mi_mapper->rename_node(
          EXPORTING
            is_node = <item>
          CHANGING
            cv_name = ls_renamed_node-name ).
        IF ls_renamed_node-name IS INITIAL.
          z2ui5_cx_ajson_error=>raise(
            iv_msg  = 'Renamed node name cannot be empty'
            is_node = <item> ).
        ENDIF.
      ENDIF.
      ls_renamed_node-path = iv_renamed_path.

      INSERT ls_renamed_node INTO TABLE mr_dest_tree->*.
      IF sy-subrc <> 0. " = 4 ?
        z2ui5_cx_ajson_error=>raise(
          iv_msg  = 'Renamed node has a duplicate'
          is_node = ls_renamed_node ).
      ENDIF.

      " maybe also catch CX_SY_ITAB_DUPLICATE_KEY but secondary keys are not changed here, so not for now

      IF <item>-type = z2ui5_if_ajson_types=>node_type-array OR <item>-type = z2ui5_if_ajson_types=>node_type-object.
        process_deep_node(
          iv_path         = iv_path && <item>-name && `/`
          iv_renamed_path = iv_renamed_path && ls_renamed_node-name && `/`
          iv_node_type    = <item>-type ).
      ENDIF.

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

**********************************************************************
* MUTATOR QUEUE
**********************************************************************

* renamed: z2ui5_cl_ajson :: lcl_mutator_queue
CLASS kHGwlzUrcuWxYGvxpUmmucOpllUiAS DEFINITION FINAL.
  PUBLIC SECTION.
    INTERFACES iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
    CLASS-METHODS new
      RETURNING
        VALUE(ro_instance) TYPE REF TO kHGwlzUrcuWxYGvxpUmmucOpllUiAS.
    METHODS add
      IMPORTING
        ii_mutator     TYPE REF TO iUFTszUrcuWxYGvxpUmmtzVIYRIbuu
      RETURNING
        VALUE(ro_self) TYPE REF TO kHGwlzUrcuWxYGvxpUmmucOpllUiAS.

  PRIVATE SECTION.
    TYPES temp17_be66dd5f11 TYPE STANDARD TABLE OF REF TO iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
DATA mt_queue TYPE temp17_be66dd5f11.

ENDCLASS.

CLASS kHGwlzUrcuWxYGvxpUmmucOpllUiAS IMPLEMENTATION.

  METHOD add.
    IF ii_mutator IS BOUND.
      APPEND ii_mutator TO mt_queue.
    ENDIF.
    ro_self = me.
  ENDMETHOD.

  METHOD new.
    CREATE OBJECT ro_instance.
  ENDMETHOD.

  METHOD iUFTszUrcuWxYGvxpUmmtzVIYRIbuu~run.

    DATA li_mutator TYPE REF TO iUFTszUrcuWxYGvxpUmmtzVIYRIbuu.
    DATA lv_qsize TYPE i.
    FIELD-SYMBOLS <from> LIKE it_source_tree.
    FIELD-SYMBOLS <to> LIKE it_source_tree.
    DATA lr_buf TYPE REF TO z2ui5_if_ajson_types=>ty_nodes_ts.

    lv_qsize = lines( mt_queue ).

    IF lv_qsize = 0.
      et_dest_tree = it_source_tree.
      RETURN.
    ENDIF.

    LOOP AT mt_queue INTO li_mutator.
      IF sy-tabix = 1.
        ASSIGN it_source_tree TO <from>.
      ELSE.
        ASSIGN lr_buf->* TO <from>.
      ENDIF.

      IF sy-tabix = lv_qsize.
        ASSIGN et_dest_tree TO <to>.
      ELSE.
        CREATE DATA lr_buf.
        ASSIGN lr_buf->* TO <to>.
      ENDIF.

      li_mutator->run(
        EXPORTING
          it_source_tree = <from>
        IMPORTING
          et_dest_tree = <to> ).
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

CLASS z2ui5_cl_ajson IMPLEMENTATION.
  METHOD constructor.
    ms_opts-keep_item_order = iv_keep_item_order.
    ms_opts-to_abap_corresponding_only = iv_to_abap_corresponding_only.
    format_datetime( iv_format_datetime ).
  ENDMETHOD.
  METHOD create_empty.
    CREATE OBJECT ro_instance
      EXPORTING
        iv_to_abap_corresponding_only = iv_to_abap_corresponding_only
        iv_format_datetime            = iv_format_datetime
        iv_keep_item_order            = iv_keep_item_order.
    ro_instance->mi_custom_mapping = ii_custom_mapping.
  ENDMETHOD.
  METHOD create_from.

    DATA lo_mutator_queue TYPE REF TO kHGwlzUrcuWxYGvxpUmmucOpllUiAS.

    IF ii_source_json IS NOT BOUND.
      z2ui5_cx_ajson_error=>raise( 'Source not bound' ).
    ENDIF.

    CREATE OBJECT ro_instance
      EXPORTING
        iv_to_abap_corresponding_only = ii_source_json->opts( )-to_abap_corresponding_only
        iv_format_datetime            = ii_source_json->opts( )-format_datetime
        iv_keep_item_order            = ii_source_json->opts( )-keep_item_order.

    IF ii_filter IS NOT BOUND AND ii_mapper IS NOT BOUND.
      ro_instance->mt_json_tree = ii_source_json->mt_json_tree.
    ELSE.
      CREATE OBJECT lo_mutator_queue.
      IF ii_mapper IS BOUND.
        " Mapping goes first. But maybe it should be a freely definable queue of processors ?
        lo_mutator_queue->add( kHGwlzUrcuWxYGvxpUmmhFTcRDbOtm=>new( ii_mapper ) ).
      ENDIF.
      IF ii_filter IS BOUND.
        lo_mutator_queue->add( kHGwlzUrcuWxYGvxpUmmlwblMIpVBS=>new( ii_filter ) ).
      ENDIF.
      lo_mutator_queue->iUFTszUrcuWxYGvxpUmmtzVIYRIbuu~run(
        EXPORTING
          it_source_tree = ii_source_json->mt_json_tree
        IMPORTING
          et_dest_tree = ro_instance->mt_json_tree ).
    ENDIF.

  ENDMETHOD.
  METHOD delete_subtree.

    DATA lv_parent_path TYPE string.
    DATA lr_parent LIKE ir_parent.

    READ TABLE mt_json_tree INTO rs_top_node
      WITH KEY
        path = iv_path
        name = iv_name.
    IF sy-subrc <> 0.
      RETURN. " Not found ? nothing to delete !
    ENDIF.

    DELETE mt_json_tree INDEX sy-tabix. " where path = iv_path and name = iv_name.

    IF rs_top_node-children > 0. " only for objects and arrays
      lv_parent_path = iv_path && iv_name && '/*'.
      DELETE mt_json_tree WHERE path CP lv_parent_path.
    ENDIF.

    " decrement parent children
    IF ir_parent IS SUPPLIED.
      ir_parent->children = ir_parent->children - 1.
    ELSE.
      lr_parent = get_item( iv_path ).
      IF lr_parent IS NOT INITIAL.
        lr_parent->children = lr_parent->children - 1.
      ENDIF.
    ENDIF.

  ENDMETHOD.
  METHOD get_item.

    FIELD-SYMBOLS <item> LIKE LINE OF mt_json_tree.
    DATA ls_path_name TYPE z2ui5_if_ajson_types=>ty_path_name.
    ls_path_name = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>split_path( iv_path ).

    READ TABLE mt_json_tree
      ASSIGNING <item>
      WITH KEY
        path = ls_path_name-path
        name = ls_path_name-name.
    IF sy-subrc = 0.
      GET REFERENCE OF <item> INTO rv_item.
    ENDIF.

  ENDMETHOD.
  METHOD new.
    CREATE OBJECT ro_instance
      EXPORTING
        iv_to_abap_corresponding_only = iv_to_abap_corresponding_only
        iv_format_datetime            = iv_format_datetime
        iv_keep_item_order            = iv_keep_item_order.
  ENDMETHOD.
  METHOD parse.

    DATA lo_parser TYPE REF TO kHGwlzUrcuWxYGvxpUmmfipvepHQnc.

    CREATE OBJECT ro_instance.
    CREATE OBJECT lo_parser.
    ro_instance->mt_json_tree = lo_parser->parse(
      iv_json            = iv_json
      iv_keep_item_order = iv_keep_item_order ).
    ro_instance->mi_custom_mapping = ii_custom_mapping.
    ro_instance->ms_opts-keep_item_order = iv_keep_item_order.

    IF iv_freeze = abap_true.
      ro_instance->freeze( ).
    ENDIF.

  ENDMETHOD.
  METHOD prove_path_exists.

    DATA lt_path TYPE string_table.
    DATA lr_node_parent LIKE rr_end_node.
    DATA lv_cur_path TYPE string.
    DATA lv_cur_name TYPE string.
    DATA ls_new_node LIKE LINE OF mt_json_tree.

    SPLIT iv_path AT '/' INTO TABLE lt_path.
    DELETE lt_path WHERE table_line IS INITIAL.

    DO.
      lr_node_parent = rr_end_node.
      READ TABLE mt_json_tree REFERENCE INTO rr_end_node
        WITH KEY
          path = lv_cur_path
          name = lv_cur_name.
      IF sy-subrc <> 0. " New node, assume it is always object as it has a named child, use touch_array to init array
        CLEAR ls_new_node.
        IF lr_node_parent IS NOT INITIAL. " if has parent
          lr_node_parent->children = lr_node_parent->children + 1.
          IF lr_node_parent->type = z2ui5_if_ajson_types=>node_type-array.
            ls_new_node-index = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>validate_array_index(
              iv_path  = lv_cur_path
              iv_index = lv_cur_name ).
          ENDIF.
        ENDIF.
        ls_new_node-path = lv_cur_path.
        ls_new_node-name = lv_cur_name.
        ls_new_node-type = z2ui5_if_ajson_types=>node_type-object.
        INSERT ls_new_node INTO TABLE mt_json_tree REFERENCE INTO rr_end_node.
      ENDIF.
      lv_cur_path = lv_cur_path && lv_cur_name && '/'.
      READ TABLE lt_path INDEX sy-index INTO lv_cur_name.
      IF sy-subrc <> 0.
        EXIT. " no more segments
      ENDIF.
    ENDDO.

  ENDMETHOD.
  METHOD read_only_watchdog.
    IF ms_opts-read_only = abap_true.
      z2ui5_cx_ajson_error=>raise( 'This json instance is read only' ).
    ENDIF.
  ENDMETHOD.
  METHOD z2ui5_if_ajson~array_to_string_table.

    DATA lv_normalized_path TYPE string.
    DATA lr_node TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    FIELD-SYMBOLS <item> LIKE LINE OF mt_json_tree.

    lv_normalized_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>normalize_path( iv_path ).
    lr_node = get_item( iv_path ).

    IF lr_node IS INITIAL.
      z2ui5_cx_ajson_error=>raise( |Path not found: { iv_path }| ).
    ENDIF.
    IF lr_node->type <> z2ui5_if_ajson_types=>node_type-array.
      z2ui5_cx_ajson_error=>raise( |Array expected at: { iv_path }| ).
    ENDIF.

    LOOP AT mt_json_tree ASSIGNING <item> WHERE path = lv_normalized_path.
      CASE <item>-type.
        WHEN z2ui5_if_ajson_types=>node_type-number OR z2ui5_if_ajson_types=>node_type-string.
          APPEND <item>-value TO rt_string_table.
        WHEN z2ui5_if_ajson_types=>node_type-null.
          APPEND '' TO rt_string_table.
        WHEN z2ui5_if_ajson_types=>node_type-boolean.
          DATA lv_tmp TYPE string.
          IF <item>-value = 'true'.
            lv_tmp = abap_true.
          ELSE.
            CLEAR lv_tmp.
          ENDIF.
          APPEND lv_tmp TO rt_string_table.
        WHEN OTHERS.
          z2ui5_cx_ajson_error=>raise( |Cannot convert [{ <item>-type
            }] to string at [{ <item>-path }{ <item>-name }]| ).
      ENDCASE.
    ENDLOOP.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~clear.

    read_only_watchdog( ).
    CLEAR mt_json_tree.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~clone.
    ri_json = create_from( me ).
  ENDMETHOD.
  METHOD z2ui5_if_ajson~delete.

    read_only_watchdog( ).

    DATA ls_split_path TYPE z2ui5_if_ajson_types=>ty_path_name.
    ls_split_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>split_path( iv_path ).

    delete_subtree(
      iv_path = ls_split_path-path
      iv_name = ls_split_path-name ).

    ri_json = me.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~exists.
    rv_exists = boolc( get_item( iv_path ) IS NOT INITIAL ).
  ENDMETHOD.
  METHOD z2ui5_if_ajson~filter.
    ri_json = create_from(
      ii_source_json = me
      ii_filter      = ii_filter ).
  ENDMETHOD.
  METHOD z2ui5_if_ajson~format_datetime.
    ms_opts-format_datetime = iv_use_iso.
    ri_json = me.
  ENDMETHOD.
  METHOD z2ui5_if_ajson~freeze.
    ms_opts-read_only = abap_true.
  ENDMETHOD.
  METHOD z2ui5_if_ajson~get.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS NOT INITIAL.
      rv_value = lr_item->value.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_boolean.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS INITIAL OR lr_item->type = z2ui5_if_ajson_types=>node_type-null.
      RETURN.
    ELSEIF lr_item->type = z2ui5_if_ajson_types=>node_type-boolean.
      rv_value = boolc( lr_item->value = 'true' ).
    ELSEIF lr_item->value IS NOT INITIAL.
      rv_value = abap_true.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_date.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    DATA lv_y TYPE c LENGTH 4.
    DATA lv_m TYPE c LENGTH 2.
    DATA lv_d TYPE c LENGTH 2.

    lr_item = get_item( iv_path ).

    IF lr_item IS NOT INITIAL AND lr_item->type = z2ui5_if_ajson_types=>node_type-string.
      FIND FIRST OCCURRENCE OF REGEX '^(\d{4})-(\d{2})-(\d{2})(T|$)'
        IN lr_item->value
        SUBMATCHES lv_y lv_m lv_d.
      CONCATENATE lv_y lv_m lv_d INTO rv_value.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_integer.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS NOT INITIAL AND lr_item->type = z2ui5_if_ajson_types=>node_type-number.
      rv_value = lr_item->value.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_node_type.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS NOT INITIAL.
      rv_node_type = lr_item->type.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_number.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS NOT INITIAL AND lr_item->type = z2ui5_if_ajson_types=>node_type-number.
      rv_value = lr_item->value.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_string.

    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    lr_item = get_item( iv_path ).
    IF lr_item IS NOT INITIAL AND lr_item->type <> z2ui5_if_ajson_types=>node_type-null.
      rv_value = lr_item->value.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~get_timestamp.

    DATA lo_to_abap TYPE REF TO kHGwlzUrcuWxYGvxpUmmXxNdxsjJjI.
    DATA lr_item TYPE REF TO z2ui5_if_ajson_types=>ty_node.

    lr_item = get_item( iv_path ).

    IF lr_item IS INITIAL.
      RETURN.
    ENDIF.

    CREATE OBJECT lo_to_abap.

    TRY.
        rv_value = lo_to_abap->to_timestamp( lr_item->value ).
      CATCH z2ui5_cx_ajson_error.
        RETURN.
    ENDTRY.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~is_empty.
    rv_yes = boolc( lines( mt_json_tree ) = 0 ).
  ENDMETHOD.
  METHOD z2ui5_if_ajson~keep_item_order.
    ms_opts-keep_item_order = abap_true.
    ri_json = me.
  ENDMETHOD.
  METHOD z2ui5_if_ajson~map.
    ri_json = create_from(
      ii_source_json = me
      ii_mapper      = ii_mapper ).
  ENDMETHOD.
  METHOD z2ui5_if_ajson~members.

    DATA lv_normalized_path TYPE string.
    FIELD-SYMBOLS <item> LIKE LINE OF mt_json_tree.

    lv_normalized_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>normalize_path( iv_path ).

    LOOP AT mt_json_tree ASSIGNING <item> WHERE path = lv_normalized_path.
      APPEND <item>-name TO rt_members.
    ENDLOOP.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~opts.
    rs_opts = ms_opts.
  ENDMETHOD.
  METHOD z2ui5_if_ajson~push.

    DATA lr_parent TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    DATA lr_new_node TYPE REF TO z2ui5_if_ajson_types=>ty_node.

    read_only_watchdog( ).

    lr_parent = get_item( iv_path ).

    IF lr_parent IS INITIAL.
      z2ui5_cx_ajson_error=>raise( |Path [{ iv_path }] does not exist| ).
    ENDIF.

    IF lr_parent->type <> z2ui5_if_ajson_types=>node_type-array.
      z2ui5_cx_ajson_error=>raise( |Path [{ iv_path }] is not array| ).
    ENDIF.

    DATA lt_new_nodes TYPE z2ui5_if_ajson_types=>ty_nodes_tt.
    DATA ls_new_path TYPE z2ui5_if_ajson_types=>ty_path_name.
    DATA lv_new_index TYPE i.

    lv_new_index     = lr_parent->children + 1.
    ls_new_path-path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>normalize_path( iv_path ).
    ls_new_path-name = |{ lv_new_index }|.

    lt_new_nodes = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>convert(
      is_opts            = ms_opts
      iv_data   = iv_val
      is_prefix = ls_new_path ).
    READ TABLE lt_new_nodes INDEX 1 REFERENCE INTO lr_new_node. " assume first record is the array item - not ideal !
    ASSERT sy-subrc = 0.
    lr_new_node->index = lv_new_index.

    " update data
    lr_parent->children = lv_new_index.
    INSERT LINES OF lt_new_nodes INTO TABLE mt_json_tree.

    ri_json = me.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set.

    DATA ls_split_path TYPE z2ui5_if_ajson_types=>ty_path_name.
    DATA lr_parent TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    DATA ls_deleted_node TYPE z2ui5_if_ajson_types=>ty_node.
    DATA lv_item_order TYPE z2ui5_if_ajson_types=>ty_node-order.

    read_only_watchdog( ).

    ri_json = me.

    IF iv_val IS INITIAL AND iv_ignore_empty = abap_true AND iv_node_type IS INITIAL.
      RETURN. " nothing to assign
    ENDIF.

    IF iv_node_type IS NOT INITIAL
      AND iv_node_type <> z2ui5_if_ajson_types=>node_type-boolean AND iv_node_type <> z2ui5_if_ajson_types=>node_type-null
      AND iv_node_type <> z2ui5_if_ajson_types=>node_type-number AND iv_node_type <> z2ui5_if_ajson_types=>node_type-string.
      z2ui5_cx_ajson_error=>raise( |Unexpected type { iv_node_type }| ).
    ENDIF.

    ls_split_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>split_path( iv_path ).
    IF ls_split_path IS INITIAL. " Assign root, exceptional processing
      IF iv_node_type IS NOT INITIAL.
        mt_json_tree = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>insert_with_type(
          is_opts            = ms_opts
          iv_data            = iv_val
          iv_type            = iv_node_type
          is_prefix          = ls_split_path
          ii_custom_mapping  = mi_custom_mapping ).
      ELSE.
        mt_json_tree = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>convert(
          is_opts            = ms_opts
          iv_data            = iv_val
          is_prefix          = ls_split_path
          ii_custom_mapping  = mi_custom_mapping ).
      ENDIF.
      RETURN.
    ENDIF.

    " Ensure whole path exists
    lr_parent = prove_path_exists( ls_split_path-path ).
    ASSERT lr_parent IS NOT INITIAL.

    " delete if exists with subtree
    ls_deleted_node = delete_subtree(
      ir_parent = lr_parent
      iv_path   = ls_split_path-path
      iv_name   = ls_split_path-name ).
    lv_item_order = ls_deleted_node-order.

    " convert to json
    DATA lt_new_nodes TYPE z2ui5_if_ajson_types=>ty_nodes_tt.
    DATA lv_array_index TYPE i.

    IF lr_parent->type = z2ui5_if_ajson_types=>node_type-array.
      lv_array_index = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>validate_array_index(
        iv_path  = ls_split_path-path
        iv_index = ls_split_path-name ).
    ELSEIF lr_parent->type = z2ui5_if_ajson_types=>node_type-object
      AND lv_item_order = 0 AND ms_opts-keep_item_order = abap_true.
      lv_item_order = lr_parent->children + 1.
    ENDIF.

    IF iv_node_type IS NOT INITIAL.
      lt_new_nodes = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>insert_with_type(
        is_opts            = ms_opts
        iv_item_order      = lv_item_order
        iv_data            = iv_val
        iv_type            = iv_node_type
        iv_array_index     = lv_array_index
        is_prefix          = ls_split_path
        ii_custom_mapping  = mi_custom_mapping ).
    ELSE.
      lt_new_nodes = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>convert(
        is_opts            = ms_opts
        iv_item_order      = lv_item_order
        iv_data            = iv_val
        iv_array_index     = lv_array_index
        is_prefix          = ls_split_path
        ii_custom_mapping  = mi_custom_mapping ).
    ENDIF.

    " update nodes
    IF lines( lt_new_nodes ) > 0.
      lr_parent->children = lr_parent->children + 1.
      INSERT LINES OF lt_new_nodes INTO TABLE mt_json_tree.
    ENDIF.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~setx.

    DATA lv_path TYPE string.
    DATA lv_val TYPE string.
    DATA lv_int TYPE i.
    DATA lv_dec TYPE decfloat34.
    DATA lv_last TYPE i.

    IF iv_param IS INITIAL.
      ri_json = me.
      RETURN.
    ENDIF.

    SPLIT iv_param AT ':' INTO lv_path lv_val.
    CONDENSE lv_path.
    CONDENSE lv_val.

    IF lv_val IS INITIAL.
      ri_json = me.
      RETURN. " Hmm ? or empty string ? or null ?
    ENDIF.

    IF go_float_regex IS NOT BOUND.
      CREATE OBJECT go_float_regex EXPORTING pattern = '^([1-9][0-9]*|0)\.[0-9]+$'.
      " expects fractional, because ints are detected separately
    ENDIF.

    IF lv_val = 'null'.
      z2ui5_if_ajson~set_null( lv_path ).
    ELSEIF lv_val = 'true'.
      z2ui5_if_ajson~set_boolean(
        iv_path = lv_path
        iv_val  = abap_true ).
    ELSEIF lv_val = 'false'.
      z2ui5_if_ajson~set_boolean(
        iv_path = lv_path
        iv_val  = abap_false ).
    ELSEIF lv_val CO '0123456789'.
      lv_int = lv_val.
      z2ui5_if_ajson~set_integer(
        iv_path = lv_path
        iv_val  = lv_int ).
    ELSEIF lv_val CO '0123456789.' AND go_float_regex->create_matcher( text = lv_val )->match( ) = abap_true.
      lv_dec = lv_val.
      z2ui5_if_ajson~set(
        iv_path = lv_path
        iv_val  = lv_dec ).
    ELSEIF lv_val+0(1) = '{' OR lv_val+0(1) = '['.
      "Expect object/array, but no further checks, parser will catch errors
      z2ui5_if_ajson~set(
        iv_path = lv_path
        iv_val  = parse(
          iv_json = lv_val
          iv_keep_item_order = ms_opts-keep_item_order ) ).
    ELSE. " string
      lv_last = strlen( lv_val ) - 1.
      IF lv_val+0(1) = '"' AND lv_val+lv_last(1) = '"'.
        lv_val = substring(
          val = lv_val
          off = 1
          len = lv_last - 1 ).
      ENDIF.
      z2ui5_if_ajson~set_string(
        iv_path = lv_path
        iv_val  = lv_val ).
    ENDIF.

    ri_json = me.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_boolean.

    ri_json = me.

    DATA lv_bool TYPE abap_bool.
    lv_bool = boolc( iv_val IS NOT INITIAL ).
    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = lv_bool ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_date.

    ri_json = me.

    DATA lv_val TYPE string.
    lv_val = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>format_date( iv_val ).

    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = lv_val ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_integer.

    ri_json = me.

    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = iv_val ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_null.

    ri_json = me.

    DATA lv_null_ref TYPE REF TO data.
    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = lv_null_ref ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_string.

    ri_json = me.

    DATA lv_val TYPE string.
    lv_val = iv_val.
    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = lv_val ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~set_timestamp.

    ri_json = me.

    DATA lv_timestamp_iso TYPE string.
    lv_timestamp_iso = kHGwlzUrcuWxYGvxpUmmeJqampzabz=>format_timestamp( iv_val ).

    z2ui5_if_ajson~set(
      iv_ignore_empty = abap_false
      iv_path = iv_path
      iv_val  = lv_timestamp_iso ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~slice.

    DATA lo_section         TYPE REF TO z2ui5_cl_ajson.
    DATA ls_item            LIKE LINE OF mt_json_tree.
    DATA lv_normalized_path TYPE string.
    DATA ls_path_parts      TYPE z2ui5_if_ajson_types=>ty_path_name.
    DATA lv_path_len        TYPE i.
    DATA lv_path_pattern    TYPE string.

    CREATE OBJECT lo_section.
    lv_normalized_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>normalize_path( iv_path ).
    lv_path_len        = strlen( lv_normalized_path ).
    ls_path_parts      = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>split_path( lv_normalized_path ).

    READ TABLE mt_json_tree INTO ls_item
      WITH KEY path = ls_path_parts-path name = ls_path_parts-name.
    IF sy-subrc <> 0.
      RETURN.
    ENDIF.

    CLEAR: ls_item-path, ls_item-name, ls_item-order. " this becomes a new root
    INSERT ls_item INTO TABLE lo_section->mt_json_tree.

    lv_path_pattern = lv_normalized_path && `*`.

    LOOP AT mt_json_tree INTO ls_item WHERE path CP lv_path_pattern.

      ls_item-path = substring( val = ls_item-path
                                off = lv_path_len - 1 ). " less closing '/'
      INSERT ls_item INTO TABLE lo_section->mt_json_tree.

    ENDLOOP.

    ri_json = lo_section.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~stringify.

    rv_json = kHGwlzUrcuWxYGvxpUmmFgyFungUrS=>stringify(
      it_json_tree       = mt_json_tree
      iv_keep_item_order = ms_opts-keep_item_order
      iv_indent          = iv_indent ).

  ENDMETHOD.
  METHOD z2ui5_if_ajson~touch_array.

    DATA lr_node TYPE REF TO z2ui5_if_ajson_types=>ty_node.
    DATA ls_deleted_node TYPE z2ui5_if_ajson_types=>ty_node.
    DATA ls_new_node LIKE LINE OF mt_json_tree.
    DATA ls_split_path TYPE z2ui5_if_ajson_types=>ty_path_name.

    read_only_watchdog( ).

    ls_split_path = kHGwlzUrcuWxYGvxpUmmzByNvbZmNu=>split_path( iv_path ).
    IF ls_split_path IS INITIAL. " Assign root, exceptional processing
      ls_new_node-path = ls_split_path-path.
      ls_new_node-name = ls_split_path-name.
      ls_new_node-type = z2ui5_if_ajson_types=>node_type-array.
      INSERT ls_new_node INTO TABLE mt_json_tree.
      RETURN.
    ENDIF.

    IF iv_clear = abap_true.
      ls_deleted_node = delete_subtree(
        iv_path = ls_split_path-path
        iv_name = ls_split_path-name ).
    ELSE.
      lr_node = get_item( iv_path ).
    ENDIF.

    IF lr_node IS INITIAL. " Or node was cleared

      DATA lr_parent TYPE REF TO z2ui5_if_ajson_types=>ty_node.
      lr_parent = prove_path_exists( ls_split_path-path ).
      ASSERT lr_parent IS NOT INITIAL.

      lr_parent->children = lr_parent->children + 1.

      ls_new_node-path = ls_split_path-path.
      ls_new_node-name = ls_split_path-name.
      ls_new_node-type = z2ui5_if_ajson_types=>node_type-array.

      IF ms_opts-keep_item_order = abap_true.
        IF ls_deleted_node IS NOT INITIAL.
          ls_new_node-order = ls_deleted_node-order.
        ELSE.
          ls_new_node-order = lr_parent->children.
        ENDIF.
      ENDIF.

      INSERT ls_new_node INTO TABLE mt_json_tree.

    ELSEIF lr_node->type <> z2ui5_if_ajson_types=>node_type-array.
      z2ui5_cx_ajson_error=>raise( |Path [{ iv_path }] already used and is not array| ).
    ENDIF.

    ri_json = me.

  ENDMETHOD.
  METHOD z2ui5_if_ajson~to_abap.

    DATA lo_to_abap TYPE REF TO kHGwlzUrcuWxYGvxpUmmXxNdxsjJjI.

    CLEAR ev_container.
    CREATE OBJECT lo_to_abap
      EXPORTING
        iv_corresponding  = boolc( iv_corresponding = abap_true OR ms_opts-to_abap_corresponding_only = abap_true )
        ii_custom_mapping = mi_custom_mapping.

    lo_to_abap->to_abap(
      EXPORTING
        it_nodes    = z2ui5_if_ajson~mt_json_tree
      CHANGING
        c_container = ev_container ).

  ENDMETHOD.

  METHOD z2ui5_if_ajson~to_abap_corresponding_only.
    ms_opts-to_abap_corresponding_only = iv_enable.
    ri_json = me.
  ENDMETHOD.
ENDCLASS.

CLASS zcl_abap2ui5_standalone DEFINITION FINAL CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES if_http_extension.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_abap2ui5_standalone IMPLEMENTATION.

  METHOD if_http_extension~handle_request.

    z2ui5_cl_http_handler=>factory( server )->main( ).

  ENDMETHOD.

ENDCLASS.


****************************************************
INTERFACE lif_abapmerge_marker.
* abapmerge 0.16.6 - 2025-02-12T14:04:26.932Z
  CONSTANTS c_merge_timestamp TYPE string VALUE `2025-02-12T14:04:26.932Z`.
  CONSTANTS c_abapmerge_version TYPE string VALUE `0.16.6`.
ENDINTERFACE.


CLASS z2ui5_cl_my_standalone_app DEFINITION
  CREATE PUBLIC.

  PUBLIC SECTION.
    INTERFACES z2ui5_if_app.

    DATA name              TYPE string.
    DATA check_initialized TYPE abap_bool.

  PROTECTED SECTION.

  PRIVATE SECTION.
ENDCLASS.


CLASS z2ui5_cl_my_standalone_app IMPLEMENTATION.

  METHOD z2ui5_if_app~main.

    IF check_initialized = abap_false.
      check_initialized = abap_true.

      client->view_display( z2ui5_cl_xml_view=>factory(
        )->shell(
        )->page( title = 'abap2UI5 - Hello abap2UI5 Standalone World'
        )->simple_form( editable = abap_true
            )->content( ns = `form`
                )->title( 'Make an input here and send it to the server...'
                )->label( 'Name'
                )->input( client->_bind_edit( name )
                )->button( text  = 'post'
                           press = client->_event( 'BUTTON_POST' )
        )->stringify( ) ).

    ENDIF.

    CASE client->get( )-event.
      WHEN 'BUTTON_POST'.
        client->message_box_display( |Your name is { name }| ).
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

ENDCLASS.
****************************************************
